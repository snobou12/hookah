[{"/root/client/hookan/src/index.js":"1","/root/client/hookan/src/frontend/components/app/App.js":"2","/root/client/hookan/src/frontend/redux/store.js":"3","/root/client/hookan/src/frontend/components/index.js":"4","/root/client/hookan/src/frontend/redux/actions/nowData.js":"5","/root/client/hookan/src/frontend/components/BurgerMenu.jsx":"6","/root/client/hookan/src/frontend/pages/index.js":"7","/root/client/hookan/src/frontend/redux/reducers/index.js":"8","/root/client/hookan/src/frontend/components/AboutSection.jsx":"9","/root/client/hookan/src/frontend/components/Footer.jsx":"10","/root/client/hookan/src/frontend/components/Header.jsx":"11","/root/client/hookan/src/frontend/components/YandexMap.jsx":"12","/root/client/hookan/src/frontend/components/MenuSection.jsx":"13","/root/client/hookan/src/frontend/components/GalerySliderWrapper.jsx":"14","/root/client/hookan/src/frontend/components/TableModal.jsx":"15","/root/client/hookan/src/frontend/components/TrBlockTables.jsx":"16","/root/client/hookan/src/frontend/components/EventSection.jsx":"17","/root/client/hookan/src/frontend/components/TrBlockEvents.jsx":"18","/root/client/hookan/src/frontend/components/EventRequestSection.jsx":"19","/root/client/hookan/src/frontend/components/TopImg.jsx":"20","/root/client/hookan/src/frontend/components/TrBLockComp.jsx":"21","/root/client/hookan/src/frontend/components/ButtonClientAddComp.jsx":"22","/root/client/hookan/src/frontend/components/NewsSection.jsx":"23","/root/client/hookan/src/frontend/components/ButtonClientAddEvents.jsx":"24","/root/client/hookan/src/frontend/components/ButtonClientAddTables.jsx":"25","/root/client/hookan/src/frontend/redux/reducers/headerMenu.js":"26","/root/client/hookan/src/frontend/redux/reducers/nowData.js":"27","/root/client/hookan/src/frontend/redux/reducers/serverMethods.js":"28","/root/client/hookan/src/frontend/redux/reducers/tableReserve.js":"29","/root/client/hookan/src/frontend/redux/reducers/refEvent.js":"30","/root/client/hookan/src/frontend/pages/MenuPageHookan.jsx":"31","/root/client/hookan/src/frontend/pages/MainPage.jsx":"32","/root/client/hookan/src/frontend/pages/MenuPageDrinks.jsx":"33","/root/client/hookan/src/frontend/pages/GaleryPage.jsx":"34","/root/client/hookan/src/frontend/pages/NewsPage.jsx":"35","/root/client/hookan/src/frontend/pages/MenuPageTea.jsx":"36","/root/client/hookan/src/frontend/pages/AdminPage.jsx":"37","/root/client/hookan/src/frontend/redux/actions/serverMethods.js":"38","/root/client/hookan/src/frontend/redux/actions/headerMenu.js":"39","/root/client/hookan/src/frontend/redux/actions/refEvent.js":"40","/root/client/hookan/src/frontend/components/CallSubject.jsx":"41"},{"size":596,"mtime":1611011888422,"results":"42","hashOfConfig":"43"},{"size":2193,"mtime":1612957692336,"results":"44","hashOfConfig":"43"},{"size":341,"mtime":1611011888422,"results":"45","hashOfConfig":"43"},{"size":1116,"mtime":1612957640712,"results":"46","hashOfConfig":"43"},{"size":82,"mtime":1611011888422,"results":"47","hashOfConfig":"43"},{"size":1535,"mtime":1611011888418,"results":"48","hashOfConfig":"43"},{"size":387,"mtime":1611011888422,"results":"49","hashOfConfig":"43"},{"size":508,"mtime":1611011888422,"results":"50","hashOfConfig":"43"},{"size":2371,"mtime":1612957793071,"results":"51","hashOfConfig":"43"},{"size":3933,"mtime":1611168465144,"results":"52","hashOfConfig":"43"},{"size":2588,"mtime":1611011888418,"results":"53","hashOfConfig":"43"},{"size":441,"mtime":1611011888418,"results":"54","hashOfConfig":"43"},{"size":2877,"mtime":1611011888418,"results":"55","hashOfConfig":"43"},{"size":1856,"mtime":1611519032857,"results":"56","hashOfConfig":"43"},{"size":14223,"mtime":1611518247590,"results":"57","hashOfConfig":"43"},{"size":8287,"mtime":1611520259126,"results":"58","hashOfConfig":"43"},{"size":2372,"mtime":1611011888418,"results":"59","hashOfConfig":"43"},{"size":6633,"mtime":1611520244742,"results":"60","hashOfConfig":"43"},{"size":5406,"mtime":1611184716689,"results":"61","hashOfConfig":"43"},{"size":728,"mtime":1611011888418,"results":"62","hashOfConfig":"43"},{"size":5853,"mtime":1611520191550,"results":"63","hashOfConfig":"43"},{"size":5115,"mtime":1611519473131,"results":"64","hashOfConfig":"43"},{"size":18018,"mtime":1611530675263,"results":"65","hashOfConfig":"43"},{"size":5824,"mtime":1611519485811,"results":"66","hashOfConfig":"43"},{"size":7200,"mtime":1611519502719,"results":"67","hashOfConfig":"43"},{"size":421,"mtime":1611011888422,"results":"68","hashOfConfig":"43"},{"size":228,"mtime":1611011888422,"results":"69","hashOfConfig":"43"},{"size":776,"mtime":1611011888422,"results":"70","hashOfConfig":"43"},{"size":393,"mtime":1611011888422,"results":"71","hashOfConfig":"43"},{"size":223,"mtime":1611011888422,"results":"72","hashOfConfig":"43"},{"size":2194,"mtime":1611168465144,"results":"73","hashOfConfig":"43"},{"size":1150,"mtime":1611011888422,"results":"74","hashOfConfig":"43"},{"size":2132,"mtime":1611011888422,"results":"75","hashOfConfig":"43"},{"size":478,"mtime":1611011888422,"results":"76","hashOfConfig":"43"},{"size":404,"mtime":1611011888422,"results":"77","hashOfConfig":"43"},{"size":2134,"mtime":1611518827595,"results":"78","hashOfConfig":"43"},{"size":8824,"mtime":1611603492869,"results":"79","hashOfConfig":"43"},{"size":5203,"mtime":1611520315829,"results":"80","hashOfConfig":"43"},{"size":181,"mtime":1611011888422,"results":"81","hashOfConfig":"43"},{"size":78,"mtime":1611011888422,"results":"82","hashOfConfig":"43"},{"size":1022,"mtime":1612957478961,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"z3op8h",{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"123","usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"129","usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"137","usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"146","usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"149","usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"86"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"86"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/root/client/hookan/src/index.js",[],["190","191"],"/root/client/hookan/src/frontend/components/app/App.js",["192"],"import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setNowData } from '../../redux/actions/nowData';\n\nimport {\n  GaleryPage,\n  MainPage,\n  MenuPageHookan,\n  NewsPage,\n  AdminPage,\n  MenuPageDrinks,\n  MenuPageTea,\n} from '../../pages';\nimport { Footer, Header, YandexMap } from '../';\n\nimport '../../css/App.css';\nimport CallSubject from '../CallSubject';\nimport BurgerMenu from '../BurgerMenu';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const activeItemHeader = useSelector(({ headerMenu }) => headerMenu.activeItemHeader);\n\n  const smoothToUp = () => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  };\n  React.useEffect(() => {\n    const arrDate = [];\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let ddNumber = Number(dd);\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\n    let yyyy = today.getFullYear();\n    for (let i = 0; i < 7; i++) {\n      arrDate.push((today = ddNumber + i + '/' + mm + '/' + yyyy));\n    }\n    dispatch(setNowData(arrDate));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"burgerMenuContent\">\n        <BurgerMenu />\n      </div>\n      <div className=\"main-wrapper\">\n        <Header clickSmooth={smoothToUp} activeItemProp={activeItemHeader} />\n\n        <div className=\"contentPage\">\n          <Route path=\"/\" exact>\n            <MainPage clickSmooth={smoothToUp} />\n          </Route>\n          <Route path=\"/galery\" exact>\n            <GaleryPage />\n          </Route>\n\n          <Route path=\"/menu/hookan\" exact>\n            <MenuPageHookan />\n          </Route>\n          <Route path=\"/menu/drinks\" exact>\n            <MenuPageDrinks />\n          </Route>\n          <Route path=\"/menu/tea\" exact>\n            <MenuPageTea />\n          </Route>\n\n          <Route path=\"/news\" exact>\n            <NewsPage />\n          </Route>\n          <Route path=\"/admin\" exact>\n            <AdminPage />\n          </Route>\n        </div>\n        <YandexMap />\n\n        <Footer clickSmooth={smoothToUp} />\n        <CallSubject />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/root/client/hookan/src/frontend/redux/store.js",[],"/root/client/hookan/src/frontend/components/index.js",[],"/root/client/hookan/src/frontend/redux/actions/nowData.js",[],"/root/client/hookan/src/frontend/components/BurgerMenu.jsx",[],"/root/client/hookan/src/frontend/pages/index.js",[],"/root/client/hookan/src/frontend/redux/reducers/index.js",[],"/root/client/hookan/src/frontend/components/AboutSection.jsx",["193","194","195"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Container, Image } from 'react-bootstrap';\r\n\r\nimport '../css/AboutSection.css';\r\n\r\nimport aboutSectionImg1 from '../../assets/image/aboutSectionImg2.jpg';\r\nimport aboutSectionImg1Small from '../../assets/image/aboutSectionImg2Small.jpg';\r\n\r\n{\r\n}\r\nfunction AboutSection({ smoothProp }) {\r\n  return (\r\n    <div className=\"about-section-wrapper\">\r\n      <Container className=\"fullFirstContainer pb-5\" fluid>\r\n        <Row className=\"pt-5\">\r\n          <Col>\r\n            <h2 className=\"textTopAbout text-center \">О нас</h2>\r\n            <hr className=\"short text-center\" />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"rowAboutSection pt-5\">\r\n          <Col className=\"text-center\" sm={6}>\r\n            <a data-fancybox=\"gallery\" href={aboutSectionImg1}>\r\n              <img className=\"mainImgAboutSection\" alt=\"aboutImg\" src={aboutSectionImg1} />\r\n            </a>\r\n          </Col>\r\n          <Col className=\"pdTextAbout pt-5\" sm={6}>\r\n            <div className=\"text-justify textDownAbout\">\r\n              Здравствуйте, меня зовут Иван! Я владелец Cosanostra.narvskiy Работа в этом заведении\r\n              для меня прежде всего любимое дело, в которое я вкладываю все свои силы и душу!\r\n              Приходите к нам для встречи с друзьями и просто отдохнуть! Буду рад Вас видеть! <br />\r\n              К Вашим услугам: <br /> - потрясающие паровые коктейли на Premium смесях\r\n              <br /> - VIP комната с Караоке <br />- 3 игровые зоны Xbox, PS4\r\n              <br /> - Настольные игры <br />- Вкуснейшие чаи и другие напитки\r\n              <br />- Нет пробкового сбора\r\n            </div>\r\n            <div className=\"pt-5 text-center\">\r\n              <Link onClick={smoothProp} to=\"/galery\">\r\n                <button className=\"btnMyAbout \">Просмотреть галерею</button>\r\n              </Link>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutSection;\r\n","/root/client/hookan/src/frontend/components/Footer.jsx",[],"/root/client/hookan/src/frontend/components/Header.jsx",["196","197","198","199","200","201"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { BurgerMenu } from '../components';\nimport { Navbar, Container, NavbarBrand, Nav, Row, Col } from 'react-bootstrap';\nimport headerLogo from '../../assets/image/logo.png';\nimport NavbarToggle from 'react-bootstrap/esm/NavbarToggle';\nimport NavbarCollapse from 'react-bootstrap/esm/NavbarCollapse';\n\nimport '../css/Header.css';\nfunction Header({ activeItemProp, clickSmooth }) {\n  const [backgroundImageHeader, setBackgroundImageHeader] = React.useState('defaultHeader');\n  const [show, setShow] = React.useState(false);\n  const toggleShowClick = () => {\n    setShow(false);\n  };\n  const liItems = [\n    { name: 'МЕНЮ', link: 'menu/hookan', id: 1 },\n    { name: 'НОВОСТИ', link: 'news', id: 2 },\n    { name: 'ГАЛЕРЕЯ', link: 'galery', id: 0 },\n  ];\n  const listenScrollEvent = () => {\n    if (window.scrollY > 0) {\n      setBackgroundImageHeader('changeHeader');\n    } else {\n      setBackgroundImageHeader('defaultHeader');\n    }\n  };\n\n  const navbarStyle = {\n    height: '80px',\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('scroll', listenScrollEvent);\n  }, []);\n\n  return (\n    <div>\n      <Navbar\n        className={\n          backgroundImageHeader === 'defaultHeader' && activeItemProp === null\n            ? 'navbarBackGroundTop'\n            : 'navbarBackGroundDefault'\n        }\n        style={navbarStyle}\n        fixed=\"top\"\n        expand=\"md\"\n        bg=\"dark\"\n        variant=\"dark\">\n        <Container>\n          <NavbarBrand>\n            <Link to=\"/\">\n              <img onClick={() => clickSmooth()} src={headerLogo} alt=\"logo\" />\n            </Link>\n          </NavbarBrand>\n\n          <NavbarCollapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <div className=\"ulHeader\">\n                {liItems.map((obj) => (\n                  <li\n                    onClick={() => clickSmooth()}\n                    className={activeItemProp === obj.id ? 'active' : ''}\n                    key={`${obj.name}:${obj.id}`}>\n                    <Link key={obj.id} to={`/${obj.link}`}>\n                      {obj.name}{' '}\n                    </Link>\n                  </li>\n                ))}\n              </div>\n            </Nav>\n          </NavbarCollapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n}\nHeader.propTypes = {\n  activeItemProp: PropTypes.string.isRequired,\n  clickSmooth: PropTypes.func.isRequired,\n};\n\nHeader.defaultProps = {\n  activeItemProp: null,\n};\n\nexport default Header;\n","/root/client/hookan/src/frontend/components/YandexMap.jsx",["202"],"import React from 'react';\n\nclass YandexMap extends React.Component {\n  render() {\n    return (\n      <div className=\"wrapperGoogleMap\">\n        <iframe\n          src=\"https://yandex.ru/map-widget/v1/?um=constructor%3Ab2af018d5fcb1e75547ba387afaf8b1fd575e2ce9930f9c29cd42f1175ea84fe&amp;source=constructor\"\n          width=\"100%\"\n          height=\"300\"\n          frameBorder=\"0\"></iframe>\n      </div>\n    );\n  }\n}\nexport default YandexMap;\n","/root/client/hookan/src/frontend/components/MenuSection.jsx",[],"/root/client/hookan/src/frontend/components/GalerySliderWrapper.jsx",["203","204"],"import React from 'react';\n\nimport { Carousel } from 'react-bootstrap';\nimport sliderImg1 from '../../assets/image/top-slider-image1.jpg';\nimport sliderImg2 from '../../assets/image/top-slider-image2.jpg';\nimport sliderImg3 from '../../assets/image/top-slider-image3.jpg';\nimport sliderImg4 from '../../assets/image/top-slider-image4.jpg';\nimport sliderImg5 from '../../assets/image/top-slider-image5.jpg';\nimport sliderImg6 from '../../assets/image/top-slider-image6.jpg';\nimport sliderImg7 from '../../assets/image/top-slider-image7.jpg';\nimport '../css/GalerySliderWrapper.css';\nfunction GalerySliderWrapper() {\n  return (\n    <div className=\"topSlider-wrapper  \">\n      <div className=\"\">\n        <Carousel>\n         \n          <Carousel.Item>\n            <img className=\"d-block w-100\" src={sliderImg2} alt=\"\" />\n            <Carousel.Caption></Carousel.Caption>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img className=\"d-block w-100\" src={sliderImg3} alt=\"\" />\n            <Carousel.Caption></Carousel.Caption>\n          </Carousel.Item>\n          {/* <Carousel.Item>\n            <img className=\"d-block w-100\" src={sliderImg4} alt=\"\" />\n            <Carousel.Caption></Carousel.Caption>\n          </Carousel.Item> */}\n          <Carousel.Item>\n            <img className=\"d-block w-100\" src={sliderImg5} alt=\"\" />\n            <Carousel.Caption></Carousel.Caption>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img className=\"d-block w-100\" src={sliderImg6} alt=\"\" />\n            <Carousel.Caption></Carousel.Caption>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img className=\"d-block w-100\" src={sliderImg7} alt=\"\" />\n            <Carousel.Caption></Carousel.Caption>\n          </Carousel.Item>\n        </Carousel>\n      </div>\n    </div>\n  );\n}\n\nexport default GalerySliderWrapper;\n","/root/client/hookan/src/frontend/components/TableModal.jsx",["205","206","207","208"],"import React from 'react';\n\nimport closeIconModal from '../../assets/image/closeDoteModal.png';\nimport backGImage from '../../assets/image/dark-leather.png';\nimport { Link } from 'react-router-dom';\nimport { purple } from '@material-ui/core/colors';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { postInfoTable } from '../redux/actions/serverMethods';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { ModalConfirm } from '../components';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport '../css/TableModal.css';\n\nlet re = new RegExp('^.*[^A-zА-яЁё].*$');\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'black',\n  },\n  paper: {\n    borderRadius: '10px',\n    backgroundImage: `url(${backGImage})`,\n    backgroundPosition: 'center',\n    backgroundColor: ' white;',\n    border: '2px solid #000',\n    boxShadow: theme.shadows[0],\n    padding: theme.spacing(0, 0, 0),\n    width: '530px',\n    height: '430px',\n    ['@media (max-width:767px)']: { width: '375px', height: '650px' },\n  },\n\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  formControl: {\n    width: 193,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst useStylesConfirmModal = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'black',\n  },\n  paper: {\n    borderRadius: '10px',\n    backgroundImage: `url(${backGImage})`,\n    backgroundPosition: 'center',\n    backgroundColor: ' white;',\n    border: '2px solid #000',\n    boxShadow: theme.shadows[0],\n    padding: theme.spacing(0, 0, 0),\n    width: '500px',\n    height: '90px',\n    ['@media (max-width:767px)']: { width: '375px', height: '130px' },\n  },\n  imgClose: {\n    position: 'fixed',\n    top: 0,\n    right: 0,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  formControl: {\n    width: 193,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: purple[400],\n    '&$checked': {\n      color: purple[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'purple',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'purple',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'purple',\n      },\n      '&:hover fieldset': {\n        borderColor: 'purple',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'purple',\n      },\n    },\n  },\n})(TextField);\n\nfunction TableModal() {\n  const dispatch = useDispatch();\n  const smoothToPrice = () => {\n    window.scrollTo({\n      top: 900,\n      behavior: 'smooth',\n    });\n  };\n\n  const arrData = useSelector(({ nowData }) => nowData.data);\n  const arrTime = ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00', '00:00'];\n  const classes = useStyles();\n  const classesConfirmModal = useStylesConfirmModal();\n  const [open, setOpen] = React.useState(false);\n  const [oopsOpen, setOopsOpen] = React.useState(false);\n\n  const [name, setName] = React.useState('');\n  const [phone, setPhone] = React.useState('+7');\n  const [data, setData] = React.useState('');\n  const [time, setTime] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [count, setCount] = React.useState('');\n  const [check, setCheck] = React.useState(false);\n  const [checkName, setCheckName] = React.useState(false);\n  const [labelName, setLabelName] = React.useState('Ваше имя');\n\n  const [openConfirmModal, setopenConfirmModal] = React.useState(false);\n\n  const handleOpenConfirmModal = () => {\n    setopenConfirmModal(true);\n  };\n\n  const handleCloseConfirmModal = () => {\n    setopenConfirmModal(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setName('');\n    setPhone('+7');\n    setData('');\n    setTime('');\n    setDescription('');\n    setCount('');\n    setCheck(false);\n\n    setOpen(false);\n  };\n  const handleCloseOops = () => {\n    setOopsOpen(false);\n  };\n\n  const handleChangeDate = (event) => {\n    setData(event.target.value);\n  };\n\n  const handleChangeDescription = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleChangeCount = (event) => {\n    if (!isNaN(event.target.value) && event.target.value < 100) {\n      setCount(event.target.value);\n    }\n  };\n\n  const handleChangeTime = (event) => {\n    setTime(event.target.value);\n  };\n\n  const handleChangePhone = (event) => {\n    if (!isNaN(event.target.value) && event.target.value.length < 13) {\n      setPhone(event.target.value);\n    }\n  };\n\n  const handleChangeName = (event) => {\n    setName(event.target.value);\n    if (re.test(event.target.value)) {\n      setLabelName('Имя только из букв');\n      setCheckName(false);\n    } else {\n      setLabelName('Ваше имя');\n      setCheckName(true);\n    }\n  };\n\n  const checkChanger = () => {\n    setCheck(!check);\n  };\n  const confirmClick = (event) => {\n    if (\n      data === '' ||\n      time === '' ||\n      phone === '' ||\n      name === '' ||\n      count === '' ||\n      !check ||\n      !checkName\n    ) {\n      alert('Введите все данные');\n      event.preventDefault();\n    } else {\n      event.preventDefault();\n      let info = JSON.stringify({\n        name,\n        phone,\n        description,\n        count,\n        data,\n        time,\n      });\n      dispatch(postInfoTable(info));\n      handleOpenConfirmModal();\n    }\n  };\n\n  return (\n    <div>\n      <a className=\"btnMy\" onClick={handleOpen}>\n        ЗАБРОНИРОВАТЬ СТОЛ\n      </a>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={oopsOpen}\n        onClose={handleCloseOops}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={oopsOpen}>\n          <div className={classes.paper}>\n            {/* <img\n              className={classes.imgClose}\n              id=\"btnClose\"\n              onClick={handleCloseOops}\n              src={closeIconModal}\n              alt=\"\"\n            /> */}\n            <h2 id=\"tableNotAvailable\">Столов больше нет</h2>\n            <div id=\"tableNotAvailableText\">Заходите позже!</div>\n          </div>\n        </Fade>\n      </Modal>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <img\n              className=\"imgCloseDot m-2\"\n              id=\"btnClose\"\n              onClick={handleClose}\n              src={closeIconModal}\n              alt=\"\"\n            />\n\n            <form className={classes.root} noValidate>\n              <Container fluid>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"reserveTableText pt-5\">Забронировать столик</div>\n                  </Col>\n                </Row>\n                <Row className=\"rowTableModal pt-1\">\n                  <Col className=\"colRightTable\">\n                    <div className=\"item\">\n                      <CssTextField\n                        required\n                        className={classes.margin}\n                        id=\"1custom-css-standard-input\"\n                        label={labelName}\n                        onChange={handleChangeName}\n                        value={name}\n                      />\n                    </div>\n                  </Col>\n                  <Col className=\"colLeftTable\">\n                    <div className=\"item\">\n                      <CssTextField\n                        required\n                        className={classes.margin}\n                        label=\"Ваш телефон\"\n                        id=\"custom-css-standard-input\"\n                        value={phone}\n                        onChange={handleChangePhone}\n                      />\n                    </div>\n                  </Col>\n                </Row>\n                <Row className=\"rowTableModal pt-3 colRightTable\">\n                  <Col>\n                    <div className=\"item\">\n                      <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">Дата *</InputLabel>\n                        <Select\n                          required\n                          className=\"text-left\"\n                          labelId=\"demo-simple-select-label\"\n                          id=\"demo-simple-select\"\n                          value={data}\n                          onChange={handleChangeDate}>\n                          {arrData &&\n                            arrData.map((value, index) => (\n                              <MenuItem key={index} value={value}>\n                                {value}\n                              </MenuItem>\n                            ))}\n                        </Select>\n                      </FormControl>\n                    </div>\n                  </Col>\n                  <Col className=\"colLeftTable\">\n                    {' '}\n                    <div className=\"item\">\n                      <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">Время *</InputLabel>\n                        <Select\n                          required\n                          labelId=\"demo-simple-select-label\"\n                          id=\"demo-simple-select\"\n                          value={time}\n                          onChange={handleChangeTime}>\n                          {arrTime &&\n                            arrTime.map((value, index) => (\n                              <MenuItem key={index} value={value}>\n                                {value}\n                              </MenuItem>\n                            ))}\n                        </Select>\n                      </FormControl>\n                    </div>\n                  </Col>\n                </Row>\n\n                <Row className=\"rowTableModal pt-3\">\n                  <Col className=\"colRightTable\">\n                    <div className=\"item\">\n                      <CssTextField\n                        required\n                        className={classes.margin}\n                        id=\"custom-css-standard-input\"\n                        label=\"Кол-во человек\"\n                        onChange={handleChangeCount}\n                        value={count}\n                      />\n                    </div>\n                  </Col>\n                  <Col className=\"colLeftTable\">\n                    <div className=\"item\">\n                      <CssTextField\n                        required\n                        className={classes.margin}\n                        id=\"custom-css-standard-input\"\n                        label=\"Пожелания\"\n                        onChange={handleChangeDescription}\n                        value={description}\n                      />\n                    </div>\n                  </Col>\n                </Row>\n                <Row className=\"pt-3\">\n                  <Col className=\"text-center\">\n                    <div id=\"checkBox_Confirm\">\n                      <div id=\"checkBox\">\n                        <GreenCheckbox onClick={checkChanger} checked={check} />\n                        Согласен на обработку персональных данных *\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n\n                <div className=\"btn_priceInfo\">\n                  <div>\n                    <button onClick={confirmClick} className=\"btn2\">\n                      Отправить\n                    </button>\n                    <Modal\n                      aria-labelledby=\"transition-modal-title\"\n                      aria-describedby=\"transition-modal-description\"\n                      className={classesConfirmModal.modal}\n                      open={openConfirmModal}\n                      onClose={handleCloseConfirmModal}\n                      closeAfterTransition\n                      BackdropComponent={Backdrop}\n                      BackdropProps={{\n                        timeout: 500,\n                      }}>\n                      <Fade in={openConfirmModal}>\n                        <div className={classesConfirmModal.paper}>\n                          <h2 className=\"modalConfirmTopText\">Ваш столик забронирован!</h2>\n                          <p className=\"modalConfirmDownText\">\n                            В скором времени мы с вами свяжемся\n                          </p>\n                        </div>\n                      </Fade>\n                    </Modal>\n                  </div>\n\n                  <Link onClick={smoothToPrice} to=\"/menu/hookan\">\n                    <div className=\"priceInfo\">Все цены в разделе меню *</div>\n                  </Link>\n                </div>\n              </Container>\n            </form>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default TableModal;\n","/root/client/hookan/src/frontend/components/TrBlockTables.jsx",["209"],"import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deleteIdTableItems, editorIdTableItem } from '../redux/actions/serverMethods';\nimport Button from 'react-bootstrap/Button';\nimport Fade from '@material-ui/core/Fade';\nimport '../css/TrBlock.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'black',\n  },\n  paper: {\n    borderRadius: '10px',\n\n    backgroundPosition: 'center',\n    backgroundColor: ' white;',\n    border: '2px solid #000',\n    boxShadow: theme.shadows[0],\n    padding: theme.spacing(0, 0, 0),\n    width: '530px',\n    height: '480px',\n    ['@media (max-width:767px)']: { height: '480px' },\n  },\n  imgClose: {\n    float: 'right',\n    margin: 30,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  formControl: {\n    width: 193,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\nfunction TrBlock({ id, name, phone, data, time, count, description }) {\n  const [nameUser, setNameUser] = React.useState(name);\n  const handleChangeNameUser = (event) => {\n    setNameUser(event.target.value);\n  };\n\n  const [phoneUser, setPhoneUser] = React.useState(phone);\n  const handleChangePhoneUser = (event) => {\n    setPhoneUser(event.target.value);\n  };\n\n  const [dataUser, setDataUser] = React.useState(data);\n  const handleChangeDataUser = (event) => {\n    setDataUser(event.target.value);\n  };\n\n  const [timeUser, setTimeUser] = React.useState(time);\n  const handleChangeTimeUser = (event) => {\n    setTimeUser(event.target.value);\n  };\n\n  const [countUser, setCountUser] = React.useState(count);\n  const handleChangeCountUser = (event) => {\n    setCountUser(event.target.value);\n  };\n\n  const [descriptionUser, setDescriptionUser] = React.useState(description);\n  const handleChangeDescriptionUser = (event) => {\n    setDescriptionUser(event.target.value);\n  };\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    setNameUser(name);\n    setPhoneUser(phone);\n    setDataUser(data);\n    setTimeUser(time);\n    setCountUser(count);\n    setDescriptionUser(description);\n    setOpen(false);\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const dispatch = useDispatch();\n\n  const delIdItem = (ids) => {\n    let tokenFromLocalStorage = localStorage.getItem('token');\n    dispatch(deleteIdTableItems(ids, tokenFromLocalStorage));\n   \n  };\n\n  const editIdItem = (ids) => {\n    let info = JSON.stringify({\n      name: nameUser,\n      phone: phoneUser,\n      data: dataUser,\n      time: timeUser,\n      count: countUser,\n      description: descriptionUser,\n    });\n    let tokenFromLocalStorage = localStorage.getItem('token');\n    dispatch(editorIdTableItem(ids, info, tokenFromLocalStorage));\n  \n  };\n  return (\n    <>\n      <div>\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className={classes.modal}\n          open={open}\n          onClose={handleClose}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}>\n          <Fade in={open}>\n            <div className={classes.paper}>\n              <Container>\n                <Row>\n                  <Col className=\"text-center\">\n                    <h2 id=\"transition-modal-title\">Редактирование # {id}</h2>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">Имя</Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"redactor_item\">\n                      <input\n                        value={nameUser}\n                        onChange={handleChangeNameUser}\n                        type=\"text\"\n                        name=\"name\"\n                      />\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">Телефон</Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"redactor_item\">\n                      <input\n                        value={phoneUser}\n                        onChange={handleChangePhoneUser}\n                        type=\"text\"\n                        name=\"name\"\n                      />\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">Дата</Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"redactor_item\">\n                      <input\n                        value={dataUser}\n                        onChange={handleChangeDataUser}\n                        type=\"text\"\n                        name=\"name\"\n                      />\n                    </div>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col className=\"text-center\">Время</Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"redactor_item\">\n                      <input\n                        value={timeUser}\n                        onChange={handleChangeTimeUser}\n                        type=\"text\"\n                        name=\"name\"\n                      />\n                    </div>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col className=\"text-center\"> Кол.чел</Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"redactor_item\">\n                      <input\n                        value={countUser}\n                        onChange={handleChangeCountUser}\n                        type=\"text\"\n                        name=\"name\"\n                      />\n                    </div>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col className=\"text-center\"> Коммент</Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"redactor_item\">\n                      <input\n                        value={descriptionUser}\n                        onChange={handleChangeDescriptionUser}\n                        type=\"text\"\n                        name=\"name\"\n                      />\n                    </div>\n                  </Col>\n                </Row>\n                <Row className=\"pt-3\">\n                  <Col className=\"text-center\">\n                    <Button onClick={() => editIdItem(id)} variant=\"dark\">\n                      Сохранить\n                    </Button>\n                  </Col>\n                  <Col className=\"text-center\">\n                    <Button onClick={handleClose} variant=\"dark\">\n                      Отменить\n                    </Button>\n                  </Col>\n                </Row>\n              </Container>\n            </div>\n          </Fade>\n        </Modal>\n      </div>\n      <tr>\n        <td>{id}</td>\n        <td>{name}</td>\n        <td>{phone}</td>\n        <td>{data} </td>\n\n        <td>{time}</td>\n        <td>{count}</td>\n        <td>{description}</td>\n        <td>\n          <Button onClick={handleOpen} variant=\"dark\">\n            Изменить\n          </Button>\n        </td>\n        <td>\n          <Button onClick={() => delIdItem(id)} variant=\"dark\">\n            Удалить\n          </Button>\n        </td>\n        <td></td>\n      </tr>\n    </>\n  );\n}\nTrBlock.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  phone: PropTypes.string,\n  data: PropTypes.string,\n  clock: PropTypes.string,\n  count: PropTypes.string,\n  comment: PropTypes.string,\n};\nexport default TrBlock;\n","/root/client/hookan/src/frontend/components/EventSection.jsx",["210"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { IoIosCall } from 'react-icons/io';\n\nimport { BsPeopleFill, BsGeoAlt, BsCalendarFill } from 'react-icons/bs';\n\nimport '../css/EventSection.css';\n\nfunction EventSection() {\n  return (\n    <div className=\"event-section-wrapper\">\n      <Container className=\"pt-5 pb-5\">\n        <Row>\n          <Col sm=\"12\" className=\"topTextEvent text-center  \">\n            Ваше важное событие — наша грандиозная работа\n          </Col>\n        </Row>\n        <Row className=\"pb-5\">\n          <Col className=\"social text-center\" sm=\"3\">\n            <div className=\"pb-3 pt-5\">\n              <BsGeoAlt style={{ height: '30px', width: '30px' }} />\n            </div>\n\n            <h3 className=\"topTextItem text-center \">Расположение</h3>\n\n            <div>\n              ул. Промышленная, дом 6,\n              <br /> ЦФТ \"Нарвский\"\n              <span>, Санкт-Петербург</span>\n            </div>\n          </Col>\n          <Col className=\"social text-center\" sm=\"3\">\n            <div className=\"pb-3 pt-5\">\n              <BsPeopleFill style={{ height: '30px', width: '30px' }} />\n            </div>\n\n            <h3 className=\"topTextItem text-center \">Вместимость</h3>\n\n            <div>Банкет – до 25 человек</div>\n          </Col>\n\n          <Col className=\"social text-center\" sm=\"3\">\n            <div className=\"pb-3 pt-5\">\n              <IoIosCall style={{ height: '30px', width: '30px' }} />\n            </div>\n\n            <h3 className=\"topTextItem text-center \">Контактный номер</h3>\n\n            <div>+7(911)926-60-10</div>\n          </Col>\n          <Col className=\"social text-center\" sm=\"3\">\n            <div className=\"pb-3 pt-5\">\n              <BsCalendarFill className=\"text-danger\" style={{ height: '30px', width: '30px' }} />\n            </div>\n\n            <h3 className=\"topTextItem text-danger \">Забронировать</h3>\n\n            <div className=\"text-danger\">\n              Оставьте запрос — мы поможем устроить ваше мероприятие\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default EventSection;\n","/root/client/hookan/src/frontend/components/TrBlockEvents.jsx",["211"],"import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deleteIdEventItems, editorIdEventItems } from '../redux/actions/serverMethods';\nimport Fade from '@material-ui/core/Fade';\nimport { Button, Container, Col, Row } from 'react-bootstrap';\nimport '../css/TrBlock.css';\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'black',\n  },\n  paper: {\n    borderRadius: '10px',\n\n    backgroundPosition: 'center',\n    backgroundColor: ' white;',\n    border: '2px solid #000',\n    boxShadow: theme.shadows[0],\n    padding: theme.spacing(0, 0, 0),\n    width: '530px',\n    height: '380px',\n    ['@media (max-width:767px)']: { height: '480px' },\n  },\n  imgClose: {\n    float: 'right',\n    margin: 30,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  formControl: {\n    width: 193,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\nfunction TrBlockEvents({ id, name, phone, email, description }) {\n  const [nameUser, setNameUser] = React.useState(name);\n  const handleChangeNameUser = (event) => {\n    setNameUser(event.target.value);\n  };\n\n  const [phoneUser, setPhoneUser] = React.useState(phone);\n  const handleChangePhoneUser = (event) => {\n    setPhoneUser(event.target.value);\n  };\n\n  const [emailUser, setEmailUser] = React.useState(email);\n  const handleChangeEmailUser = (event) => {\n    setEmailUser(event.target.value);\n  };\n\n  const [descriptionUser, setDescriptionUser] = React.useState(description);\n  const handleChangeDescriptionUser = (event) => {\n    setDescriptionUser(event.target.value);\n  };\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    setNameUser(name);\n    setPhoneUser(phone);\n    setEmailUser(email);\n    setDescriptionUser(description);\n    setOpen(false);\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const dispatch = useDispatch();\n\n  const delIdItem = (ids) => {\n    let tokenFromLocalStorage = localStorage.getItem('token');\n    dispatch(deleteIdEventItems(ids, tokenFromLocalStorage));\n    \n  };\n\n  const editIdItem = (ids) => {\n    let info = JSON.stringify({\n      name: nameUser,\n      phone: phoneUser,\n      email: emailUser,\n      description: descriptionUser,\n    });\n    let tokenFromLocalStorage = localStorage.getItem('token');\n    dispatch(editorIdEventItems(ids, info, tokenFromLocalStorage));\n   \n  };\n  return (\n    <>\n      <div>\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className={classes.modal}\n          open={open}\n          onClose={handleClose}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}>\n          <Fade in={open}>\n            <div className={classes.paper}>\n              <Container fluid>\n                <h2 id=\"transition-modal-title\">Редактирование # {id}</h2>\n                <Row>\n                  <Col className=\"text-center\">Имя</Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    {' '}\n                    <div className=\"redactor_item\">\n                      <input\n                        value={nameUser}\n                        onChange={handleChangeNameUser}\n                        type=\"text\"\n                        name=\"name\"\n                      />\n                    </div>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col className=\"text-center\">Телефон</Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"redactor_item\">\n                      <input\n                        value={phoneUser}\n                        onChange={handleChangePhoneUser}\n                        type=\"text\"\n                        name=\"name\"\n                      />\n                    </div>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col className=\"text-center\">Емеил</Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"redactor_item\">\n                      <input\n                        value={emailUser}\n                        onChange={handleChangeEmailUser}\n                        type=\"text\"\n                        name=\"name\"\n                      />\n                    </div>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col className=\"text-center\">Коммент</Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"redactor_item\">\n                      <input\n                        value={descriptionUser}\n                        onChange={handleChangeDescriptionUser}\n                        type=\"text\"\n                        name=\"name\"\n                      />\n                    </div>\n                  </Col>\n                </Row>\n\n                <Row className=\"pt-3\">\n                  <Col className=\"text-center \">\n                    <Button onClick={() => editIdItem(id)} variant=\"dark\">\n                      Сохранить\n                    </Button>\n                  </Col>\n                  <Col className=\"text-center\">\n                    <Button onClick={handleClose} variant=\"dark\">\n                      Отменить\n                    </Button>\n                  </Col>\n                </Row>\n              </Container>\n            </div>\n          </Fade>\n        </Modal>\n      </div>\n      <tr>\n        <td>{id}</td>\n        <td>{name}</td>\n        <td>{phone}</td>\n        <td>{email}</td>\n        <td>{description}</td>\n        <td>\n          <Button onClick={handleOpen} variant=\"dark\">\n            Изменить\n          </Button>\n        </td>\n        <td>\n          <Button onClick={() => delIdItem(id)} variant=\"dark\">\n            Удалить\n          </Button>\n        </td>\n        <td></td>\n      </tr>\n    </>\n  );\n}\n\nTrBlockEvents.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  phone: PropTypes.string,\n  email: PropTypes.string,\n  comment: PropTypes.string,\n};\nexport default TrBlockEvents;\n","/root/client/hookan/src/frontend/components/EventRequestSection.jsx",["212","213"],"import React from 'react';\nimport { Container, Form, Row, Col } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport backGImage from '../../assets/image/dark-leather.png';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { postInfoEvent } from '../redux/actions/serverMethods';\n\nimport Button from 'react-bootstrap/Button';\nimport '../css/EventRequestSection.css';\n\nconst useStylesConfirmModal = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'black',\n  },\n  paper: {\n    borderRadius: '10px',\n    backgroundImage: `url(${backGImage})`,\n    backgroundPosition: 'center',\n    backgroundColor: ' white;',\n    border: '2px solid #000',\n    boxShadow: theme.shadows[0],\n    padding: theme.spacing(0, 0, 0),\n    width: '600px',\n    height: '90px',\n    ['@media (max-width:767px)']: { width: '375px', height: '130px' },\n  },\n  imgClose: {\n    float: 'right',\n    margin: 30,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  formControl: {\n    width: 193,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction EventRequestSection() {\n  const [openConfirmModal, setopenConfirmModal] = React.useState(false);\n\n  const handleOpenConfirmModal = () => {\n    setopenConfirmModal(true);\n  };\n\n  const handleCloseConfirmModal = () => {\n    setopenConfirmModal(false);\n  };\n  const dispatch = useDispatch();\n  const classesConfirmModal = useStylesConfirmModal();\n  const myRef = React.useRef();\n\n  const [nameUser, setNameUser] = React.useState('');\n  const [phoneUser, setPhoneUser] = React.useState('+7');\n  const [emailUser, setEmailUser] = React.useState('');\n  const [descriptionUser, setDescriptionUser] = React.useState('');\n\n  const handleChangeNameUser = (event) => {\n    setNameUser(event.target.value);\n  };\n\n  const handleChangePhoneUser = (event) => {\n    setPhoneUser(event.target.value);\n  };\n\n  const handleChangeEmailUser = (event) => {\n    setEmailUser(event.target.value);\n  };\n\n  const handleChangeDescriptionUser = (event) => {\n    setDescriptionUser(event.target.value);\n  };\n\n  const eventRequest = () => {\n    if (nameUser !== '' && phoneUser !== '' && emailUser !== '' && descriptionUser !== '') {\n      let info = JSON.stringify({\n        name: nameUser,\n        phone: phoneUser,\n        email: emailUser,\n        description: descriptionUser,\n      });\n      handleOpenConfirmModal();\n      dispatch(postInfoEvent(info));\n      // setInterval(() => {\n      //   dispatch(postInfoEvent(info));\n      // }, 3000);\n    } else {\n      alert('Введите данные');\n    }\n  };\n\n  return (\n    <div className=\"event-request-section-wrapper\">\n      <Container fluid ref={myRef} d className=\"uniInput pt-5 pb-5\">\n        <Row>\n          <Col className=\" text-center pb-5 \">\n            <h2 className=\"topTextRequest\">Оставить запрос на мероприятие</h2>\n            <hr className=\"short text-center\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"text-center pb-3 \">\n            <input value={nameUser} onChange={handleChangeNameUser} placeholder=\"ФИО\" type=\"text\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"text-center pb-3 \">\n            <input\n              value={phoneUser}\n              onChange={handleChangePhoneUser}\n              placeholder=\"Телефон\"\n              type=\"text\"\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"text-center pb-3 \">\n            <input\n              value={emailUser}\n              onChange={handleChangeEmailUser}\n              placeholder=\"Е-мейл\"\n              type=\"text\"\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"text-center pb-3 \">\n            <input\n              value={descriptionUser}\n              onChange={handleChangeDescriptionUser}\n              placeholder=\"Расскажите о мероприятии\"\n              type=\"text\"\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"text-center pb-5 \">\n            <Button onClick={eventRequest} style={{ width: '200px' }} variant=\"dark\">\n              <div className=\"btnRequest\">Отправить</div>\n            </Button>\n            <Modal\n              aria-labelledby=\"transition-modal-title\"\n              aria-describedby=\"transition-modal-description\"\n              className={classesConfirmModal.modal}\n              open={openConfirmModal}\n              onClose={handleCloseConfirmModal}\n              closeAfterTransition\n              BackdropComponent={Backdrop}\n              BackdropProps={{\n                timeout: 500,\n              }}>\n              <Fade in={openConfirmModal}>\n                <div className={classesConfirmModal.paper}>\n                  <h2 className=\"modalConfirmTopText\">Ваш мероприятие забронировано!</h2>\n                  <p className=\"modalConfirmDownText\">В скором времени мы с вами свяжемся</p>\n                </div>\n              </Fade>\n            </Modal>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default EventRequestSection;\n","/root/client/hookan/src/frontend/components/TopImg.jsx",[],"/root/client/hookan/src/frontend/components/TrBLockComp.jsx",["214","215","216"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteIdCompItems, editorIdCompItems, postInfoComp } from '../redux/actions/serverMethods';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Container, Col, Row } from 'react-bootstrap';\nimport Fade from '@material-ui/core/Fade';\nimport '../css/TrBlockComp.css';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'black',\n  },\n  paper: {\n    borderRadius: '10px',\n\n    backgroundPosition: 'center',\n    backgroundColor: ' white;',\n    border: '2px solid #000',\n    boxShadow: theme.shadows[0],\n    padding: theme.spacing(0, 0, 0),\n    width: '530px',\n    height: '320px',\n    ['@media (max-width:767px)']: { height: '480px' },\n  },\n  imgClose: {\n    float: 'right',\n    margin: 30,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  formControl: {\n    width: 193,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\nfunction TrBLockComp({ id, name, phone, points }) {\n  const [open, setOpen] = React.useState(false);\n\n  const [nameUser, setNameUser] = React.useState(name);\n  const handleChangeNameUser = (event) => {\n    setNameUser(event.target.value);\n  };\n\n  const [phoneUser, setPhoneUser] = React.useState(phone);\n  const handleChangePhoneUser = (event) => {\n    setPhoneUser(event.target.value);\n  };\n\n  const [pointsUser, setPointsUser] = React.useState(points);\n  const handleChangePointsUser = (event) => {\n    setPointsUser(event.target.value);\n  };\n  //////////////////////////////////////////////////////////////////////\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    setNameUser(name);\n    setPhoneUser(phone);\n    setPointsUser(points);\n    setOpen(false);\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const delIdItem = (ids) => {\n    let tokenFromLocalStorage = localStorage.getItem('token');\n    dispatch(deleteIdCompItems(ids, tokenFromLocalStorage));\n    \n  };\n\n  const editIdItem = (ids) => {\n    let info = JSON.stringify({\n      name: nameUser,\n      phone: phoneUser,\n      points: pointsUser,\n    });\n    let tokenFromLocalStorage = localStorage.getItem('token');\n    dispatch(editorIdCompItems(ids, info, tokenFromLocalStorage));\n   \n  };\n  return (\n    <>\n      <div>\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className={classes.modal}\n          open={open}\n          onClose={handleClose}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}>\n          <Fade in={open}>\n            <div className={classes.paper}>\n              <Container fluid>\n                <Row>\n                  <Col className=\"text-center\">\n                    <h2 id=\"transition-modal-title\">Редактирование # {id}</h2>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col className=\"text-center\">Имя</Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"redactor_item\">\n                      <input\n                        value={nameUser}\n                        onChange={handleChangeNameUser}\n                        type=\"text\"\n                        name=\"name\"\n                      />\n                    </div>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col className=\"text-center\">Телефон</Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"redactor_item\">\n                      <input\n                        value={phoneUser}\n                        onChange={handleChangePhoneUser}\n                        type=\"text\"\n                        name=\"name\"\n                      />\n                    </div>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col className=\"text-center\">Очки</Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"redactor_item\">\n                      <input\n                        value={pointsUser}\n                        onChange={handleChangePointsUser}\n                        type=\"text\"\n                        name=\"name\"\n                      />\n                    </div>\n                  </Col>\n                </Row>\n\n                <Row className=\"pt-3\">\n                  <Col className=\"text-center\">\n                    <Button onClick={() => editIdItem(id)} variant=\"dark\">\n                      Сохранить\n                    </Button>\n                  </Col>\n                  <Col className=\"text-center\">\n                    <Button onClick={handleClose} variant=\"dark\">\n                      Отменить\n                    </Button>\n                  </Col>\n                </Row>\n              </Container>\n            </div>\n          </Fade>\n        </Modal>\n      </div>\n      <tr>\n        <td>{id}</td>\n        <td>{name}</td>\n        <td>{phone}</td>\n        <td>{points}</td>\n        <td>\n          <Button onClick={handleOpen} variant=\"dark\">\n            Изменить\n          </Button>\n        </td>\n        <td>\n          <Button\n            onClick={() => {\n              delIdItem(id);\n            }}\n            variant=\"dark\">\n            Удалить\n          </Button>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nexport default TrBLockComp;\n","/root/client/hookan/src/frontend/components/ButtonClientAddComp.jsx",["217","218"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from 'react-bootstrap/Button';\nimport { postInfoComp } from '../redux/actions/serverMethods';\nimport Fade from '@material-ui/core/Fade';\nimport { Container, Row, Col } from 'react-bootstrap';\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'black',\n  },\n  paper: {\n    borderRadius: '10px',\n\n    backgroundPosition: 'center',\n    backgroundColor: ' white;',\n    border: '2px solid #000',\n    boxShadow: theme.shadows[0],\n    padding: theme.spacing(0, 0, 0),\n    width: '530px',\n    height: '340px',\n    ['@media (max-width:767px)']: { height: '480px' },\n  },\n  imgClose: {\n    float: 'right',\n    margin: 30,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  formControl: {\n    width: 193,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\nfunction ButtonClientAddComp() {\n  const [openAdd, setOpenAdd] = React.useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleOpenAdd = () => {\n    setOpenAdd(true);\n  };\n  const handleCloseAdd = () => {\n    setOpenAdd(false);\n  };\n  const addItemToComp = () => {\n    if (nameUserAdd != '') {\n      let info = JSON.stringify({\n        name: nameUserAdd,\n        phone: phoneUserAdd,\n        points: pointsUserAdd,\n      });\n      let token = localStorage.getItem('token');\n      dispatch(postInfoComp(info, token));\n      \n    } else {\n      alert('Введите хотя-бы имя');\n    }\n  };\n  const [nameUserAdd, setNameUserAdd] = React.useState('');\n  const handleChangeNameUserAdd = (event) => {\n    setNameUserAdd(event.target.value);\n  };\n\n  const [phoneUserAdd, setPhoneUserAdd] = React.useState('');\n  const handleChangePhoneUserAdd = (event) => {\n    setPhoneUserAdd(event.target.value);\n  };\n\n  const [pointsUserAdd, setPointsUserAdd] = React.useState('');\n  const handleChangePointsUserAdd = (event) => {\n    setPointsUserAdd(event.target.value);\n  };\n  return (\n    <div>\n      <Button onClick={handleOpenAdd} variant=\"dark\">\n        Добавить клиента\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={openAdd}\n        onClose={handleCloseAdd}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={openAdd}>\n          <div className={classes.paper}>\n            <Container fluid>\n              <Row>\n                <Col className=\"text-center\">\n                  <h2 id=\"transition-modal-title\">Новый клиент по конкурсу</h2>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center pt-1\">Имя</Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\">\n                  <div className=\"redactor_item\">\n                    <input\n                      value={nameUserAdd}\n                      onChange={handleChangeNameUserAdd}\n                      type=\"text\"\n                      name=\"name\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center pt-2\">Телефон</Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\">\n                  <div className=\"redactor_item\">\n                    <input\n                      value={phoneUserAdd}\n                      onChange={handleChangePhoneUserAdd}\n                      type=\"text\"\n                      name=\"name\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center pt-1\">Очки</Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\">\n                  <div className=\"redactor_item\">\n                    <input\n                      value={pointsUserAdd}\n                      onChange={handleChangePointsUserAdd}\n                      type=\"text\"\n                      name=\"name\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"pt-4\">\n                <Col className=\"text-center\">\n                  <Button onClick={addItemToComp} variant=\"dark\">\n                    Сохранить\n                  </Button>\n                </Col>\n                <Col className=\"text-center\">\n                  <Button onClick={handleCloseAdd} variant=\"dark\">\n                    Отменить\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ButtonClientAddComp;\n","/root/client/hookan/src/frontend/components/NewsSection.jsx",["219","220","221","222","223","224"],"import React from 'react';\r\n\r\nimport news1 from '../../assets/image/news1.jpg';\r\nimport news2 from '../../assets/image/news2.jpg';\r\nimport news3 from '../../assets/image/news3.jpg';\r\nimport news4 from '../../assets/image/news4.jpg';\r\n\r\nimport sale1 from '../../assets/image/sale1.jpg';\r\nimport sale2 from '../../assets/image/sale2.jpg';\r\nimport xboxEvent from '../../assets/image/xboxEventImg.jpg';\r\n\r\nimport { Container, CardDeck, Card, Button, Row, Col, ListGroup } from 'react-bootstrap';\r\nimport '../css/NewsSection.css';\r\nimport 'react-fancybox/lib/fancybox.css';\r\nfunction NewsSection() {\r\n  const arrNews = [{ name: 'Новости' }, { name: 'Акции' }, { name: 'Конкурсы' }];\r\n  return (\r\n    <div className=\"news-section-wrapper\">\r\n      <div className=\"lastNewsOS\">\r\n        <Container fluid>\r\n          {/* <Row className=\"pt-5 pb-5\">\r\n          <Col className=\"text-center\"></Col>\r\n          <Col className=\"text-center\">\r\n            <div className=\"liNewsItems\">\r\n              <ListGroup horizontal>\r\n                {arrNews.map((obj) => (\r\n                  <ListGroup.Item style={{ width: '200px' }}>\r\n                    <li>{obj.name}</li>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"text-center\"></Col>\r\n        </Row> */}\r\n\r\n          <Row>\r\n            <Col>\r\n              <div className=\"textTopNews pb-5\">\r\n                <h2 className=\"textTopNews text-center mt-5\">Последние новости</h2>\r\n                <hr className=\"short text-center\" />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"pt-5\">\r\n              <div className=\"cardItem1\">\r\n                <Card\r\n                  className=\"cardItem1\"\r\n                  style={{\r\n                    backgroundColor: '#230329',\r\n                    border: ' solid 5px white',\r\n                    borderRadius: '20px 20px 20px 20px',\r\n                    minWidth: '300px',\r\n                    height: '763px',\r\n                  }}>\r\n                  <Card.Img\r\n                    style={{ borderRadius: '20px 20px 0 0' }}\r\n                    height=\"300px\"\r\n                    variant=\"top\"\r\n                    src={news1}\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>\r\n                      <div className=\"textDownNews text-center bold\">Табак</div>\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                      <div className=\"textDownNews text-center\">\r\n                        Приходи к нам,чтобы попробовать один из самых дымных кальянов на\r\n                        Табабке💥💥💥 Куча разных вкусов табака от \"Кактуса с ромашкой\" до \"Секса на\r\n                        даче\"\r\n                      </div>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"pt-5\">\r\n              <Card\r\n                style={{\r\n                  backgroundColor: '#230329',\r\n                  border: ' solid 5px white',\r\n                  borderRadius: '20px 20px 20px 20px',\r\n                  minWidth: '300px',\r\n                  height: '763px',\r\n                }}>\r\n                <Card.Img\r\n                  style={{ borderRadius: '20px 20px 0 0' }}\r\n                  height=\"300px\"\r\n                  variant=\"top\"\r\n                  src={news2}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <div className=\"textDownNews text-center bold\">Интерьер</div>\r\n                  </Card.Title>\r\n                  <Card.Text>\r\n                    <div className=\"textDownNews text-center\">\r\n                      Небольшая обновочка интерьера.Теперь в нашем заведении стало намного\r\n                      комфортнее и уютнее!\r\n                    </div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col className=\"pt-5\">\r\n              <div className=\"cardItem3\">\r\n                <Card\r\n                  style={{\r\n                    backgroundColor: '#230329',\r\n                    border: ' solid 5px white',\r\n                    borderRadius: '20px 20px 20px 20px',\r\n                    minWidth: '300px',\r\n                    height: '763px',\r\n                  }}>\r\n                  <Card.Img\r\n                    style={{ borderRadius: '20px 20px 0 0' }}\r\n                    height=\"300px\"\r\n                    variant=\"top\"\r\n                    src={news3}\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>\r\n                      <div className=\"textDownNews text-center bold\">Мероприятие</div>\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                      <div className=\"textDownNews text-center\">\r\n                        Мы предлагаем вам забронировать наше помещение под любые виды мероприятий.\r\n                        Отметь праздник с лучшими друзьями в хорошей атмосфере с дымными кальянами!\r\n                      </div>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"pt-5\">\r\n              <Card\r\n                style={{\r\n                  backgroundColor: '#230329',\r\n                  border: ' solid 5px white',\r\n                  borderRadius: '20px 20px 20px 20px',\r\n                  minWidth: '300px',\r\n                  height: '763px',\r\n                }}>\r\n                <Card.Img\r\n                  style={{ borderRadius: '20px 20px 0 0' }}\r\n                  height=\"300px\"\r\n                  variant=\"top\"\r\n                  src={news4}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <div className=\"textDownNews text-center bold\">Караоке</div>\r\n                  </Card.Title>\r\n                  <Card.Text>\r\n                    <div className=\"textDownNews text-center\">\r\n                      Теперь в нашей VIP - комнате установлена КАРАОКЕ. Бронируйте ВИПку и\r\n                      наслаждайтесь отличным звуком и своим исполнением!\r\n                    </div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n\r\n      <div className=\"lastNewsMedia\">\r\n        <Container fluid>\r\n          <Row>\r\n            <Col>\r\n              <div className=\"textTopNews pb-5\">\r\n                <h2 className=\"textTopNews text-center mt-5\">Последние новости</h2>\r\n                <hr className=\"short text-center\" />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"pt-5\">\r\n              <div className=\"cardItem1\">\r\n                <Card\r\n                  className=\"cardItem1\"\r\n                  style={{\r\n                    backgroundColor: '#230329',\r\n                    border: ' solid 5px white',\r\n                    borderRadius: '20px 20px 20px 20px',\r\n                    minWidth: '300px',\r\n                    height: '763px',\r\n                  }}>\r\n                  <Card.Img\r\n                    style={{ borderRadius: '20px 20px 0 0' }}\r\n                    height=\"300px\"\r\n                    variant=\"top\"\r\n                    src={news1}\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>\r\n                      <div className=\"textDownNews text-center bold\">Табак</div>\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                      <div className=\"textDownNews text-center\">\r\n                        Приходи к нам,чтобы попробовать один из самых дымных кальянов на\r\n                        Табабке💥💥💥 Куча разных вкусов табака от \"Кактуса с ромашкой\" до \"Секса на\r\n                        даче\"\r\n                      </div>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"pt-5\">\r\n              <Card\r\n                style={{\r\n                  backgroundColor: '#230329',\r\n                  border: ' solid 5px white',\r\n                  borderRadius: '20px 20px 20px 20px',\r\n                  minWidth: '300px',\r\n                  height: '763px',\r\n                }}>\r\n                <Card.Img\r\n                  style={{ borderRadius: '20px 20px 0 0' }}\r\n                  height=\"300px\"\r\n                  variant=\"top\"\r\n                  src={news2}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <div className=\"textDownNews text-center bold\">Интерьер</div>\r\n                  </Card.Title>\r\n                  <Card.Text>\r\n                    <div className=\"textDownNews text-center\">\r\n                      Небольшая обновочка интерьера.Теперь в нашем заведении стало намного\r\n                      комфортнее и уютнее!\r\n                    </div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"pt-5\">\r\n              <div className=\"cardItem3\">\r\n                <Card\r\n                  style={{\r\n                    backgroundColor: '#230329',\r\n                    border: ' solid 5px white',\r\n                    borderRadius: '20px 20px 20px 20px',\r\n                    minWidth: '300px',\r\n                    height: '763px',\r\n                  }}>\r\n                  <Card.Img\r\n                    style={{ borderRadius: '20px 20px 0 0' }}\r\n                    height=\"300px\"\r\n                    variant=\"top\"\r\n                    src={news3}\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>\r\n                      <div className=\"textDownNews text-center bold\">Мероприятие</div>\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                      <div className=\"textDownNews text-center\">\r\n                        Мы предлагаем вам забронировать наше помещение под любые виды мероприятий.\r\n                        Отметь праздник с лучшими друзьями в хорошей атмосфере с дымными кальянами!\r\n                      </div>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"pt-5\">\r\n              <Card\r\n                style={{\r\n                  backgroundColor: '#230329',\r\n                  border: ' solid 5px white',\r\n                  borderRadius: '20px 20px 20px 20px',\r\n                  minWidth: '300px',\r\n                  height: '763px',\r\n                }}>\r\n                <Card.Img\r\n                  style={{ borderRadius: '20px 20px 0 0' }}\r\n                  height=\"300px\"\r\n                  variant=\"top\"\r\n                  src={news4}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <div className=\"textDownNews text-center bold\">Караоке</div>\r\n                  </Card.Title>\r\n                  <Card.Text>\r\n                    <div className=\"textDownNews text-center\">\r\n                      Теперь в нашей VIP - комнате установлена КАРАОКЕ. Бронируйте ВИПку и\r\n                      наслаждайтесь отличным звуком и своим исполнением!\r\n                    </div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"textTopNews pb-5\">\r\n              <h2 className=\"textTopNews text-center mt-5\">Акции</h2>\r\n              <hr className=\"short text-center\" />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"rowSales pb-5\">\r\n          <Col className=\"pt-5\">\r\n            <div className=\"cardItem1\">\r\n              <Card\r\n                className=\"cardItem1\"\r\n                style={{\r\n                  backgroundColor: '#230329',\r\n                  border: ' solid 5px white',\r\n                  borderRadius: '20px 20px 20px 20px',\r\n                  minWidth: '300px',\r\n                  minHeight: '560px',\r\n                }}>\r\n                <Card.Img\r\n                  style={{ borderRadius: '20px 20px 0 0' }}\r\n                  height=\"300px\"\r\n                  variant=\"top\"\r\n                  src={sale1}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <div className=\"textDownNews text-center bold\">Скидка 10%</div>\r\n                  </Card.Title>\r\n                  <Card.Text>\r\n                    <div className=\"textDownNews text-center\">\r\n                      С созданием новой группы в VK, вступает в силу суперакция на скидку размером в\r\n                      10%!\r\n                    </div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n                <div className=\"text-center pb-3\">\r\n                  <Button variant=\"dark\">\r\n                    <a target=\"_blank\" href=\"https://vk.com/cosaloungebar?w=wall-200100813_14\">\r\n                      Узнать подробнее\r\n                    </a>\r\n                  </Button>\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"pt-5\">\r\n            <Card\r\n              style={{\r\n                backgroundColor: '#230329',\r\n                border: ' solid 5px white',\r\n                borderRadius: '20px 20px 20px 20px',\r\n                minWidth: '300px',\r\n\r\n                minHeight: '560px',\r\n              }}>\r\n              <Card.Img\r\n                style={{ borderRadius: '20px 20px 0 0' }}\r\n                height=\"300px\"\r\n                variant=\"top\"\r\n                src={sale2}\r\n              />\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  <div className=\"textDownNews text-center bold\">Скидка для компании</div>\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  <div className=\"textDownNews text-center\">Компаниям от 5 чел. - скидка 10%</div>\r\n                </Card.Text>\r\n              </Card.Body>\r\n              <div className=\"btnNewsSection text-center pb-3\">\r\n                <Button variant=\"dark\">\r\n                  <a target=\"_blank\" href=\"https://www.instagram.com/cosanostra.narvskiy/\">\r\n                    {' '}\r\n                    Узнать подробнее\r\n                  </a>\r\n                </Button>\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"textTopNews pb-5\">\r\n              <h2 className=\"textTopNews text-center mt-5\">Конкурсы</h2>\r\n              <hr className=\"short text-center\" />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"rowSales pb-5 \">\r\n          <Col className=\"text-center\"></Col>\r\n          <Col sm={5} className=\"pt-5 \">\r\n            <div className=\"cardItem1\">\r\n              <Card\r\n                className=\"cardItem1\"\r\n                style={{\r\n                  backgroundColor: '#230329',\r\n                  border: ' solid 5px white',\r\n                  borderRadius: '20px 20px 20px 20px',\r\n                  maxWidth: '500px',\r\n                }}>\r\n                <Card.Img\r\n                  style={{ borderRadius: '10px 10px 0 0' }}\r\n                  height=\"300px\"\r\n                  variant=\"top\"\r\n                  src={xboxEvent}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <div className=\"textDownNews text-center bold\">Выиграй PlayStation 5</div>\r\n                  </Card.Title>\r\n\r\n                  <Card.Text>\r\n                    <div className=\"textDownNews text-center\">\r\n                      Собери наибольшее количество купонов, получи максимальный ШАНС на выигрыш\r\n                      главного приза Sony PS5, а также получи много других ценных призов!\r\n                    </div>\r\n                  </Card.Text>\r\n                  <div className=\"text-center\">\r\n                    <Button variant=\"dark\">\r\n                      <a target=\"_blank\" href=\"https://www.instagram.com/p/CKJ2e7Hrrt4/\">\r\n                        Узнать подробнее\r\n                      </a>\r\n                    </Button>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"text-center\"></Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsSection;\r\n","/root/client/hookan/src/frontend/components/ButtonClientAddEvents.jsx",["225","226"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from 'react-bootstrap/Button';\nimport { postInfoEvent } from '../redux/actions/serverMethods';\nimport Fade from '@material-ui/core/Fade';\nimport { Container, Row, Col } from 'react-bootstrap';\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'black',\n  },\n  paper: {\n    borderRadius: '10px',\n\n    backgroundPosition: 'center',\n    backgroundColor: ' white;',\n    border: '2px solid #000',\n    boxShadow: theme.shadows[0],\n    padding: theme.spacing(0, 0, 0),\n    width: '530px',\n    height: '400px',\n    ['@media (max-width:767px)']: { height: '480px' },\n  },\n  imgClose: {\n    float: 'right',\n    margin: 30,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  formControl: {\n    width: 193,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\nfunction ButtonClientAddEvents() {\n  const [openAdd, setOpenAdd] = React.useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleOpenAdd = () => {\n    setOpenAdd(true);\n  };\n  const handleCloseAdd = () => {\n    setOpenAdd(false);\n  };\n  const addItemToComp = () => {\n    if (nameUserAdd != '') {\n      let info = JSON.stringify({\n        name: nameUserAdd,\n        phone: phoneUserAdd,\n        email: emailUserAdd,\n\n        description: descriptionUserAdd,\n      });\n      dispatch(postInfoEvent(info));\n     \n    } else {\n      alert('Введите хотя-бы имя');\n    }\n  };\n  const [nameUserAdd, setNameUserAdd] = React.useState('');\n  const handleChangeNameUserAdd = (event) => {\n    setNameUserAdd(event.target.value);\n  };\n\n  const [phoneUserAdd, setPhoneUserAdd] = React.useState('');\n  const handleChangePhoneUserAdd = (event) => {\n    setPhoneUserAdd(event.target.value);\n  };\n\n  const [emailUserAdd, setEmailUserAdd] = React.useState('');\n  const handleChangeEmailUserAdd = (event) => {\n    setEmailUserAdd(event.target.value);\n  };\n\n  const [descriptionUserAdd, setDescriptionUserAdd] = React.useState('');\n  const handleChangeDescriptionUserAdd = (event) => {\n    setDescriptionUserAdd(event.target.value);\n  };\n  return (\n    <div>\n      <Button onClick={handleOpenAdd} variant=\"dark\">\n        Добавить клиента\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={openAdd}\n        onClose={handleCloseAdd}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={openAdd}>\n          <div className={classes.paper}>\n            <Container fluid>\n              <Row>\n                <Col className=\"text-center\">\n                  <h2 id=\"transition-modal-title\">Новый клиент по мероприятию</h2>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center pt-1\">Имя</Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\">\n                  <div className=\"redactor_item\">\n                    <input\n                      value={nameUserAdd}\n                      onChange={handleChangeNameUserAdd}\n                      type=\"text\"\n                      name=\"name\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center pt-2\">Телефон</Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\">\n                  <div className=\"redactor_item\">\n                    <input\n                      value={phoneUserAdd}\n                      onChange={handleChangePhoneUserAdd}\n                      type=\"text\"\n                      name=\"name\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center pt-1\">Емейл</Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\">\n                  <div className=\"redactor_item\">\n                    <input\n                      value={emailUserAdd}\n                      onChange={handleChangeEmailUserAdd}\n                      type=\"text\"\n                      name=\"name\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col className=\"text-center pt-1\">Комментарий</Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\">\n                  <div className=\"redactor_item\">\n                    <input\n                      value={descriptionUserAdd}\n                      onChange={handleChangeDescriptionUserAdd}\n                      type=\"text\"\n                      name=\"name\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"pt-4\">\n                <Col className=\"text-center\">\n                  <Button onClick={addItemToComp} variant=\"dark\">\n                    Сохранить\n                  </Button>\n                </Col>\n                <Col className=\"text-center\">\n                  <Button onClick={handleCloseAdd} variant=\"dark\">\n                    Отменить\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ButtonClientAddEvents;\n","/root/client/hookan/src/frontend/components/ButtonClientAddTables.jsx",["227","228"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from 'react-bootstrap/Button';\nimport { postInfoTable } from '../redux/actions/serverMethods';\nimport Fade from '@material-ui/core/Fade';\nimport { Container, Row, Col } from 'react-bootstrap';\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'black',\n  },\n  paper: {\n    borderRadius: '10px',\n\n    backgroundPosition: 'center',\n    backgroundColor: ' white;',\n    border: '2px solid #000',\n    boxShadow: theme.shadows[0],\n    padding: theme.spacing(0, 0, 0),\n    width: '530px',\n    height: '500px',\n    ['@media (max-width:767px)']: { height: '480px' },\n  },\n  imgClose: {\n    float: 'right',\n    margin: 30,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  formControl: {\n    width: 193,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\nfunction ButtonClientAddTables() {\n  const [openAdd, setOpenAdd] = React.useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleOpenAdd = () => {\n    setOpenAdd(true);\n  };\n  const handleCloseAdd = () => {\n    setOpenAdd(false);\n  };\n  const addItemToComp = () => {\n    if (nameUserAdd != '') {\n      let info = JSON.stringify({\n        name: nameUserAdd,\n        phone: phoneUserAdd,\n        data: dataUserAdd,\n        time: timeUserAdd,\n        count: countUserAdd,\n        description: descriptionUserAdd,\n      });\n      dispatch(postInfoTable(info));\n     \n    } else {\n      alert('Введите хотя-бы имя');\n    }\n  };\n  const [nameUserAdd, setNameUserAdd] = React.useState('');\n  const handleChangeNameUserAdd = (event) => {\n    setNameUserAdd(event.target.value);\n  };\n\n  const [phoneUserAdd, setPhoneUserAdd] = React.useState('');\n  const handleChangePhoneUserAdd = (event) => {\n    setPhoneUserAdd(event.target.value);\n  };\n\n  const [dataUserAdd, setDataUserAdd] = React.useState('');\n  const handleChangeDataUserAdd = (event) => {\n    setDataUserAdd(event.target.value);\n  };\n\n  const [timeUserAdd, setTimeUserAdd] = React.useState('');\n  const handleChangeTimeUserAdd = (event) => {\n    setTimeUserAdd(event.target.value);\n  };\n\n  const [countUserAdd, setCountUserAdd] = React.useState('');\n  const handleChangeCountUserAdd = (event) => {\n    setCountUserAdd(event.target.value);\n  };\n  const [descriptionUserAdd, setDescriptionUserAdd] = React.useState('');\n  const handleChangeDescriptionUserAdd = (event) => {\n    setDescriptionUserAdd(event.target.value);\n  };\n  return (\n    <div>\n      <Button onClick={handleOpenAdd} variant=\"dark\">\n        Добавить клиента\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={openAdd}\n        onClose={handleCloseAdd}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={openAdd}>\n          <div className={classes.paper}>\n            <Container fluid>\n              <Row>\n                <Col className=\"text-center\">\n                  <h2 id=\"transition-modal-title\">Новый клиент по конкурсу</h2>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center pt-1\">Имя</Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\">\n                  <div className=\"redactor_item\">\n                    <input\n                      value={nameUserAdd}\n                      onChange={handleChangeNameUserAdd}\n                      type=\"text\"\n                      name=\"name\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center pt-2\">Телефон</Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\">\n                  <div className=\"redactor_item\">\n                    <input\n                      value={phoneUserAdd}\n                      onChange={handleChangePhoneUserAdd}\n                      type=\"text\"\n                      name=\"name\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center pt-1\">Дата</Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\">\n                  <div className=\"redactor_item\">\n                    <input\n                      value={dataUserAdd}\n                      onChange={handleChangeDataUserAdd}\n                      type=\"text\"\n                      name=\"name\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center pt-1\">Время</Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\">\n                  <div className=\"redactor_item\">\n                    <input\n                      value={timeUserAdd}\n                      onChange={handleChangeTimeUserAdd}\n                      type=\"text\"\n                      name=\"name\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center pt-1\">Кол.человек</Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\">\n                  <div className=\"redactor_item\">\n                    <input\n                      value={countUserAdd}\n                      onChange={handleChangeCountUserAdd}\n                      type=\"text\"\n                      name=\"name\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col className=\"text-center\">Комментарий</Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\">\n                  <div className=\"redactor_item\">\n                    <input\n                      value={descriptionUserAdd}\n                      onChange={handleChangeDescriptionUserAdd}\n                      type=\"text\"\n                      name=\"name\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"pt-4\">\n                <Col className=\"text-center\">\n                  <Button onClick={addItemToComp} variant=\"dark\">\n                    Сохранить\n                  </Button>\n                </Col>\n                <Col className=\"text-center\">\n                  <Button onClick={handleCloseAdd} variant=\"dark\">\n                    Отменить\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ButtonClientAddTables;\n","/root/client/hookan/src/frontend/redux/reducers/headerMenu.js",[],"/root/client/hookan/src/frontend/redux/reducers/nowData.js",[],"/root/client/hookan/src/frontend/redux/reducers/serverMethods.js",[],"/root/client/hookan/src/frontend/redux/reducers/tableReserve.js",[],"/root/client/hookan/src/frontend/redux/reducers/refEvent.js",[],"/root/client/hookan/src/frontend/pages/MenuPageHookan.jsx",["229","230"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { setHeaderItem, setMenuItem } from '../redux/actions/headerMenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../css/pageCss/MenuPage.css';\nimport { Container, Row, Col, ListGroup, Image } from 'react-bootstrap';\nimport menuItemHookanPng1 from '../../assets/image/menuSectionHookan1.jpg';\nimport menuItemHookanPng2 from '../../assets/image/menuSectionHookan2.jpg';\nfunction MenuPage() {\n  const activeMenuItem = useSelector(({ headerMenu }) => headerMenu.activeItemMenu);\n  const arrMenu = [\n    { name: 'Табак', link: 'menu/hookan', id: 0 },\n    { name: 'Напитки', link: 'menu/drinks', id: 1 },\n    { name: 'Чай', link: 'menu/tea', id: 2 },\n  ];\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(setHeaderItem(1));\n    dispatch(setMenuItem(0));\n  }, []);\n\n  return (\n    <div className=\"wrapperMenuPage\">\n      <Container className=\"pt-5 \">\n        <Row className=\"pt-5 pb-4\">\n          <Col className=\"text-center\">\n            <div className=\"topTextMenu\">Табак</div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col className=\"text-center\"></Col>\n          <Col className=\"text-center\">\n            <div className=\"liMenuItems\">\n              <ListGroup horizontal>\n                {arrMenu.map((obj) => (\n                  <Link key={obj.id} to={`/${obj.link}`}>\n                    <ListGroup.Item\n                      className={\n                        activeMenuItem === obj.id ? 'activeMenuItem text-center' : 'text-center'\n                      }\n                      style={{ width: '200px' }}>\n                      <li>{obj.name} </li>\n                    </ListGroup.Item>\n                  </Link>\n                ))}\n              </ListGroup>\n            </div>\n          </Col>\n          <Col className=\"text-center\"></Col>\n        </Row>\n      </Container>\n      <Container className=\"pt-5 pb-5\">\n        <Row className=\"pb-5\">\n          <Col className=\"text-center\">\n            <Image src={menuItemHookanPng1} thumbnail />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default MenuPage;\n","/root/client/hookan/src/frontend/pages/MainPage.jsx",["231","232"],"import React from 'react';\nimport { setHeaderItem } from '../redux/actions/headerMenu';\nimport { setRefEvent } from '../redux/actions/refEvent';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  AboutSection,\n  MenuSection,\n  NewsSection,\n  EventSection,\n  EventRequestSection,\n  TopImg,\n} from '../components';\n\nfunction MainPage({ clickSmooth }) {\n  const dispatch = useDispatch();\n  const ref = useSelector(({ refEvent }) => refEvent.ref);\n  const smoothToEventSelector = () =>\n    ref.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'nearest',\n      inline: 'end',\n    });\n  const myRef = React.useRef();\n\n  React.useEffect(() => {\n    dispatch(setHeaderItem(null));\n    dispatch(setRefEvent(myRef));\n  }, []);\n\n  return (\n    <div className=\"wrapperMainPage \">\n      <TopImg smoothToEventSelectorProp={smoothToEventSelector} />\n      <AboutSection smoothProp={clickSmooth} />\n\n      <MenuSection smoothProp={clickSmooth} />\n\n      <EventSection smoothToEventSelectorProp={smoothToEventSelector} />\n      <div ref={myRef}>\n        <EventRequestSection />\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n","/root/client/hookan/src/frontend/pages/MenuPageDrinks.jsx",["233"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { setHeaderItem, setMenuItem } from '../redux/actions/headerMenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../css/pageCss/MenuPage.css';\nimport { Container, Row, Col, ListGroup, Image } from 'react-bootstrap';\nimport menuItemDrinksPng1 from '../../assets/image/menuSectionDrinks1.jpg';\nfunction MenuPageDrinks() {\n  const activeMenuItem = useSelector(({ headerMenu }) => headerMenu.activeItemMenu);\n  const arrMenu = [\n    { name: 'Табак', link: 'menu/hookan', id: 0 },\n    { name: 'Напитки', link: 'menu/drinks', id: 1 },\n    { name: 'Чай', link: 'menu/tea', id: 2 },\n  ];\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(setHeaderItem(1));\n    dispatch(setMenuItem(1));\n  }, []);\n  return (\n    <div className=\"wrapperMenuPage\">\n      <Container className=\"pt-5 \">\n        <Row className=\"pt-5 pb-4\">\n          <Col className=\"text-center\">\n            <div className=\"topTextMenu\">Напитки</div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col className=\"text-center\"></Col>\n          <Col className=\"text-center\">\n            <div className=\"liMenuItems\">\n              <ListGroup horizontal>\n                {arrMenu.map((obj) => (\n                  <Link key={obj.id} to={`/${obj.link}`}>\n                    <ListGroup.Item\n                      className={\n                        activeMenuItem === obj.id ? 'activeMenuItem text-center' : 'text-center'\n                      }\n                      style={{ width: '200px' }}>\n                      <li>{obj.name}</li>\n                    </ListGroup.Item>\n                  </Link>\n                ))}\n              </ListGroup>\n            </div>\n          </Col>\n          <Col className=\"text-center\"></Col>\n        </Row>\n      </Container>\n      <Container className=\"pt-5 pb-5\">\n        <Row className=\"pb-5\">\n          <Col className=\"text-center\">\n            <Image src={menuItemDrinksPng1} thumbnail />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default MenuPageDrinks;\n","/root/client/hookan/src/frontend/pages/GaleryPage.jsx",["234","235"],"import React from 'react';\n\nimport { setHeaderItem } from '../redux/actions/headerMenu';\nimport { GalerySliderWrapper } from '../components';\n\nimport { useDispatch } from 'react-redux';\nimport { TopImg } from '../components';\nfunction AboutUsPage() {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(setHeaderItem(0));\n  }, []);\n  return (\n    <div className=\"wrapperAboutUs\">\n      <GalerySliderWrapper />\n    </div>\n  );\n}\n\nexport default AboutUsPage;\n","/root/client/hookan/src/frontend/pages/NewsPage.jsx",["236"],"import React from 'react';\n\nimport { setHeaderItem } from '../redux/actions/headerMenu';\nimport { useDispatch } from 'react-redux';\nimport { NewsSection } from '../components';\nfunction News() {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(setHeaderItem(2));\n  }, []);\n  return (\n    <div className=\"wrapperNews\">\n      <NewsSection />\n    </div>\n  );\n}\n\nexport default News;\n","/root/client/hookan/src/frontend/pages/MenuPageTea.jsx",["237"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { setHeaderItem, setMenuItem } from '../redux/actions/headerMenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../css/pageCss/MenuPage.css';\nimport { Container, Row, Col, ListGroup, Image } from 'react-bootstrap';\nimport menuItemTeaPng1 from '../../assets/image/menuSectionTea1.jpg';\n\nfunction MenuPageTea() {\n  const activeMenuItem = useSelector(({ headerMenu }) => headerMenu.activeItemMenu);\n  const arrMenu = [\n    { name: 'Табак', link: 'menu/hookan', id: 0 },\n    { name: 'Напитки', link: 'menu/drinks', id: 1 },\n    { name: 'Чай', link: 'menu/tea', id: 2 },\n  ];\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(setHeaderItem(1));\n    dispatch(setMenuItem(2));\n  }, []);\n  return (\n    <div className=\"wrapperMenuPage\">\n      <Container className=\"pt-5 \">\n        <Row className=\"pt-5 pb-4\">\n          <Col className=\"text-center\">\n            <div className=\"topTextMenu\">Чай</div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col className=\"text-center\"></Col>\n          <Col className=\"text-center\">\n            <div className=\"liMenuItems\">\n              <ListGroup horizontal>\n                {arrMenu.map((obj) => (\n                  <Link key={obj.id} to={`/${obj.link}`}>\n                    <ListGroup.Item\n                      className={\n                        activeMenuItem === obj.id ? 'activeMenuItem text-center' : 'text-center'\n                      }\n                      style={{ width: '200px' }}>\n                      <li>{obj.name} </li>\n                    </ListGroup.Item>\n                  </Link>\n                ))}\n              </ListGroup>\n            </div>\n          </Col>\n          <Col className=\"text-center\"></Col>\n        </Row>\n      </Container>\n      <Container className=\"pt-5 pb-5\">\n        <Row className=\"pb-5\">\n          <Col className=\"text-center\">\n            {' '}\n            <Image src={menuItemTeaPng1} thumbnail />{' '}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default MenuPageTea;\n","/root/client/hookan/src/frontend/pages/AdminPage.jsx",["238","239","240","241","242","243","244","245","246"],"import React from 'react';\nimport axios from 'axios';\nimport '../css/AdminPage.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setAuth,\n  fetchInfoTablesAdmin,\n  fetchInfoEventsAdmin,\n  fetchInfoCompAdmin,\n  postAuthInfo,\n} from '../redux/actions/serverMethods';\n\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Table, Container, Row, Col } from 'react-bootstrap';\nimport {\n  TrBlockTables,\n  TrBlockEvents,\n  TrBlockComp,\n  ButtonClientAddComp,\n  ButtonClientAddTables,\n  ButtonClientAddEvents,\n} from '../components';\nimport { Button } from 'react-bootstrap';\nimport { setHeaderItem } from '../redux/actions/headerMenu';\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'purple',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'purple',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'purple',\n      },\n      '&:hover fieldset': {\n        borderColor: 'purple',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'purple',\n      },\n    },\n  },\n})(TextField);\n\nfunction AdminPage() {\n  const trueToken = useSelector(({ serverMethods }) => serverMethods.token);\n  const itemsTable = useSelector(({ serverMethods }) => serverMethods.itemsTables);\n  const itemsEvents = useSelector(({ serverMethods }) => serverMethods.itemsEvents);\n  const itemsComp = useSelector(({ serverMethods }) => serverMethods.itemsComp);\n  const dispatch = useDispatch();\n  const authCheck = useSelector(({ serverMethods }) => serverMethods.isAuth);\n  const [login, setLogin] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const handleChangeLogin = (event) => {\n    setLogin(event.target.value);\n  };\n\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value);\n  };\n\n const sendClick = () => {\n    let fullInputs = login + ':' + password;\n    let token = btoa(fullInputs);\n    let info = JSON.stringify({\n      login,\n      password,\n    });\n    axios\n      .post('https://cosanostra-ls.herokuapp.com/api/login', info, {\n        headers: { Authorization: `Basic ${token}`, 'Content-Type': 'application/json' },\n      })\n      .then((response) => {\n        localStorage.setItem('token', response.data);\n        window.location.reload();\n      })\n      .catch((error) => {});\n  };\n\n  const logOutClick = () => {\n    localStorage.removeItem('token');\n    window.location.reload();\n  };\n\n  React.useEffect(() => {\n    dispatch(setHeaderItem(3));\n\n    if (localStorage.getItem('token')) {\n      let tokenCheck = localStorage.getItem('token');\n      let info = JSON.stringify({\n        tokenCheck,\n      });\n      let tokenFromLocal = localStorage.getItem('token');\n      axios\n        .post('https://cosanostra-ls.herokuapp.com/api/login/check', info, {\n          headers: { Authorization: `Basic ${tokenCheck}`, 'Content-Type': 'application/json' },\n        })\n        .then((response) => {\n          // let tokenFromLocal = localStorage.getItem('token');\n          dispatch(setAuth(true));\n          dispatch(fetchInfoTablesAdmin(tokenFromLocal));\n          dispatch(fetchInfoEventsAdmin(tokenFromLocal));\n          dispatch(fetchInfoCompAdmin(tokenFromLocal));\n        })\n        .catch((error) => {});\n    }\n  }, []);\n  return (\n    <div className=\"wrapperAdminPage\">\n      <div className={!authCheck ? 'form-registration' : 'form-registration-none'}>\n        <h2 className=\"text-center\">Вход в систему</h2>\n\n        <div className=\"btxt text-center\">\n          <CssTextField\n            required\n            label=\"Login\"\n            id=\"r112s\"\n            value={login}\n            onChange={handleChangeLogin}\n          />\n        </div>\n\n        <div className=\"btxt text-center\">\n          <CssTextField\n            required\n            type=\"password\"\n            label=\"Password\"\n            id=\"r1223s\"\n            value={password}\n            onChange={handleChangePassword}\n          />\n        </div>\n        <div className=\"formBtn2\">\n          <button onClick={sendClick} className=\"btn2\">\n            Отправить\n          </button>\n        </div>\n      </div>\n\n      {authCheck ? (\n        <div>\n          <div className=\"adminContent\">\n            <div className=\"text-center\">\n              <h1 className=\"topTextInfo\">Данные по клиентам</h1>\n            </div>\n            <div className=\"adminTable\">\n                <Table striped bordered hover size=\"sm\">\n                  <thead>\n                    <tr className=\"tHeader\">\n                      <th width=\"1%\">id</th>\n                      <th width=\"8%\">Имя</th>\n                      <th width=\"5%\">Телефон</th>\n                      <th width=\"5%\">Дата</th>\n                      <th width=\"4%\">Время</th>\n                      <th width=\"3%\">Кол.чел</th>\n                      <th width=\"20%\">Комментарий</th>\n                      <th width=\"27%\">Редактировать</th>\n                      <th width=\"27%\">Удалить</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"tContent\">\n                    {itemsTable.length != 0 ? (\n                      itemsTable.map((obj) => <TrBlockTables key={obj.id} {...obj} />)\n                    ) : (\n                      <> </>\n                    )}\n                  </tbody>\n                </Table>\n            </div>    \n            {itemsTable.length === 0 ? (\n              <div className=\"text-center bold\">Пока никого нет</div>\n            ) : (\n              <> </>\n            )}\n            <div className=\"adminTools\">\n              <ButtonClientAddTables />\n            </div>\n          </div>\n          <div className=\"adminContent\">\n            <div className=\"text-center\">\n              <h1 className=\"topTextInfo\">Данные по мероприятиям</h1>\n            </div>\n            <div className=\"adminTable\">\n                <Table striped bordered hover size=\"sm\">\n                  <thead>\n                    <tr className=\"tHeader\">\n                      <th width=\"1%\">id</th>\n                      <th width=\"15%\">Имя</th>\n                      <th width=\"15%\">Телефон</th>\n                      <th width=\"21%\">Емейл</th>\n                      <th width=\"28%\">Комментарий</th>\n                      <th width=\"10%\">Редактировать</th>\n                      <th width=\"10%\">Удалить</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"tContent\">\n                    {itemsEvents.length != 0 ? (\n                      itemsEvents.map((obj) => <TrBlockEvents key={obj.id} {...obj} />)\n                    ) : (\n                      <> </>\n                    )}\n                  </tbody>\n                </Table>\n            </div>\n            {itemsEvents.length === 0 ? (\n              <div className=\"text-center bold\">Пока никого нет</div>\n            ) : (\n              <> </>\n            )}\n            <div className=\"adminTools\">\n              <ButtonClientAddEvents />\n            </div>\n          </div>\n          <div className=\"adminContent\">\n            <div className=\"text-center\">\n              <h1 className=\"topTextInfo\">Данные по конкурсу</h1>\n            </div>\n            <div className=\"adminTable\">\n                <Table striped bordered hover size=\"sm\">\n                  <thead>\n                    <tr className=\"tHeader\">\n                      <th width=\"4%\">id</th>\n                      <th width=\"20%\">Имя</th>\n                      <th width=\"20%\">Телефон</th>\n                      <th width=\"26%\">Очки</th>\n                      <th width=\"15%\">Редактировать</th>\n                      <th width=\"15%\">Удалить</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"tContent\">\n                    {itemsComp.length != 0 ? (\n                      itemsComp.map((obj) => <TrBlockComp key={obj.id} {...obj} />)\n                    ) : (\n                      <> </>\n                    )}\n                  </tbody>\n                </Table>\n            </div>\n            {itemsComp.length === 0 ? (\n              <div className=\"text-center bold\">Пока никого нет</div>\n            ) : (\n              <> </>\n            )}\n            <div className=\"adminTools\">\n              <ButtonClientAddComp />\n            </div>\n          </div>{' '}\n          <Button onClick={logOutClick} variant=\"dark\">\n            Выход из системы\n          </Button>\n        </div>\n      ) : (\n        <> </>\n      )}\n    </div>\n  );\n}\n\nexport default AdminPage;\n","/root/client/hookan/src/frontend/redux/actions/serverMethods.js",[],"/root/client/hookan/src/frontend/redux/actions/headerMenu.js",[],"/root/client/hookan/src/frontend/redux/actions/refEvent.js",[],["247","248"],"/root/client/hookan/src/frontend/components/CallSubject.jsx",[],{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":44,"column":6,"nodeType":"255","endLine":44,"endColumn":8,"suggestions":"256"},{"ruleId":"257","severity":1,"message":"258","line":3,"column":31,"nodeType":"259","messageId":"260","endLine":3,"endColumn":36},{"ruleId":"257","severity":1,"message":"261","line":8,"column":8,"nodeType":"259","messageId":"260","endLine":8,"endColumn":29},{"ruleId":"262","severity":1,"message":"263","line":10,"column":1,"nodeType":"264","messageId":"265","endLine":11,"endColumn":2},{"ruleId":"257","severity":1,"message":"266","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":20},{"ruleId":"257","severity":1,"message":"267","line":5,"column":47,"nodeType":"259","messageId":"260","endLine":5,"endColumn":50},{"ruleId":"257","severity":1,"message":"268","line":5,"column":52,"nodeType":"259","messageId":"260","endLine":5,"endColumn":55},{"ruleId":"257","severity":1,"message":"269","line":7,"column":8,"nodeType":"259","messageId":"260","endLine":7,"endColumn":20},{"ruleId":"257","severity":1,"message":"270","line":13,"column":10,"nodeType":"259","messageId":"260","endLine":13,"endColumn":14},{"ruleId":"257","severity":1,"message":"271","line":14,"column":9,"nodeType":"259","messageId":"260","endLine":14,"endColumn":24},{"ruleId":"272","severity":1,"message":"273","line":7,"column":9,"nodeType":"274","endLine":11,"endColumn":27},{"ruleId":"257","severity":1,"message":"275","line":4,"column":8,"nodeType":"259","messageId":"260","endLine":4,"endColumn":18},{"ruleId":"257","severity":1,"message":"276","line":7,"column":8,"nodeType":"259","messageId":"260","endLine":7,"endColumn":18},{"ruleId":"257","severity":1,"message":"277","line":13,"column":10,"nodeType":"259","messageId":"260","endLine":13,"endColumn":22},{"ruleId":"278","severity":1,"message":"279","line":47,"column":5,"nodeType":"280","messageId":"281","endLine":47,"endColumn":70,"fix":"282"},{"ruleId":"278","severity":1,"message":"279","line":80,"column":5,"nodeType":"280","messageId":"281","endLine":80,"endColumn":70,"fix":"283"},{"ruleId":"284","severity":1,"message":"285","line":253,"column":7,"nodeType":"274","endLine":253,"endColumn":49},{"ruleId":"278","severity":1,"message":"279","line":30,"column":5,"nodeType":"280","messageId":"281","endLine":30,"endColumn":54,"fix":"286"},{"ruleId":"257","severity":1,"message":"287","line":2,"column":8,"nodeType":"259","messageId":"260","endLine":2,"endColumn":17},{"ruleId":"278","severity":1,"message":"279","line":29,"column":5,"nodeType":"280","messageId":"281","endLine":29,"endColumn":54,"fix":"288"},{"ruleId":"257","severity":1,"message":"289","line":2,"column":21,"nodeType":"259","messageId":"260","endLine":2,"endColumn":25},{"ruleId":"278","severity":1,"message":"279","line":31,"column":5,"nodeType":"280","messageId":"281","endLine":31,"endColumn":70,"fix":"290"},{"ruleId":"257","severity":1,"message":"287","line":2,"column":8,"nodeType":"259","messageId":"260","endLine":2,"endColumn":17},{"ruleId":"257","severity":1,"message":"291","line":4,"column":48,"nodeType":"259","messageId":"260","endLine":4,"endColumn":60},{"ruleId":"278","severity":1,"message":"279","line":29,"column":5,"nodeType":"280","messageId":"281","endLine":29,"endColumn":54,"fix":"292"},{"ruleId":"278","severity":1,"message":"279","line":27,"column":5,"nodeType":"280","messageId":"281","endLine":27,"endColumn":54,"fix":"293"},{"ruleId":"294","severity":1,"message":"295","line":56,"column":21,"nodeType":"296","messageId":"297","endLine":56,"endColumn":23},{"ruleId":"257","severity":1,"message":"298","line":12,"column":21,"nodeType":"259","messageId":"260","endLine":12,"endColumn":29},{"ruleId":"257","severity":1,"message":"299","line":12,"column":55,"nodeType":"259","messageId":"260","endLine":12,"endColumn":64},{"ruleId":"257","severity":1,"message":"300","line":16,"column":9,"nodeType":"259","messageId":"260","endLine":16,"endColumn":16},{"ruleId":"301","severity":1,"message":"302","line":344,"column":24,"nodeType":"303","endLine":344,"endColumn":39},{"ruleId":"301","severity":1,"message":"302","line":378,"column":22,"nodeType":"303","endLine":378,"endColumn":37},{"ruleId":"301","severity":1,"message":"302","line":428,"column":26,"nodeType":"303","endLine":428,"endColumn":41},{"ruleId":"278","severity":1,"message":"279","line":27,"column":5,"nodeType":"280","messageId":"281","endLine":27,"endColumn":54,"fix":"304"},{"ruleId":"294","severity":1,"message":"295","line":56,"column":21,"nodeType":"296","messageId":"297","endLine":56,"endColumn":23},{"ruleId":"278","severity":1,"message":"279","line":27,"column":5,"nodeType":"280","messageId":"281","endLine":27,"endColumn":54,"fix":"305"},{"ruleId":"294","severity":1,"message":"295","line":56,"column":21,"nodeType":"296","messageId":"297","endLine":56,"endColumn":23},{"ruleId":"257","severity":1,"message":"306","line":8,"column":8,"nodeType":"259","messageId":"260","endLine":8,"endColumn":26},{"ruleId":"253","severity":1,"message":"254","line":20,"column":6,"nodeType":"255","endLine":20,"endColumn":8,"suggestions":"307"},{"ruleId":"257","severity":1,"message":"308","line":9,"column":3,"nodeType":"259","messageId":"260","endLine":9,"endColumn":14},{"ruleId":"253","severity":1,"message":"254","line":29,"column":6,"nodeType":"255","endLine":29,"endColumn":8,"suggestions":"309"},{"ruleId":"253","severity":1,"message":"254","line":19,"column":6,"nodeType":"255","endLine":19,"endColumn":8,"suggestions":"310"},{"ruleId":"257","severity":1,"message":"311","line":7,"column":10,"nodeType":"259","messageId":"260","endLine":7,"endColumn":16},{"ruleId":"253","severity":1,"message":"254","line":12,"column":6,"nodeType":"255","endLine":12,"endColumn":8,"suggestions":"312"},{"ruleId":"253","severity":1,"message":"254","line":10,"column":6,"nodeType":"255","endLine":10,"endColumn":8,"suggestions":"313"},{"ruleId":"253","severity":1,"message":"254","line":20,"column":6,"nodeType":"255","endLine":20,"endColumn":8,"suggestions":"314"},{"ruleId":"257","severity":1,"message":"315","line":10,"column":3,"nodeType":"259","messageId":"260","endLine":10,"endColumn":15},{"ruleId":"257","severity":1,"message":"316","line":15,"column":17,"nodeType":"259","messageId":"260","endLine":15,"endColumn":26},{"ruleId":"257","severity":1,"message":"267","line":15,"column":28,"nodeType":"259","messageId":"260","endLine":15,"endColumn":31},{"ruleId":"257","severity":1,"message":"268","line":15,"column":33,"nodeType":"259","messageId":"260","endLine":15,"endColumn":36},{"ruleId":"257","severity":1,"message":"317","line":50,"column":9,"nodeType":"259","messageId":"260","endLine":50,"endColumn":18},{"ruleId":"253","severity":1,"message":"254","line":112,"column":6,"nodeType":"255","endLine":112,"endColumn":8,"suggestions":"318"},{"ruleId":"294","severity":1,"message":"295","line":167,"column":40,"nodeType":"296","messageId":"297","endLine":167,"endColumn":42},{"ruleId":"294","severity":1,"message":"295","line":202,"column":41,"nodeType":"296","messageId":"297","endLine":202,"endColumn":43},{"ruleId":"294","severity":1,"message":"295","line":236,"column":39,"nodeType":"296","messageId":"297","endLine":236,"endColumn":41},{"ruleId":"249","replacedBy":"319"},{"ruleId":"251","replacedBy":"320"},"no-native-reassign",["321"],"no-negated-in-lhs",["322"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["323"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'aboutSectionImg1Small' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'BurgerMenu' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'NavbarToggle' is defined but never used.","'show' is assigned a value but never used.","'toggleShowClick' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'sliderImg1' is defined but never used.","'sliderImg4' is defined but never used.","'ModalConfirm' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['@media (max-width:767px)'] found.","Property","unnecessarilyComputedProperty",{"range":"324","text":"325"},{"range":"326","text":"325"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"range":"327","text":"325"},"'PropTypes' is defined but never used.",{"range":"328","text":"325"},"'Form' is defined but never used.",{"range":"329","text":"325"},"'postInfoComp' is defined but never used.",{"range":"330","text":"325"},{"range":"331","text":"325"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'CardDeck' is defined but never used.","'ListGroup' is defined but never used.","'arrNews' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"range":"332","text":"325"},{"range":"333","text":"325"},"'menuItemHookanPng2' is defined but never used.",["334"],"'NewsSection' is defined but never used.",["335"],["336"],"'TopImg' is defined but never used.",["337"],["338"],["339"],"'postAuthInfo' is defined but never used.","'Container' is defined but never used.","'trueToken' is assigned a value but never used.",["340"],["321"],["322"],"no-global-assign","no-unsafe-negation",{"desc":"341","fix":"342"},[1561,1589],"'@media (max-width:767px)'",[2255,2283],[923,951],[887,915],[997,1025],[903,931],[832,860],[833,861],[833,861],{"desc":"341","fix":"343"},{"desc":"341","fix":"344"},{"desc":"341","fix":"345"},{"desc":"341","fix":"346"},{"desc":"341","fix":"347"},{"desc":"341","fix":"348"},{"desc":"341","fix":"349"},"Update the dependencies array to be: [dispatch]",{"range":"350","text":"351"},{"range":"352","text":"351"},{"range":"353","text":"351"},{"range":"354","text":"351"},{"range":"355","text":"351"},{"range":"356","text":"351"},{"range":"357","text":"351"},{"range":"358","text":"351"},[1147,1149],"[dispatch]",[870,872],[744,746],[800,802],[348,350],[292,294],[792,794],[3344,3346]]