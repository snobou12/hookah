[{"C:\\hookahProject\\hookah-react\\src\\index.js":"1","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\app\\App.js":"2","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\Header.jsx":"3","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\MainPage.jsx":"4","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\AboutSection.jsx":"5","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\Footer.jsx":"6","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\AboutUsPage.jsx":"7","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\store.js":"8","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\index.js":"9","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\headerMenu.js":"10","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\headerMenu.js":"11","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\index.js":"12","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\MenuPage.jsx":"13","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\index.js":"14","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\MenuSection.jsx":"15","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TableModal.jsx":"16","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\NewsPage.jsx":"17","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\NewsSection.jsx":"18","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\tableReserve.js":"19","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\tableReserve.js":"20","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\YandexMap.jsx":"21","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\serverMethods.js":"22","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\serverMethods.js":"23","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\nowData.js":"24","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\nowData.js":"25","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\AdminPage.jsx":"26","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TrBlock.jsx":"27","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\EventSection.jsx":"28","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\EventRequestSection.jsx":"29","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\refEvent.js":"30","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\refEvent.js":"31","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\GalerySliderWrapper.jsx":"32","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TopImg.jsx":"33","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TrBlockEvents.jsx":"34","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\ScrollToTop.jsx":"35"},{"size":596,"mtime":1609974906396,"results":"36","hashOfConfig":"37"},{"size":1736,"mtime":1610064518667,"results":"38","hashOfConfig":"37"},{"size":2747,"mtime":1610055133182,"results":"39","hashOfConfig":"37"},{"size":1207,"mtime":1610052704035,"results":"40","hashOfConfig":"37"},{"size":5223,"mtime":1610055318304,"results":"41","hashOfConfig":"37"},{"size":4008,"mtime":1610056510337,"results":"42","hashOfConfig":"37"},{"size":395,"mtime":1610052885207,"results":"43","hashOfConfig":"37"},{"size":390,"mtime":1609892492218,"results":"44","hashOfConfig":"37"},{"size":592,"mtime":1609953009947,"results":"45","hashOfConfig":"37"},{"size":279,"mtime":1607192320814,"results":"46","hashOfConfig":"37"},{"size":92,"mtime":1609693193138,"results":"47","hashOfConfig":"37"},{"size":265,"mtime":1609942464846,"results":"48","hashOfConfig":"37"},{"size":349,"mtime":1609275607390,"results":"49","hashOfConfig":"37"},{"size":784,"mtime":1609983779438,"results":"50","hashOfConfig":"37"},{"size":2317,"mtime":1610055165004,"results":"51","hashOfConfig":"37"},{"size":11308,"mtime":1610063694998,"results":"52","hashOfConfig":"37"},{"size":335,"mtime":1609541370216,"results":"53","hashOfConfig":"37"},{"size":5476,"mtime":1610062916993,"results":"54","hashOfConfig":"37"},{"size":415,"mtime":1609251838633,"results":"55","hashOfConfig":"37"},{"size":198,"mtime":1609251645415,"results":"56","hashOfConfig":"37"},{"size":457,"mtime":1609275694868,"results":"57","hashOfConfig":"37"},{"size":576,"mtime":1610057000610,"results":"58","hashOfConfig":"37"},{"size":2770,"mtime":1610064787074,"results":"59","hashOfConfig":"37"},{"size":243,"mtime":1609873915854,"results":"60","hashOfConfig":"37"},{"size":86,"mtime":1609800090080,"results":"61","hashOfConfig":"37"},{"size":5969,"mtime":1610064484732,"results":"62","hashOfConfig":"37"},{"size":7246,"mtime":1610063643320,"results":"63","hashOfConfig":"37"},{"size":2833,"mtime":1610054225579,"results":"64","hashOfConfig":"37"},{"size":3857,"mtime":1610063975111,"results":"65","hashOfConfig":"37"},{"size":238,"mtime":1609952940819,"results":"66","hashOfConfig":"37"},{"size":82,"mtime":1609952973554,"results":"67","hashOfConfig":"37"},{"size":1085,"mtime":1610054950936,"results":"68","hashOfConfig":"37"},{"size":756,"mtime":1610054235487,"results":"69","hashOfConfig":"37"},{"size":5832,"mtime":1610063823136,"results":"70","hashOfConfig":"37"},{"size":1123,"mtime":1610056579154,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zh06n3",{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"135","usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"150","usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\hookahProject\\hookah-react\\src\\index.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\app\\App.js",["153"],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\Header.jsx",[],["154","155"],"C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\MainPage.jsx",["156"],"import React from 'react';\r\nimport { setMenuItem } from '../redux/actions/headerMenu';\r\nimport { setRefEvent } from '../redux/actions/refEvent';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  GalerySliderWrapper,\r\n  AboutSection,\r\n  MenuSection,\r\n  NewsSection,\r\n  EventSection,\r\n  EventRequestSection,\r\n  TopImg,\r\n} from '../components';\r\n\r\nfunction MainPage() {\r\n  const dispatch = useDispatch();\r\n  const ref = useSelector(({ refEvent }) => refEvent.ref);\r\n  const smoothToEventSelector = () =>\r\n    ref.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'nearest',\r\n      inline: 'end',\r\n    });\r\n  const myRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(setMenuItem(null));\r\n    dispatch(setRefEvent(myRef));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"wrapperMainPage \">\r\n      <TopImg smoothToEventSelectorProp={smoothToEventSelector} />\r\n      <AboutSection />\r\n\r\n      <EventSection smoothToEventSelectorProp={smoothToEventSelector} />\r\n\r\n      <MenuSection />\r\n\r\n      <NewsSection />\r\n      <GalerySliderWrapper />\r\n      <div ref={myRef}>\r\n        <EventRequestSection />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\AboutSection.jsx",["157"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\nimport '../css/AboutSection.css';\r\nimport aboutSectionImg1 from '../../assets/image/aboutSectionImg1.jpg';\r\nimport aboutSectionImg2 from '../../assets/image/aboutSectionImg2.jpg';\r\nimport aboutSectionImg3 from '../../assets/image/aboutSectionImg3.jpg';\r\n\r\nfunction AboutSection() {\r\n  return (\r\n    <div className=\"about-section-wrapper\">\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"textTopAbout text-center mt-5\">О нас</h2>\r\n            <hr className=\"short text-center\" />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\" pb-5\">\r\n          <Col sm={6}>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col className=\"itemAboutSection1\">\r\n                <a data-fancybox=\"gallery\" href={aboutSectionImg2}>\r\n                  <img\r\n                    alt=\"aboutImg\"\r\n                    className=\"aboutSectionImg mt-5\"\r\n                    width=\"320px\"\r\n                    height=\"500px\"\r\n                    src={aboutSectionImg2}\r\n                  />\r\n                </a>\r\n              </Col>\r\n              <Col className=\"itemAboutSection2\">\r\n                <a data-fancybox=\"gallery\" href={aboutSectionImg1}>\r\n                  <img\r\n                    alt=\"aboutImg\"\r\n                    className=\"aboutSectionImg mt-5\"\r\n                    width=\"320px\"\r\n                    height=\"500px\"\r\n                    src={aboutSectionImg1}\r\n                  />\r\n                </a>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col className=\"itemAboutSection3\">\r\n                <a data-fancybox=\"gallery\" href={aboutSectionImg3}>\r\n                  <img\r\n                    alt=\"aboutImg\"\r\n                    className=\"aboutSectionImg mt-5\"\r\n                    width=\"320px\"\r\n                    height=\"500px\"\r\n                    src={aboutSectionImg3}\r\n                  />\r\n                </a>\r\n              </Col>\r\n              <Col className=\"itemAboutSection4\">\r\n                <a data-fancybox=\"gallery\" href={aboutSectionImg3}>\r\n                  <img\r\n                    alt=\"aboutImg\"\r\n                    className=\"aboutSectionImg mt-5\"\r\n                    width=\"320px\"\r\n                    height=\"500px\"\r\n                    src={aboutSectionImg3}\r\n                  />\r\n                </a>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col sm={6}>\r\n            <div className=\"textDownAbout mt-5 text-justify\">\r\n              <div>\r\n                Уютное пространство для отличного отдыха — это наша кальянная в Санкт-Петербурге.\r\n                Приятная и дружелюбная атмосфера поможет отключиться от будничной суеты и провести\r\n                время за общением и вкусными кальянами И если вы ищете, где покурить кальян,\r\n                приходите к нам! Наш бар способен удивить вас: широким ассортиментом смесей для\r\n                кальяна; отличной барной картой; мастерством наших кальянных гуру. Наше заведение\r\n                очень популярно среди молодежи, но и те, кто постарше, с удовольствием проводят\r\n                время у нас. Вы сможете петь любимые песни с друзьями, танцевать, слушать отличную\r\n                {/* музыку. Посетив однажды кальян <em id=\"cosaN\">Cosa Nostra</em>, вы непременно будете\r\n                возвращаться к нам вновь и вновь. ❗Кальянная в Санкт-Петербурге работающая в\r\n                формате Анти-кафе.💣Место с оригинальным интерьером, где можно окунуться в\r\n                спокойствие или наоборот весело отдохнуть с компанией.🎶💯⚽ Если вы желаете\r\n                покурить кальян в очень приятной атмосфере, шикарно провести свой вечер за чашкой\r\n                любого чая или же просто поиграть в приставку с друзьями, тогда ищи нас по адресу:\r\n                улица Промышленная, дом 6, ЦФТ \"Нарвский\", 3 этаж❗ */}\r\n              </div>\r\n              <div className=\"pt-5 text-center\">\r\n                <button className=\"btnMy \">Узнать подробнее о нас</button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutSection;\r\n","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\Footer.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\AboutUsPage.jsx",["158","159"],"import React from 'react';\r\n\r\nimport { setMenuItem } from '../redux/actions/headerMenu';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { TopImg } from '../components';\r\nfunction AboutUsPage() {\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(setMenuItem(0));\r\n  }, []);\r\n  return <div className=\"wrapperAboutUs\">news</div>;\r\n}\r\n\r\nexport default AboutUsPage;\r\n","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\store.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\index.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\headerMenu.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\headerMenu.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\index.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\MenuPage.jsx",["160"],"import React from 'react';\r\nimport { setMenuItem } from '../redux/actions/headerMenu';\r\nimport { useDispatch } from 'react-redux';\r\nfunction MenuPage() {\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(setMenuItem(1));\r\n  }, []);\r\n  return <div className=\"wrapperMenuPage\">МЕНЮ</div>;\r\n}\r\n\r\nexport default MenuPage;\r\n","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\index.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\MenuSection.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TableModal.jsx",["161","162","163","164"],"import React from 'react';\r\n\r\nimport closeIconModal from '../../assets/image/closeDoteModal.png';\r\nimport backGImage from '../../assets/image/dark-leather.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { purple } from '@material-ui/core/colors';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { postInfoTable } from '../redux/actions/serverMethods';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport '../css/TableModal.css';\r\n\r\nlet re = new RegExp('^.*[^A-zА-яЁё].*$');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  paper: {\r\n    borderRadius: '10px',\r\n    backgroundImage: `url(${backGImage})`,\r\n    backgroundPosition: 'center',\r\n    backgroundColor: ' white;',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(0, 0, 0),\r\n    width: '530px',\r\n    height: '480px',\r\n    ['@media (max-width:767px)']: { width: '375px', height: '500px' },\r\n  },\r\n  imgClose: {\r\n    float: 'right',\r\n    margin: 30,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  formControl: {\r\n    width: 193,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: purple[400],\r\n    '&$checked': {\r\n      color: purple[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'purple',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'purple',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'purple',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'purple',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'purple',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction TableModal() {\r\n  const dispatch = useDispatch();\r\n\r\n  const arrData = useSelector(({ nowData }) => nowData.data);\r\n  const arrTime = ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00', '00:00'];\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [oopsOpen, setOopsOpen] = React.useState(false);\r\n  const [name, setName] = React.useState('');\r\n  const [phone, setPhone] = React.useState('');\r\n  const [data, setData] = React.useState('0');\r\n  const [time, setTime] = React.useState('17');\r\n  const [description, setDescription] = React.useState('');\r\n  const [count, setCount] = React.useState('');\r\n  const [check, setCheck] = React.useState(false);\r\n  const [checkName, setCheckName] = React.useState(false);\r\n  const [labelName, setLabelName] = React.useState('Ваше имя');\r\n  const [checkPhone, setCheckPhone] = React.useState(false);\r\n  const [labelPhone, setLabelPhone] = React.useState('Ваш телефон');\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleCloseOops = () => {\r\n    setOopsOpen(false);\r\n  };\r\n\r\n  const handleChangeDate = (event) => {\r\n    setData(event.target.value);\r\n  };\r\n\r\n  const handleChangeDescription = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n  const handleChangeCount = (event) => {\r\n    if (!isNaN(event.target.value) && event.target.value < 10) {\r\n      setCount(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleChangeTime = (event) => {\r\n    setTime(event.target.value);\r\n  };\r\n\r\n  const handleChangePhone = (event) => {\r\n    if (!isNaN(event.target.value) && event.target.value.length < 11) {\r\n      setPhone(event.target.value);\r\n    }\r\n\r\n    if (phone.length < 11) {\r\n      setLabelPhone('Неверный номер');\r\n      setCheckPhone(false);\r\n    } else {\r\n      setLabelPhone('Ваш телефон');\r\n      setCheckPhone(true);\r\n    }\r\n  };\r\n\r\n  const handleChangeName = (event) => {\r\n    setName(event.target.value);\r\n    if (re.test(event.target.value)) {\r\n      setLabelName('Имя только из букв');\r\n      setCheckName(false);\r\n    } else {\r\n      setLabelName('Ваше имя');\r\n      setCheckName(true);\r\n    }\r\n  };\r\n\r\n  const checkChanger = () => {\r\n    setCheck(!check);\r\n  };\r\n  const confirmClick = (event) => {\r\n    if (\r\n      data === '' ||\r\n      time === '' ||\r\n      phone === '' ||\r\n      name === '' ||\r\n      count === '' ||\r\n      !check ||\r\n      !checkName\r\n      //  ||\r\n      // !checkPhone\r\n    ) {\r\n      alert('Введите все данные');\r\n      event.preventDefault();\r\n    } else {\r\n      event.preventDefault();\r\n\r\n      let info = JSON.stringify({\r\n        name,\r\n        phone,\r\n        description,\r\n        count,\r\n        data,\r\n        time,\r\n      });\r\n\r\n      dispatch(postInfoTable(info));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <a className=\"btnMy\" onClick={handleOpen}>\r\n        ЗАБРОНИРОВАТЬ СТОЛ\r\n      </a>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={oopsOpen}\r\n        onClose={handleCloseOops}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Fade in={oopsOpen}>\r\n          <div className={classes.paper}>\r\n            {/* <img\r\n              className={classes.imgClose}\r\n              id=\"btnClose\"\r\n              onClick={handleCloseOops}\r\n              src={closeIconModal}\r\n              alt=\"\"\r\n            /> */}\r\n            <h2 id=\"tableNotAvailable\">Столов больше нет</h2>\r\n            <div id=\"tableNotAvailableText\">Заходите позже!</div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            {/* <Button className={classes.btnCloseModal}>\r\n              {' '}\r\n              <img id=\"btnClose\" onClick={handleClose} src={closeIconModal} alt=\"\" />{' '}\r\n            </Button> */}{' '}\r\n            {/* <img\r\n              className={classes.imgClose}\r\n              id=\"btnClose\"\r\n              onClick={handleClose}\r\n              src={closeIconModal}\r\n              alt=\"\"\r\n            /> */}\r\n            <h2 id=\"transition-modal-title\">Забронировать столик</h2>\r\n            <form className={classes.root} noValidate>\r\n              <div className=\"blockAll\">\r\n                <div className=\"item\">\r\n                  <CssTextField\r\n                    required\r\n                    className={classes.margin}\r\n                    id=\"1custom-css-standard-input\"\r\n                    label={labelName}\r\n                    onChange={handleChangeName}\r\n                    value={name}\r\n                  />\r\n                </div>\r\n                <div className=\"item\">\r\n                  <CssTextField\r\n                    required\r\n                    className={classes.margin}\r\n                    label={labelPhone}\r\n                    id=\"custom-css-standard-input\"\r\n                    value={phone}\r\n                    onChange={handleChangePhone}\r\n                  />\r\n                </div>\r\n                <div className=\"item\">\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Дата *</InputLabel>\r\n                    <Select\r\n                      required\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={data}\r\n                      onChange={handleChangeDate}>\r\n                      {arrData &&\r\n                        arrData.map((value, index) => (\r\n                          <MenuItem key={index} value={value}>\r\n                            {value}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n                <div className=\"item\">\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Время *</InputLabel>\r\n                    <Select\r\n                      required\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={time}\r\n                      onChange={handleChangeTime}>\r\n                      {arrTime &&\r\n                        arrTime.map((value, index) => (\r\n                          <MenuItem key={index} value={value}>\r\n                            {value}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n                <div className=\"item\">\r\n                  <CssTextField\r\n                    required\r\n                    className={classes.margin}\r\n                    id=\"custom-css-standard-input\"\r\n                    label=\"Человек(1-9)\"\r\n                    onChange={handleChangeCount}\r\n                    value={count}\r\n                  />\r\n                </div>\r\n                <div className=\"item\">\r\n                  <CssTextField\r\n                    required\r\n                    className={classes.margin}\r\n                    id=\"custom-css-standard-input\"\r\n                    label=\"Пожелания\"\r\n                    onChange={handleChangeDescription}\r\n                    value={description}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div id=\"checkBox_Confirm\">\r\n                <div id=\"checkBox\">\r\n                  <GreenCheckbox onClick={checkChanger} checked={check} />\r\n                  Согласен на обработку персональных данных *\r\n                </div>\r\n              </div>\r\n              <div className=\"btn_priceInfo\">\r\n                <button onClick={confirmClick} className=\"btn2\">\r\n                  Отправить\r\n                </button>\r\n                <Link to=\"/menu\">\r\n                  <div className=\"priceInfo\">Все цены в разделе меню *</div>\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableModal;\r\n","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\NewsPage.jsx",["165"],"import React from 'react';\r\n\r\nimport { setMenuItem } from '../redux/actions/headerMenu';\r\nimport { useDispatch } from 'react-redux';\r\nfunction News() {\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(setMenuItem(2));\r\n  }, []);\r\n  return <div className=\"wrapperNews\">News</div>;\r\n}\r\n\r\nexport default News;\r\n","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\NewsSection.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\tableReserve.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\tableReserve.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\YandexMap.jsx",["166"],"import React from 'react';\r\n\r\nclass YandexMap extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapperGoogleMap\">\r\n        <iframe\r\n          src=\"https://yandex.ru/map-widget/v1/?um=constructor%3Ab2af018d5fcb1e75547ba387afaf8b1fd575e2ce9930f9c29cd42f1175ea84fe&amp;source=constructor\"\r\n          width=\"100%\"\r\n          height=\"400\"\r\n          frameBorder=\"0\"></iframe>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default YandexMap;\r\n","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\serverMethods.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\serverMethods.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\nowData.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\nowData.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\AdminPage.jsx",["167","168","169"],"import React from 'react';\r\nimport '../css/AdminPage.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  setAuth,\r\n  fetchInfoTablesAdmin,\r\n  fetchInfoEventsAdmin,\r\n} from '../redux/actions/serverMethods';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Table } from 'react-bootstrap';\r\nimport { TrBlock, TrBlockEvents } from '../components';\r\nimport { Button } from 'react-bootstrap';\r\nimport { setMenuItem } from '../redux/actions/headerMenu';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'purple',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'purple',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'purple',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'purple',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'purple',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction AdminPage() {\r\n  const itemsTable = useSelector(({ serverMethods }) => serverMethods.itemsTables);\r\n  const itemsEvents = useSelector(({ serverMethods }) => serverMethods.itemsEvents);\r\n  const dispatch = useDispatch();\r\n  const authCheck = useSelector(({ serverMethods }) => serverMethods.isAuth);\r\n  const [login, setLogin] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  const handleChangeLogin = (event) => {\r\n    setLogin(event.target.value);\r\n  };\r\n\r\n  const handleChangePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const sendClick = () => {\r\n    // if (login === '123' && password === '321') {\r\n    //   dispatch(setAuth(true));\r\n    //   dispatch(fetchInfoAdmin());\r\n    // } else {\r\n    //   dispatch(setAuth(false));\r\n    // }\r\n\r\n    localStorage.setItem('auth', true);\r\n    window.location.reload();\r\n  };\r\n\r\n  const logOutClick = () => {\r\n    localStorage.removeItem('auth');\r\n    window.location.reload();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(setMenuItem(3));\r\n\r\n    if (localStorage.getItem('auth') === 'true') {\r\n      dispatch(setAuth(true));\r\n      dispatch(fetchInfoTablesAdmin());\r\n      dispatch(fetchInfoEventsAdmin());\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"wrapperAdminPage\">\r\n      <div className={!authCheck ? 'form-registration' : 'form-registration-none'}>\r\n        <h2 className=\"text-center\">Вход в систему</h2>\r\n\r\n        <div className=\"btxt text-center\">\r\n          <CssTextField\r\n            required\r\n            label=\"Login\"\r\n            id=\"r112s\"\r\n            value={login}\r\n            onChange={handleChangeLogin}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"btxt text-center\">\r\n          <CssTextField\r\n            required\r\n            label=\"Password\"\r\n            id=\"r1223s\"\r\n            value={password}\r\n            onChange={handleChangePassword}\r\n          />\r\n        </div>\r\n        <div className=\"formBtn2\">\r\n          <button onClick={sendClick} className=\"btn2\">\r\n            Отправить\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={authCheck ? 'adminContent' : 'adminContent-none'}>\r\n        <div className=\"text-center\">\r\n          <h1 className=\"topTextInfo\">Данные по клиентам</h1>\r\n        </div>\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr className=\"tHeader\">\r\n              <th width=\"1%\">id</th>\r\n              <th width=\"8%\">Имя</th>\r\n              <th width=\"5%\">Телефон</th>\r\n              <th width=\"5%\">Дата</th>\r\n              <th width=\"4%\">Время</th>\r\n              <th width=\"3%\">Кол.чел</th>\r\n              <th width=\"20%\">Комментарий</th>\r\n              <th width=\"24%\">Редактировать</th>\r\n              <th width=\"24%\">Удалить</th>\r\n              <th width=\"6%\">Done</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"tContent\">\r\n            {itemsTable.length != 0 ? (\r\n              itemsTable.map((obj) => <TrBlock key={obj.id} {...obj} />)\r\n            ) : (\r\n              <> </>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n        {itemsTable.length === 0 ? <div className=\"text-center bold\">Пока никого нет</div> : <> </>}\r\n        <div className=\"adminTools\">\r\n          <Button variant=\"dark\">Добавить клиента</Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={authCheck ? 'adminContent' : 'adminContent-none'}>\r\n        <div className=\"text-center\">\r\n          <h1 className=\"topTextInfo\">Данные по мероприятиям</h1>\r\n        </div>\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr className=\"tHeader\">\r\n              <th width=\"1%\">id</th>\r\n              <th width=\"8%\">Имя</th>\r\n              <th width=\"5%\">Телефон</th>\r\n              <th width=\"12%\">Емейл</th>\r\n              <th width=\"20%\">Комментарий</th>\r\n              <th width=\"24%\">Редактировать</th>\r\n              <th width=\"24%\">Удалить</th>\r\n              <th width=\"6%\">Done</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"tContent\">\r\n            {itemsEvents.length != 0 ? (\r\n              itemsEvents.map((obj) => <TrBlockEvents key={obj.id} {...obj} />)\r\n            ) : (\r\n              <> </>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n        {itemsEvents.length === 0 ? (\r\n          <div className=\"text-center bold\">Пока никого нет</div>\r\n        ) : (\r\n          <> </>\r\n        )}\r\n        <div className=\"adminTools\">\r\n          <Button variant=\"dark\">Добавить клиента</Button>\r\n        </div>\r\n        <Button onClick={logOutClick} variant=\"dark\">\r\n          Выход из системы\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TrBlock.jsx",["170"],"import React from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { deleteIdTableItems, editorIdTableItem } from '../redux/actions/serverMethods';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport '../css/TrBlock.css';\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  paper: {\r\n    borderRadius: '10px',\r\n\r\n    backgroundPosition: 'center',\r\n    backgroundColor: ' white;',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(0, 0, 0),\r\n    width: '530px',\r\n    height: '680px',\r\n    ['@media (max-width:767px)']: { height: '480px' },\r\n  },\r\n  imgClose: {\r\n    float: 'right',\r\n    margin: 30,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  formControl: {\r\n    width: 193,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction TrBlock({ id, name, phone, data, time, count, description }) {\r\n  const [nameUser, setNameUser] = React.useState(name);\r\n  const handleChangeNameUser = (event) => {\r\n    setNameUser(event.target.value);\r\n  };\r\n\r\n  const [phoneUser, setPhoneUser] = React.useState(phone);\r\n  const handleChangePhoneUser = (event) => {\r\n    setPhoneUser(event.target.value);\r\n  };\r\n\r\n  const [dataUser, setDataUser] = React.useState(data);\r\n  const handleChangeDataUser = (event) => {\r\n    setDataUser(event.target.value);\r\n  };\r\n\r\n  const [timeUser, setTimeUser] = React.useState(time);\r\n  const handleChangeTimeUser = (event) => {\r\n    setTimeUser(event.target.value);\r\n  };\r\n\r\n  const [countUser, setCountUser] = React.useState(count);\r\n  const handleChangeCountUser = (event) => {\r\n    setCountUser(event.target.value);\r\n  };\r\n\r\n  const [descriptionUser, setDescriptionUser] = React.useState(description);\r\n  const handleChangeDescriptionUser = (event) => {\r\n    setDescriptionUser(event.target.value);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setNameUser(name);\r\n    setPhoneUser(phone);\r\n    setDataUser(data);\r\n    setTimeUser(time);\r\n    setCountUser(count);\r\n    setDescriptionUser(description);\r\n    setOpen(false);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const delIdItem = (ids) => {\r\n    dispatch(deleteIdTableItems(ids));\r\n    window.location.reload();\r\n  };\r\n\r\n  const editIdItem = (ids) => {\r\n    let info = JSON.stringify({\r\n      name: nameUser,\r\n      phone: phoneUser,\r\n      data: dataUser,\r\n      time: timeUser,\r\n      count: countUser,\r\n      description: descriptionUser,\r\n\r\n      // name: nameUser,\r\n      // phone: phoneUser,\r\n      // data: dataUser,\r\n      // clock: clockUser,\r\n      // count: countUser,\r\n      // comment: commentUser,\r\n    });\r\n\r\n    dispatch(editorIdTableItem(ids, info));\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}>\r\n          <Fade in={open}>\r\n            <div className={classes.paper}>\r\n              <h2 id=\"transition-modal-title\">Редактирование # {id}</h2>\r\n\r\n              <div className=\"blockAll\">\r\n                <div className=\"redactor_item\">\r\n                  <label>\r\n                    Имя:\r\n                    <input\r\n                      value={nameUser}\r\n                      onChange={handleChangeNameUser}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"redactor_item\">\r\n                  <label>\r\n                    Телефон:\r\n                    <input\r\n                      value={phoneUser}\r\n                      onChange={handleChangePhoneUser}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"redactor_item\">\r\n                  <label>\r\n                    Дата:\r\n                    <input\r\n                      value={dataUser}\r\n                      onChange={handleChangeDataUser}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"redactor_item\">\r\n                  <label>\r\n                    Время:\r\n                    <input\r\n                      value={timeUser}\r\n                      onChange={handleChangeTimeUser}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"redactor_item\">\r\n                  <label>\r\n                    Кол.чел:\r\n                    <input\r\n                      value={countUser}\r\n                      onChange={handleChangeCountUser}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"redactor_item\">\r\n                  <label>\r\n                    Коммент:\r\n                    <input\r\n                      value={descriptionUser}\r\n                      onChange={handleChangeDescriptionUser}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"btn_priceInfo\">\r\n                <button onClick={() => editIdItem(id)} className=\"btn2\">\r\n                  Сохранить\r\n                </button>\r\n                <button onClick={handleClose} className=\"btn2\">\r\n                  Отменить\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n      <tr>\r\n        <td>{id}</td>\r\n        <td>{name}</td>\r\n        <td>{phone}</td>\r\n        <td>{data} </td>\r\n\r\n        <td>{time}</td>\r\n        <td>{count}</td>\r\n        <td>{description}</td>\r\n        <td>\r\n          <Button onClick={handleOpen} variant=\"dark\">\r\n            Изменить\r\n          </Button>\r\n        </td>\r\n        <td>\r\n          <Button onClick={() => delIdItem(id)} variant=\"dark\">\r\n            Удалить\r\n          </Button>\r\n        </td>\r\n        <td></td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\nTrBlock.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  phone: PropTypes.string,\r\n  data: PropTypes.string,\r\n  clock: PropTypes.string,\r\n  count: PropTypes.string,\r\n  comment: PropTypes.string,\r\n};\r\nexport default TrBlock;\r\n","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\EventSection.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\EventRequestSection.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\refEvent.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\refEvent.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\GalerySliderWrapper.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TopImg.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TrBlockEvents.jsx",["171"],"import React from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { deleteIdEventItems, editorIdEventItems } from '../redux/actions/serverMethods';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../css/TrBlock.css';\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  paper: {\r\n    borderRadius: '10px',\r\n\r\n    backgroundPosition: 'center',\r\n    backgroundColor: ' white;',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(0, 0, 0),\r\n    width: '530px',\r\n    height: '680px',\r\n    ['@media (max-width:767px)']: { height: '480px' },\r\n  },\r\n  imgClose: {\r\n    float: 'right',\r\n    margin: 30,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  formControl: {\r\n    width: 193,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction TrBlockEvents({ id, name, phone, email, description }) {\r\n  const [nameUser, setNameUser] = React.useState(name);\r\n  const handleChangeNameUser = (event) => {\r\n    setNameUser(event.target.value);\r\n  };\r\n\r\n  const [phoneUser, setPhoneUser] = React.useState(phone);\r\n  const handleChangePhoneUser = (event) => {\r\n    setPhoneUser(event.target.value);\r\n  };\r\n\r\n  const [emailUser, setEmailUser] = React.useState(email);\r\n  const handleChangeEmailUser = (event) => {\r\n    setEmailUser(event.target.value);\r\n  };\r\n\r\n  const [descriptionUser, setDescriptionUser] = React.useState(description);\r\n  const handleChangeDescriptionUser = (event) => {\r\n    setDescriptionUser(event.target.value);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setNameUser(name);\r\n    setPhoneUser(phone);\r\n    setEmailUser(email);\r\n    setDescriptionUser(description);\r\n    setOpen(false);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const delIdItem = (ids) => {\r\n    dispatch(deleteIdEventItems(ids));\r\n    window.location.reload();\r\n  };\r\n\r\n  const editIdItem = (ids) => {\r\n    let info = JSON.stringify({\r\n      name: nameUser,\r\n      phone: phoneUser,\r\n      email: emailUser,\r\n      description: descriptionUser,\r\n    });\r\n\r\n    dispatch(editorIdEventItems(ids, info));\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}>\r\n          <Fade in={open}>\r\n            <div className={classes.paper}>\r\n              <h2 id=\"transition-modal-title\">Редактирование # {id}</h2>\r\n\r\n              <div className=\"blockAll\">\r\n                <div className=\"redactor_item\">\r\n                  <label>\r\n                    Имя:\r\n                    <input\r\n                      value={nameUser}\r\n                      onChange={handleChangeNameUser}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"redactor_item\">\r\n                  <label>\r\n                    Телефон:\r\n                    <input\r\n                      value={phoneUser}\r\n                      onChange={handleChangePhoneUser}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"redactor_item\">\r\n                  <label>\r\n                    E-мейл\r\n                    <input\r\n                      value={emailUser}\r\n                      onChange={handleChangeEmailUser}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"redactor_item\">\r\n                  <label>\r\n                    Коммент:\r\n                    <input\r\n                      value={descriptionUser}\r\n                      onChange={handleChangeDescriptionUser}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"btn_priceInfo\">\r\n                <button onClick={() => editIdItem(id)} className=\"btn2\">\r\n                  Сохранить\r\n                </button>\r\n                <button onClick={handleClose} className=\"btn2\">\r\n                  Отменить\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n      <tr>\r\n        <td>{id}</td>\r\n        <td>{name}</td>\r\n        <td>{phone}</td>\r\n        <td>{email}</td>\r\n        <td>{description}</td>\r\n        <td>\r\n          <Button onClick={handleOpen} variant=\"dark\">\r\n            Изменить\r\n          </Button>\r\n        </td>\r\n        <td>\r\n          <Button onClick={() => delIdItem(id)} variant=\"dark\">\r\n            Удалить\r\n          </Button>\r\n        </td>\r\n        <td></td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nTrBlockEvents.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  phone: PropTypes.string,\r\n  email: PropTypes.string,\r\n  comment: PropTypes.string,\r\n};\r\nexport default TrBlockEvents;\r\n","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\ScrollToTop.jsx",[],{"ruleId":"172","severity":1,"message":"173","line":34,"column":6,"nodeType":"174","endLine":34,"endColumn":8,"suggestions":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"172","severity":1,"message":"173","line":30,"column":6,"nodeType":"174","endLine":30,"endColumn":8,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":14},{"ruleId":"181","severity":1,"message":"185","line":6,"column":10,"nodeType":"183","messageId":"184","endLine":6,"endColumn":16},{"ruleId":"172","severity":1,"message":"173","line":11,"column":6,"nodeType":"174","endLine":11,"endColumn":8,"suggestions":"186"},{"ruleId":"172","severity":1,"message":"173","line":8,"column":6,"nodeType":"174","endLine":8,"endColumn":8,"suggestions":"187"},{"ruleId":"181","severity":1,"message":"188","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":22},{"ruleId":"189","severity":1,"message":"190","line":47,"column":5,"nodeType":"191","messageId":"192","endLine":47,"endColumn":70,"fix":"193"},{"ruleId":"181","severity":1,"message":"194","line":115,"column":10,"nodeType":"183","messageId":"184","endLine":115,"endColumn":20},{"ruleId":"195","severity":1,"message":"196","line":206,"column":7,"nodeType":"197","endLine":206,"endColumn":49},{"ruleId":"172","severity":1,"message":"173","line":9,"column":6,"nodeType":"174","endLine":9,"endColumn":8,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":7,"column":9,"nodeType":"197","endLine":11,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":80,"column":6,"nodeType":"174","endLine":80,"endColumn":8,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":132,"column":32,"nodeType":"204","messageId":"205","endLine":132,"endColumn":34},{"ruleId":"202","severity":1,"message":"203","line":163,"column":33,"nodeType":"204","messageId":"205","endLine":163,"endColumn":35},{"ruleId":"189","severity":1,"message":"190","line":29,"column":5,"nodeType":"191","messageId":"192","endLine":29,"endColumn":54,"fix":"206"},{"ruleId":"189","severity":1,"message":"190","line":29,"column":5,"nodeType":"191","messageId":"192","endLine":29,"endColumn":54,"fix":"207"},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["208"],"no-native-reassign",["209"],"no-negated-in-lhs",["210"],["211"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'TopImg' is defined but never used.",["212"],["213"],"'closeIconModal' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['@media (max-width:767px)'] found.","Property","unnecessarilyComputedProperty",{"range":"214","text":"215"},"'checkPhone' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["216"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["217"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"218","text":"215"},{"range":"219","text":"215"},{"desc":"220","fix":"221"},"no-global-assign","no-unsafe-negation",{"desc":"220","fix":"222"},{"desc":"220","fix":"223"},{"desc":"220","fix":"224"},[1508,1536],"'@media (max-width:767px)'",{"desc":"220","fix":"225"},{"desc":"220","fix":"226"},[896,924],[897,925],"Update the dependencies array to be: [dispatch]",{"range":"227","text":"228"},{"range":"229","text":"228"},{"range":"230","text":"228"},{"range":"231","text":"228"},{"range":"232","text":"228"},{"range":"233","text":"228"},[1050,1052],"[dispatch]",[777,779],[301,303],[253,255],[251,253],[2254,2256]]