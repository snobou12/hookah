[{"C:\\hookahProject\\hookah-react\\src\\index.js":"1","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\app\\App.js":"2","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\Header.jsx":"3","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\MainPage.jsx":"4","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\AboutSection.jsx":"5","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\Footer.jsx":"6","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\AboutUsPage.jsx":"7","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\store.js":"8","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\index.js":"9","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\headerMenu.js":"10","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\headerMenu.js":"11","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\index.js":"12","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\index.js":"13","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\MenuSection.jsx":"14","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TableModal.jsx":"15","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\NewsPage.jsx":"16","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\NewsSection.jsx":"17","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\tableReserve.js":"18","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\tableReserve.js":"19","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\YandexMap.jsx":"20","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\serverMethods.js":"21","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\serverMethods.js":"22","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\nowData.js":"23","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\nowData.js":"24","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\AdminPage.jsx":"25","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TrBlock.jsx":"26","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\EventSection.jsx":"27","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\EventRequestSection.jsx":"28","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\refEvent.js":"29","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\refEvent.js":"30","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\GalerySliderWrapper.jsx":"31","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TopImg.jsx":"32","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TrBlockEvents.jsx":"33","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\ScrollToTop.jsx":"34","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\MenuPageHookan.jsx":"35","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\MenuPageDrinks.jsx":"36","C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\MenuPageTea.jsx":"37","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\ModalConfirm.jsx":"38","C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TrBLockComp.jsx":"39","E:\\testGit\\hookan\\src\\index.js":"40","E:\\testGit\\hookan\\src\\frontend\\components\\app\\App.js":"41","E:\\testGit\\hookan\\src\\frontend\\redux\\store.js":"42","E:\\testGit\\hookan\\src\\frontend\\components\\index.js":"43","E:\\testGit\\hookan\\src\\frontend\\redux\\actions\\nowData.js":"44","E:\\testGit\\hookan\\src\\frontend\\components\\ScrollToTop.jsx":"45","E:\\testGit\\hookan\\src\\frontend\\pages\\index.js":"46","E:\\testGit\\hookan\\src\\frontend\\redux\\reducers\\index.js":"47","E:\\testGit\\hookan\\src\\frontend\\components\\AboutSection.jsx":"48","E:\\testGit\\hookan\\src\\frontend\\components\\GalerySliderWrapper.jsx":"49","E:\\testGit\\hookan\\src\\frontend\\components\\MenuSection.jsx":"50","E:\\testGit\\hookan\\src\\frontend\\components\\Footer.jsx":"51","E:\\testGit\\hookan\\src\\frontend\\components\\NewsSection.jsx":"52","E:\\testGit\\hookan\\src\\frontend\\components\\TableModal.jsx":"53","E:\\testGit\\hookan\\src\\frontend\\components\\Header.jsx":"54","E:\\testGit\\hookan\\src\\frontend\\components\\TrBlockEvents.jsx":"55","E:\\testGit\\hookan\\src\\frontend\\components\\TopImg.jsx":"56","E:\\testGit\\hookan\\src\\frontend\\components\\EventRequestSection.jsx":"57","E:\\testGit\\hookan\\src\\frontend\\components\\TrBLockComp.jsx":"58","E:\\testGit\\hookan\\src\\frontend\\components\\YandexMap.jsx":"59","E:\\testGit\\hookan\\src\\frontend\\components\\EventSection.jsx":"60","E:\\testGit\\hookan\\src\\frontend\\redux\\reducers\\tableReserve.js":"61","E:\\testGit\\hookan\\src\\frontend\\redux\\reducers\\nowData.js":"62","E:\\testGit\\hookan\\src\\frontend\\redux\\reducers\\headerMenu.js":"63","E:\\testGit\\hookan\\src\\frontend\\redux\\reducers\\serverMethods.js":"64","E:\\testGit\\hookan\\src\\frontend\\redux\\reducers\\refEvent.js":"65","E:\\testGit\\hookan\\src\\frontend\\pages\\MenuPageDrinks.jsx":"66","E:\\testGit\\hookan\\src\\frontend\\pages\\MenuPageTea.jsx":"67","E:\\testGit\\hookan\\src\\frontend\\pages\\MainPage.jsx":"68","E:\\testGit\\hookan\\src\\frontend\\pages\\NewsPage.jsx":"69","E:\\testGit\\hookan\\src\\frontend\\pages\\MenuPageHookan.jsx":"70","E:\\testGit\\hookan\\src\\frontend\\pages\\AdminPage.jsx":"71","E:\\testGit\\hookan\\src\\frontend\\redux\\actions\\serverMethods.js":"72","E:\\testGit\\hookan\\src\\frontend\\redux\\actions\\headerMenu.js":"73","E:\\testGit\\hookan\\src\\frontend\\redux\\actions\\refEvent.js":"74","E:\\testGit\\hookan\\src\\frontend\\components\\TrBlockTables.jsx":"75","E:\\testGit\\hookan\\src\\frontend\\components\\ButtonClientAddComp.jsx":"76","E:\\testGit\\hookan\\src\\frontend\\components\\ButtonClientAddTables.jsx":"77","E:\\testGit\\hookan\\src\\frontend\\components\\ButtonClientAddEvents.jsx":"78","E:\\testGit\\hookan\\src\\frontend\\pages\\GaleryPage.jsx":"79"},{"size":596,"mtime":1609974906396,"results":"80","hashOfConfig":"81"},{"size":1957,"mtime":1610129545718,"results":"82","hashOfConfig":"81"},{"size":2754,"mtime":1610124451897,"results":"83","hashOfConfig":"81"},{"size":1193,"mtime":1610235167318,"results":"84","hashOfConfig":"81"},{"size":4302,"mtime":1610067124706,"results":"85","hashOfConfig":"81"},{"size":4008,"mtime":1610150092060,"results":"86","hashOfConfig":"81"},{"size":498,"mtime":1610125154827,"results":"87","hashOfConfig":"81"},{"size":350,"mtime":1610065659923,"results":"88","hashOfConfig":"81"},{"size":524,"mtime":1610065666632,"results":"89","hashOfConfig":"81"},{"size":443,"mtime":1610124951829,"results":"90","hashOfConfig":"81"},{"size":190,"mtime":1610124929082,"results":"91","hashOfConfig":"81"},{"size":397,"mtime":1610129511041,"results":"92","hashOfConfig":"81"},{"size":896,"mtime":1610318598990,"results":"93","hashOfConfig":"81"},{"size":3003,"mtime":1610231279411,"results":"94","hashOfConfig":"81"},{"size":13606,"mtime":1610131664890,"results":"95","hashOfConfig":"81"},{"size":339,"mtime":1610124896314,"results":"96","hashOfConfig":"81"},{"size":5896,"mtime":1610132036587,"results":"97","hashOfConfig":"81"},{"size":415,"mtime":1609251838633,"results":"98","hashOfConfig":"81"},{"size":198,"mtime":1609251645415,"results":"99","hashOfConfig":"81"},{"size":457,"mtime":1609275694868,"results":"100","hashOfConfig":"81"},{"size":704,"mtime":1610319561741,"results":"101","hashOfConfig":"81"},{"size":4116,"mtime":1610321569925,"results":"102","hashOfConfig":"81"},{"size":243,"mtime":1609873915854,"results":"103","hashOfConfig":"81"},{"size":86,"mtime":1609800090080,"results":"104","hashOfConfig":"81"},{"size":7121,"mtime":1610321273916,"results":"105","hashOfConfig":"81"},{"size":7107,"mtime":1610065634219,"results":"106","hashOfConfig":"81"},{"size":2645,"mtime":1610149987154,"results":"107","hashOfConfig":"81"},{"size":5534,"mtime":1610150587981,"results":"108","hashOfConfig":"81"},{"size":238,"mtime":1609952940819,"results":"109","hashOfConfig":"81"},{"size":82,"mtime":1609952973554,"results":"110","hashOfConfig":"81"},{"size":1085,"mtime":1610134075567,"results":"111","hashOfConfig":"81"},{"size":756,"mtime":1610054235487,"results":"112","hashOfConfig":"81"},{"size":5863,"mtime":1610065504160,"results":"113","hashOfConfig":"81"},{"size":1123,"mtime":1610056579154,"results":"114","hashOfConfig":"81"},{"size":2429,"mtime":1610146860396,"results":"115","hashOfConfig":"81"},{"size":2194,"mtime":1610229513034,"results":"116","hashOfConfig":"81"},{"size":2196,"mtime":1610229532270,"results":"117","hashOfConfig":"81"},{"size":1682,"mtime":1610070053055,"results":"118","hashOfConfig":"81"},{"size":8283,"mtime":1610321167699,"results":"119","hashOfConfig":"81"},{"size":618,"mtime":1610397876982,"results":"120","hashOfConfig":"121"},{"size":2159,"mtime":1610582486767,"results":"122","hashOfConfig":"121"},{"size":350,"mtime":1610397876981,"results":"123","hashOfConfig":"121"},{"size":1135,"mtime":1610577825842,"results":"124","hashOfConfig":"121"},{"size":86,"mtime":1610397876776,"results":"125","hashOfConfig":"121"},{"size":1123,"mtime":1610397876689,"results":"126","hashOfConfig":"121"},{"size":395,"mtime":1610582468695,"results":"127","hashOfConfig":"121"},{"size":524,"mtime":1610397876777,"results":"128","hashOfConfig":"121"},{"size":7408,"mtime":1610582080574,"results":"129","hashOfConfig":"121"},{"size":1085,"mtime":1610397876598,"results":"130","hashOfConfig":"121"},{"size":3159,"mtime":1610621910598,"results":"131","hashOfConfig":"121"},{"size":4027,"mtime":1610582121035,"results":"132","hashOfConfig":"121"},{"size":10739,"mtime":1610501983952,"results":"133","hashOfConfig":"121"},{"size":14355,"mtime":1610621731618,"results":"134","hashOfConfig":"121"},{"size":2693,"mtime":1610582054457,"results":"135","hashOfConfig":"121"},{"size":6912,"mtime":1610502980017,"results":"136","hashOfConfig":"121"},{"size":756,"mtime":1610397876693,"results":"137","hashOfConfig":"121"},{"size":5581,"mtime":1610501329354,"results":"138","hashOfConfig":"121"},{"size":6109,"mtime":1610503068628,"results":"139","hashOfConfig":"121"},{"size":457,"mtime":1610409531100,"results":"140","hashOfConfig":"121"},{"size":2441,"mtime":1610501344612,"results":"141","hashOfConfig":"121"},{"size":415,"mtime":1610397876778,"results":"142","hashOfConfig":"121"},{"size":243,"mtime":1610397876777,"results":"143","hashOfConfig":"121"},{"size":443,"mtime":1610397876777,"results":"144","hashOfConfig":"121"},{"size":820,"mtime":1610416566238,"results":"145","hashOfConfig":"121"},{"size":238,"mtime":1610397876778,"results":"146","hashOfConfig":"121"},{"size":2194,"mtime":1610397876773,"results":"147","hashOfConfig":"121"},{"size":2196,"mtime":1610397876774,"results":"148","hashOfConfig":"121"},{"size":1200,"mtime":1610621832083,"results":"149","hashOfConfig":"121"},{"size":422,"mtime":1610409189037,"results":"150","hashOfConfig":"121"},{"size":2429,"mtime":1610397876773,"results":"151","hashOfConfig":"121"},{"size":8829,"mtime":1610505258091,"results":"152","hashOfConfig":"121"},{"size":5202,"mtime":1610505268052,"results":"153","hashOfConfig":"121"},{"size":190,"mtime":1610397876776,"results":"154","hashOfConfig":"121"},{"size":82,"mtime":1610397876776,"results":"155","hashOfConfig":"121"},{"size":8619,"mtime":1610502964651,"results":"156","hashOfConfig":"121"},{"size":5297,"mtime":1610502690501,"results":"157","hashOfConfig":"121"},{"size":7435,"mtime":1610504823055,"results":"158","hashOfConfig":"121"},{"size":6024,"mtime":1610408073911,"results":"159","hashOfConfig":"121"},{"size":498,"mtime":1610582456357,"results":"160","hashOfConfig":"121"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zh06n3",{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"197"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},"qspauv",{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"243"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"243"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"243"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"273","usedDeprecatedRules":"243"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"243"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"279","usedDeprecatedRules":"243"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"284","usedDeprecatedRules":"243"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"287","usedDeprecatedRules":"243"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"243"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"243"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"243"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"243"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"243"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"243"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"243"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"243"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"331","usedDeprecatedRules":"243"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"334","usedDeprecatedRules":"243"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"337","usedDeprecatedRules":"243"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"340","usedDeprecatedRules":"243"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"243"},"C:\\hookahProject\\hookah-react\\src\\index.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\app\\App.js",["344"],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\Header.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\MainPage.jsx",["345"],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\AboutSection.jsx",["346","347"],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\Footer.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\AboutUsPage.jsx",["348","349"],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\store.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\index.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\headerMenu.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\headerMenu.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\index.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\index.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\MenuSection.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TableModal.jsx",["350","351","352","353","354","355"],"C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\NewsPage.jsx",["356"],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\NewsSection.jsx",["357"],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\tableReserve.js",[],["358","359"],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\tableReserve.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\YandexMap.jsx",["360"],"import React from 'react';\r\n\r\nclass YandexMap extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapperGoogleMap\">\r\n        <iframe\r\n          src=\"https://yandex.ru/map-widget/v1/?um=constructor%3Ab2af018d5fcb1e75547ba387afaf8b1fd575e2ce9930f9c29cd42f1175ea84fe&amp;source=constructor\"\r\n          width=\"100%\"\r\n          height=\"400\"\r\n          frameBorder=\"0\"></iframe>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default YandexMap;\r\n","C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\serverMethods.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\serverMethods.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\nowData.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\nowData.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\AdminPage.jsx",["361","362","363","364"],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TrBlock.jsx",["365"],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\EventSection.jsx",["366"],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\EventRequestSection.jsx",["367","368"],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\reducers\\refEvent.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\redux\\actions\\refEvent.js",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\GalerySliderWrapper.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TopImg.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TrBlockEvents.jsx",["369"],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\ScrollToTop.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\MenuPageHookan.jsx",["370"],"C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\MenuPageDrinks.jsx",["371"],"C:\\hookahProject\\hookah-react\\src\\frontend\\pages\\MenuPageTea.jsx",["372"],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\ModalConfirm.jsx",[],"C:\\hookahProject\\hookah-react\\src\\frontend\\components\\TrBLockComp.jsx",["373","374"],"E:\\testGit\\hookan\\src\\index.js",[],["375","376"],"E:\\testGit\\hookan\\src\\frontend\\components\\app\\App.js",["377"],"import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setNowData } from '../../redux/actions/nowData';\r\n\r\nimport {\r\n  GaleryPage,\r\n  MainPage,\r\n  MenuPageHookan,\r\n  NewsPage,\r\n  AdminPage,\r\n  MenuPageDrinks,\r\n  MenuPageTea,\r\n} from '../../pages';\r\nimport { Footer, Header, YandexMap } from '../';\r\n\r\nimport '../../css/App.css';\r\nimport ScrollToTop from '../ScrollToTop';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const activeItemHeader = useSelector(({ headerMenu }) => headerMenu.activeItemHeader);\r\n\r\n  const smoothToUp = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n  React.useEffect(() => {\r\n    const arrDate = [];\r\n    let today = new Date();\r\n    let dd = String(today.getDate()).padStart(2, '0');\r\n    let ddNumber = Number(dd);\r\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    let yyyy = today.getFullYear();\r\n    for (let i = 0; i < 7; i++) {\r\n      arrDate.push((today = ddNumber + i + '/' + mm + '/' + yyyy));\r\n    }\r\n    dispatch(setNowData(arrDate));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"main-wrapper\">\r\n        <Header clickSmooth={smoothToUp} activeItemProp={activeItemHeader} />\r\n\r\n        <div className=\"contentPage\">\r\n          <Route path=\"/\" exact>\r\n            <MainPage clickSmooth={smoothToUp} />\r\n          </Route>\r\n          <Route path=\"/galery\" exact>\r\n            <GaleryPage />\r\n          </Route>\r\n\r\n          <Route path=\"/menu/hookan\" exact>\r\n            <MenuPageHookan />\r\n          </Route>\r\n          <Route path=\"/menu/drinks\" exact>\r\n            <MenuPageDrinks />\r\n          </Route>\r\n          <Route path=\"/menu/tea\" exact>\r\n            <MenuPageTea />\r\n          </Route>\r\n\r\n          <Route path=\"/news\" exact>\r\n            <NewsPage />\r\n          </Route>\r\n          <Route path=\"/admin\" exact>\r\n            <AdminPage />\r\n          </Route>\r\n        </div>\r\n        <YandexMap />\r\n\r\n        <Footer clickSmooth={smoothToUp} />\r\n        <ScrollToTop />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\testGit\\hookan\\src\\frontend\\redux\\store.js",[],"E:\\testGit\\hookan\\src\\frontend\\components\\index.js",[],"E:\\testGit\\hookan\\src\\frontend\\redux\\actions\\nowData.js",[],"E:\\testGit\\hookan\\src\\frontend\\components\\ScrollToTop.jsx",[],"E:\\testGit\\hookan\\src\\frontend\\pages\\index.js",[],"E:\\testGit\\hookan\\src\\frontend\\redux\\reducers\\index.js",[],"E:\\testGit\\hookan\\src\\frontend\\components\\AboutSection.jsx",["378","379","380","381","382","383","384","385"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Container, Image } from 'react-bootstrap';\r\n\r\nimport '../css/AboutSection.css';\r\nimport aboutSectionImg1 from '../../assets/image/aboutSectionImg1.jpg';\r\nimport aboutSectionImg1Small from '../../assets/image/aboutSectionImg1Small.jpg';\r\nimport aboutSectionImg2 from '../../assets/image/aboutSectionImg2.jpg';\r\nimport aboutSectionImg2Small from '../../assets/image/aboutSectionImg2Small.jpg';\r\nimport aboutSectionImg3 from '../../assets/image/aboutSectionImg3.jpg';\r\nimport aboutSectionImg3Small from '../../assets/image/aboutSectionImg3Small.jpg';\r\n{\r\n}\r\nfunction AboutSection({ smoothProp }) {\r\n  return (\r\n    <div className=\"about-section-wrapper\">\r\n      <Container className=\"fullFirstContainer pb-5\" fluid>\r\n        <Row className=\"pt-5\">\r\n          <Col>\r\n            <h2 className=\"textTopAbout text-center \">О нас</h2>\r\n            <hr className=\"short text-center\" />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"rowAboutSection pt-5\">\r\n          <Col sm={5}>\r\n            <div>\r\n              <Row className=\"rowAboutSection\">\r\n                <Col className=\"text-right\" xs={6}>\r\n                  <div className=\"element pdImage1\">\r\n                    <a data-fancybox=\"gallery\" href={aboutSectionImg1}>\r\n                      <img\r\n                        className=\"aboutSectionImg\"\r\n                        alt=\"aboutImg\"\r\n                        className=\"aboutSectionImg mt-5\"\r\n                        src={aboutSectionImg1Small}\r\n                      />\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"element pdImage2\">\r\n                    <a data-fancybox=\"gallery\" href={aboutSectionImg3}>\r\n                      <img\r\n                        className=\"aboutSectionImg\"\r\n                        alt=\"aboutImg\"\r\n                        className=\"aboutSectionImg mt-5\"\r\n                        src={aboutSectionImg3Small}\r\n                      />\r\n                    </a>\r\n                  </div>\r\n                </Col>\r\n                <Col xs={6} className=\"text-left pdImage3\">\r\n                  <div className=\"element\">\r\n                    <a data-fancybox=\"gallery\" href={aboutSectionImg2}>\r\n                      <img\r\n                        className=\"aboutSectionImg\"\r\n                        alt=\"aboutImg\"\r\n                        className=\"aboutSectionImg mt-5\"\r\n                        src={aboutSectionImg2Small}\r\n                      />\r\n                    </a>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"pdTextAbout text-left\" sm={7}>\r\n            <div className=\"text-center textDownAbout\">\r\n              Уютное пространство для отличного отдыха — это наша кальянная в Санкт-Петербурге.\r\n              Приятная и дружелюбная атмосфера поможет отключиться от будничной суеты и провести\r\n              время за общением и вкусными кальянами И если вы ищете, где покурить кальян, приходите\r\n              к нам в место с оригинальным интерьером, где можно окунуться в спокойствие или\r\n              наоборот весело отдохнуть с компанией. Если вы желаете покурить кальян в очень\r\n              приятной атмосфере, шикарно провести свой вечер за чашкой любого чая или же просто\r\n              поиграть в приставку с друзьями, тогда ищите нас по адресу: улица Промышленная, дом 6,\r\n              ЦФТ \"Нарвский\", 3 этаж\r\n            </div>\r\n            <div className=\"pt-5 text-center\">\r\n              <Link onClick={smoothProp} to=\"/galery\">\r\n                <button className=\"btnMy \">Просмотреть галерею</button>\r\n              </Link>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"fullSecondContainer pb-5\">\r\n        <Row className=\"pt-5\">\r\n          <Col>\r\n            <h2 className=\"textTopAbout text-center \">О нас</h2>\r\n            <hr className=\"short text-center\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"text-center\">\r\n            <a data-fancybox=\"gallery\" href={aboutSectionImg2}>\r\n              <img\r\n                className=\"aboutSectionImg\"\r\n                alt=\"aboutImg\"\r\n                className=\"aboutSectionImg mt-5\"\r\n                src={aboutSectionImg2Small}\r\n              />\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col className=\"text-center\">\r\n            <a data-fancybox=\"gallery\" href={aboutSectionImg3}>\r\n              <img\r\n                className=\"aboutSectionImg\"\r\n                alt=\"aboutImg\"\r\n                className=\"aboutSectionImg mt-5\"\r\n                src={aboutSectionImg3Small}\r\n              />\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col className=\"text-center\">\r\n            <a data-fancybox=\"gallery\" href={aboutSectionImg1}>\r\n              <img\r\n                className=\"aboutSectionImg\"\r\n                alt=\"aboutImg\"\r\n                className=\"aboutSectionImg mt-5\"\r\n                src={aboutSectionImg1Small}\r\n              />\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <div className=\"text-center textDownAbout pt-5\">\r\n              Уютное пространство для отличного отдыха — это наша кальянная в Санкт-Петербурге.\r\n              Приятная и дружелюбная атмосфера поможет отключиться от будничной суеты и провести\r\n              время за общением и вкусными кальянами И если вы ищете, где покурить кальян, приходите\r\n              к нам в место с оригинальным интерьером, где можно окунуться в спокойствие или\r\n              наоборот весело отдохнуть с компанией. Если вы желаете покурить кальян в очень\r\n              приятной атмосфере, шикарно провести свой вечер за чашкой любого чая или же просто\r\n              поиграть в приставку с друзьями, тогда ищите нас по адресу: улица Промышленная, дом 6,\r\n              ЦФТ \"Нарвский\", 3 этаж\r\n            </div>\r\n            <div className=\"pt-3 text-center\">\r\n              <Link onClick={smoothProp} to=\"/galery\">\r\n                <button className=\"btnMy \">Просмотреть галерею</button>\r\n              </Link>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutSection;\r\n","E:\\testGit\\hookan\\src\\frontend\\components\\GalerySliderWrapper.jsx",[],"E:\\testGit\\hookan\\src\\frontend\\components\\MenuSection.jsx",[],"E:\\testGit\\hookan\\src\\frontend\\components\\Footer.jsx",[],"E:\\testGit\\hookan\\src\\frontend\\components\\NewsSection.jsx",["386"],"import React from 'react';\r\n\r\nimport news1 from '../../assets/image/news1.jpg';\r\nimport news2 from '../../assets/image/news2.jpg';\r\nimport news3 from '../../assets/image/news3.jpg';\r\nimport news4 from '../../assets/image/news4.jpg';\r\n\r\nimport { Container, CardDeck, Card, Button, Row, Col } from 'react-bootstrap';\r\nimport '../css/NewsSection.css';\r\nimport 'react-fancybox/lib/fancybox.css';\r\nfunction NewsSection() {\r\n  return (\r\n    <div className=\"news-section-wrapper\">\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"textTopNews pb-5\">\r\n              <h2 className=\"textTopNews text-center mt-5\">Последние новости</h2>\r\n              <hr className=\"short text-center\" />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"cardItem1\">\r\n              <Card\r\n                className=\"cardItem1\"\r\n                style={{\r\n                  backgroundColor: '#230329',\r\n                  border: ' solid 5px white',\r\n                  borderRadius: '20px 20px 20px 20px',\r\n                  minWidth: '340px',\r\n                }}>\r\n                <Card.Img\r\n                  style={{ borderRadius: '20px 20px 0 0' }}\r\n                  height=\"300px\"\r\n                  variant=\"top\"\r\n                  src={news1}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <div className=\"textDownNews text-center bold\">Новый табак</div>\r\n                  </Card.Title>\r\n                  <Card.Text>\r\n                    <div className=\"textDownNews text-center\">\r\n                      Приходи к нам,чтобы попробовать один из самых дымных кальянов на Табабке💥💥💥\r\n                      Куча разных вкусов табака от \"Кактуса с ромашкой\" до \"Секса на даче\"\r\n                    </div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <Card\r\n              style={{\r\n                backgroundColor: '#230329',\r\n                border: ' solid 5px white',\r\n                borderRadius: '20px 20px 20px 20px',\r\n                minWidth: '340px',\r\n              }}>\r\n              <Card.Img\r\n                style={{ borderRadius: '20px 20px 0 0' }}\r\n                height=\"300px\"\r\n                variant=\"top\"\r\n                src={news2}\r\n              />\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  <div className=\"textDownNews text-center bold\">Новый табак</div>\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  <div className=\"textDownNews text-center\">\r\n                    Приходи к нам,чтобы попробовать один из самых дымных кальянов на Табабке💥💥💥\r\n                    Куча разных вкусов табака от \"Кактуса с ромашкой\" до \"Секса на даче\"\r\n                  </div>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col>\r\n            <div className=\"cardItem3\">\r\n              <Card\r\n                style={{\r\n                  backgroundColor: '#230329',\r\n                  border: ' solid 5px white',\r\n                  borderRadius: '20px 20px 20px 20px',\r\n                  minWidth: '340px',\r\n                }}>\r\n                <Card.Img\r\n                  style={{ borderRadius: '20px 20px 0 0' }}\r\n                  height=\"300px\"\r\n                  variant=\"top\"\r\n                  src={news3}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <div className=\"textDownNews text-center bold\">Новый табак</div>\r\n                  </Card.Title>\r\n                  <Card.Text>\r\n                    <div className=\"textDownNews text-center\">\r\n                      Приходи к нам,чтобы попробовать один из самых дымных кальянов на Табабке💥💥💥\r\n                      Куча разных вкусов табака от \"Кактуса с ромашкой\" до \"Секса на даче\"\r\n                    </div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <Card\r\n              style={{\r\n                backgroundColor: '#230329',\r\n                border: ' solid 5px white',\r\n                borderRadius: '20px 20px 20px 20px',\r\n                minWidth: '340px',\r\n              }}>\r\n              <Card.Img\r\n                style={{ borderRadius: '20px 20px 0 0' }}\r\n                height=\"300px\"\r\n                variant=\"top\"\r\n                src={news4}\r\n              />\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  <div className=\"textDownNews text-center bold\">Новый табак</div>\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  <div className=\"textDownNews text-center\">\r\n                    Приходи к нам,чтобы попробовать один из самых дымных кальянов на Табабке💥💥💥\r\n                    Куча разных вкусов табака от \"Кактуса с ромашкой\" до \"Секса на даче\"\r\n                  </div>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"textTopNews pb-5\">\r\n              <h2 className=\"textTopNews text-center mt-5\">Акции</h2>\r\n              <hr className=\"short text-center\" />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pb-5\">\r\n          <Col>\r\n            <div className=\"cardItem1\">\r\n              <Card\r\n                className=\"cardItem1\"\r\n                style={{\r\n                  backgroundColor: '#230329',\r\n                  border: ' solid 5px white',\r\n                  borderRadius: '20px 20px 20px 20px',\r\n                  minWidth: '340px',\r\n                }}>\r\n                <Card.Img\r\n                  style={{ borderRadius: '20px 20px 0 0' }}\r\n                  height=\"300px\"\r\n                  variant=\"top\"\r\n                  src={news1}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <div className=\"textDownNews text-center bold\">Новый табак</div>\r\n                  </Card.Title>\r\n                  <Card.Text>\r\n                    <div className=\"textDownNews text-center\">\r\n                      Приходи к нам,чтобы попробовать один из самых дымных кальянов на Табабке💥💥💥\r\n                      Куча разных вкусов табака от \"Кактуса с ромашкой\" до \"Секса на даче\"\r\n                    </div>\r\n                  </Card.Text>\r\n                  <div className=\"text-center\">\r\n                    <Button variant=\"dark\">Узнать подробнее</Button>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <Card\r\n              style={{\r\n                backgroundColor: '#230329',\r\n                border: ' solid 5px white',\r\n                borderRadius: '20px 20px 20px 20px',\r\n                minWidth: '340px',\r\n              }}>\r\n              <Card.Img\r\n                style={{ borderRadius: '20px 20px 0 0' }}\r\n                height=\"300px\"\r\n                variant=\"top\"\r\n                src={news2}\r\n              />\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  <div className=\"textDownNews text-center bold\">Новый табак</div>\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  <div className=\"textDownNews text-center\">\r\n                    Приходи к нам,чтобы попробовать один из самых дымных кальянов на Табабке💥💥💥\r\n                    Куча разных вкусов табака от \"Кактуса с ромашкой\" до \"Секса на даче\"\r\n                  </div>\r\n                </Card.Text>\r\n                <div className=\"text-center\">\r\n                  <Button variant=\"dark\">Узнать подробнее</Button>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"textTopNews pb-5\">\r\n              <h2 className=\"textTopNews text-center mt-5\">Конкурсы</h2>\r\n              <hr className=\"short text-center\" />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pb-5\">\r\n          <Col>\r\n            <div className=\"cardItem1\">\r\n              <Card\r\n                className=\"cardItem1\"\r\n                style={{\r\n                  backgroundColor: '#230329',\r\n                  border: ' solid 5px white',\r\n                  borderRadius: '20px 20px 20px 20px',\r\n                  width: '400px',\r\n                }}>\r\n                <Card.Img\r\n                  style={{ borderRadius: '20px 20px 0 0' }}\r\n                  height=\"300px\"\r\n                  variant=\"top\"\r\n                  src={news1}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <div className=\"textDownNews text-center bold\">Новый табак</div>\r\n                  </Card.Title>\r\n                  <Card.Text>\r\n                    <div className=\"textDownNews text-center\">\r\n                      Приходи к нам,чтобы попробовать один из самых дымных кальянов на Табабке💥💥💥\r\n                      Куча разных вкусов табака от \"Кактуса с ромашкой\" до \"Секса на даче\"\r\n                    </div>\r\n                  </Card.Text>\r\n                  <div className=\"text-center\">\r\n                    <Button variant=\"dark\">Узнать подробнее</Button>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsSection;\r\n","E:\\testGit\\hookan\\src\\frontend\\components\\TableModal.jsx",["387","388","389","390","391"],"import React from 'react';\r\n\r\nimport closeIconModal from '../../assets/image/closeDoteModal.png';\r\nimport backGImage from '../../assets/image/dark-leather.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { postInfoTable } from '../redux/actions/serverMethods';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { ModalConfirm } from '../components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport '../css/TableModal.css';\r\n\r\nlet re = new RegExp('^.*[^A-zА-яЁё].*$');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  paper: {\r\n    borderRadius: '10px',\r\n    backgroundImage: `url(${backGImage})`,\r\n    backgroundPosition: 'center',\r\n    backgroundColor: ' white;',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(0, 0, 0),\r\n    width: '530px',\r\n    height: '430px',\r\n    ['@media (max-width:767px)']: { width: '375px', height: '500px' },\r\n  },\r\n  imgClose: {\r\n    // position: 'fixed',\r\n    // right: '35%',\r\n    // top: '22%',\r\n    // bac\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  formControl: {\r\n    width: 193,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst useStylesConfirmModal = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  paper: {\r\n    borderRadius: '10px',\r\n    backgroundImage: `url(${backGImage})`,\r\n    backgroundPosition: 'center',\r\n    backgroundColor: ' white;',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(0, 0, 0),\r\n    width: '500px',\r\n    height: '90px',\r\n    ['@media (max-width:767px)']: { width: '375px', height: '130px' },\r\n  },\r\n  imgClose: {\r\n    float: 'right',\r\n    margin: 30,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  formControl: {\r\n    width: 193,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: purple[400],\r\n    '&$checked': {\r\n      color: purple[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'purple',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'purple',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'purple',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'purple',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'purple',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction TableModal() {\r\n  const dispatch = useDispatch();\r\n\r\n  const arrData = useSelector(({ nowData }) => nowData.data);\r\n  const arrTime = ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00', '00:00'];\r\n  const classes = useStyles();\r\n  const classesConfirmModal = useStylesConfirmModal();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [oopsOpen, setOopsOpen] = React.useState(false);\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [phone, setPhone] = React.useState('+7');\r\n  const [data, setData] = React.useState('');\r\n  const [time, setTime] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n  const [count, setCount] = React.useState('');\r\n  const [check, setCheck] = React.useState(false);\r\n  const [checkName, setCheckName] = React.useState(false);\r\n  const [labelName, setLabelName] = React.useState('Ваше имя');\r\n\r\n  const [openConfirmModal, setopenConfirmModal] = React.useState(false);\r\n\r\n  const handleOpenConfirmModal = () => {\r\n    setopenConfirmModal(true);\r\n  };\r\n\r\n  const handleCloseConfirmModal = () => {\r\n    setopenConfirmModal(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setName('');\r\n    setPhone('+7');\r\n    setData('');\r\n    setTime('');\r\n    setDescription('');\r\n    setCount('');\r\n    setCheck(false);\r\n\r\n    setOpen(false);\r\n  };\r\n  const handleCloseOops = () => {\r\n    setOopsOpen(false);\r\n  };\r\n\r\n  const handleChangeDate = (event) => {\r\n    setData(event.target.value);\r\n  };\r\n\r\n  const handleChangeDescription = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n  const handleChangeCount = (event) => {\r\n    if (!isNaN(event.target.value) && event.target.value < 100) {\r\n      setCount(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleChangeTime = (event) => {\r\n    setTime(event.target.value);\r\n  };\r\n\r\n  const handleChangePhone = (event) => {\r\n    if (!isNaN(event.target.value) && event.target.value.length < 13) {\r\n      setPhone(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleChangeName = (event) => {\r\n    setName(event.target.value);\r\n    if (re.test(event.target.value)) {\r\n      setLabelName('Имя только из букв');\r\n      setCheckName(false);\r\n    } else {\r\n      setLabelName('Ваше имя');\r\n      setCheckName(true);\r\n    }\r\n  };\r\n\r\n  const checkChanger = () => {\r\n    setCheck(!check);\r\n  };\r\n  const confirmClick = (event) => {\r\n    if (\r\n      data === '' ||\r\n      time === '' ||\r\n      phone === '' ||\r\n      name === '' ||\r\n      count === '' ||\r\n      !check ||\r\n      !checkName\r\n    ) {\r\n      alert('Введите все данные');\r\n      event.preventDefault();\r\n    } else {\r\n      event.preventDefault();\r\n      let info = JSON.stringify({\r\n        name,\r\n        phone,\r\n        description,\r\n        count,\r\n        data,\r\n        time,\r\n      });\r\n      handleOpenConfirmModal();\r\n      // setInterval(() => {\r\n      //   dispatch(postInfoTable(info));\r\n      //   window.location.reload();\r\n      // }, 3000);\r\n      dispatch(postInfoTable(info));\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <a className=\"btnMy\" onClick={handleOpen}>\r\n        ЗАБРОНИРОВАТЬ СТОЛ\r\n      </a>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={oopsOpen}\r\n        onClose={handleCloseOops}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Fade in={oopsOpen}>\r\n          <div className={classes.paper}>\r\n            {/* <img\r\n              className={classes.imgClose}\r\n              id=\"btnClose\"\r\n              onClick={handleCloseOops}\r\n              src={closeIconModal}\r\n              alt=\"\"\r\n            /> */}\r\n            <h2 id=\"tableNotAvailable\">Столов больше нет</h2>\r\n            <div id=\"tableNotAvailableText\">Заходите позже!</div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Забронировать столик</h2>\r\n            <form className={classes.root} noValidate>\r\n              <Container fluid>\r\n                <Row className=\"pt-3\">\r\n                  <Col className=\"text-right\">\r\n                    <div className=\"item\">\r\n                      <CssTextField\r\n                        required\r\n                        className={classes.margin}\r\n                        id=\"1custom-css-standard-input\"\r\n                        label={labelName}\r\n                        onChange={handleChangeName}\r\n                        value={name}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"text-left\">\r\n                    <div className=\"item\">\r\n                      <CssTextField\r\n                        required\r\n                        className={classes.margin}\r\n                        label=\"Ваш телефон\"\r\n                        id=\"custom-css-standard-input\"\r\n                        value={phone}\r\n                        onChange={handleChangePhone}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"pt-3\">\r\n                  <Col className=\"text-right\">\r\n                    <div className=\"item\">\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Дата *</InputLabel>\r\n                        <Select\r\n                          required\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={data}\r\n                          onChange={handleChangeDate}>\r\n                          {arrData &&\r\n                            arrData.map((value, index) => (\r\n                              <MenuItem key={index} value={value}>\r\n                                {value}\r\n                              </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"text-left\">\r\n                    {' '}\r\n                    <div className=\"item\">\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Время *</InputLabel>\r\n                        <Select\r\n                          required\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={time}\r\n                          onChange={handleChangeTime}>\r\n                          {arrTime &&\r\n                            arrTime.map((value, index) => (\r\n                              <MenuItem key={index} value={value}>\r\n                                {value}\r\n                              </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-3\">\r\n                  <Col className=\"text-right\">\r\n                    <div className=\"item\">\r\n                      <CssTextField\r\n                        required\r\n                        className={classes.margin}\r\n                        id=\"custom-css-standard-input\"\r\n                        label=\"Кол-во человек\"\r\n                        onChange={handleChangeCount}\r\n                        value={count}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"text-left\">\r\n                    <div className=\"item\">\r\n                      <CssTextField\r\n                        required\r\n                        className={classes.margin}\r\n                        id=\"custom-css-standard-input\"\r\n                        label=\"Пожелания\"\r\n                        onChange={handleChangeDescription}\r\n                        value={description}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"pt-3\">\r\n                  <Col className=\"text-center\">\r\n                    <div id=\"checkBox_Confirm\">\r\n                      <div id=\"checkBox\">\r\n                        <GreenCheckbox onClick={checkChanger} checked={check} />\r\n                        Согласен на обработку персональных данных *\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <div className=\"btn_priceInfo\">\r\n                  <div>\r\n                    <button onClick={confirmClick} className=\"btn2\">\r\n                      Отправить\r\n                    </button>\r\n                    <Modal\r\n                      aria-labelledby=\"transition-modal-title\"\r\n                      aria-describedby=\"transition-modal-description\"\r\n                      className={classesConfirmModal.modal}\r\n                      open={openConfirmModal}\r\n                      onClose={handleCloseConfirmModal}\r\n                      closeAfterTransition\r\n                      BackdropComponent={Backdrop}\r\n                      BackdropProps={{\r\n                        timeout: 500,\r\n                      }}>\r\n                      <Fade in={openConfirmModal}>\r\n                        <div className={classesConfirmModal.paper}>\r\n                          <h2 className=\"modalConfirmTopText\">Ваш столик забронирован!</h2>\r\n                          <p className=\"modalConfirmDownText\">\r\n                            В скором времени мы с вами свяжемся\r\n                          </p>\r\n                        </div>\r\n                      </Fade>\r\n                    </Modal>\r\n                  </div>\r\n\r\n                  <Link to=\"/menu/hookan\">\r\n                    <div className=\"priceInfo\">Все цены в разделе меню *</div>\r\n                  </Link>\r\n                </div>\r\n              </Container>\r\n            </form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableModal;\r\n","E:\\testGit\\hookan\\src\\frontend\\components\\Header.jsx",["392","393","394","395","396","397"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { BurgerMenu } from '../components';\r\nimport { Navbar, Container, NavbarBrand, Nav, Row, Col } from 'react-bootstrap';\r\nimport headerLogo from '../../assets/image/logo.png';\r\nimport NavbarToggle from 'react-bootstrap/esm/NavbarToggle';\r\nimport NavbarCollapse from 'react-bootstrap/esm/NavbarCollapse';\r\n\r\nimport '../css/Header.css';\r\nfunction Header({ activeItemProp, clickSmooth }) {\r\n  const [backgroundImageHeader, setBackgroundImageHeader] = React.useState('defaultHeader');\r\n  const [show, setShow] = React.useState(false);\r\n  const toggleShowClick = () => {\r\n    setShow(false);\r\n  };\r\n  const liItems = [\r\n    { name: 'МЕНЮ', link: 'menu/hookan', id: 1 },\r\n    { name: 'НОВОСТИ', link: 'news', id: 2 },\r\n    { name: 'ГАЛЕРЕЯ', link: 'galery', id: 0 },\r\n  ];\r\n  const listenScrollEvent = () => {\r\n    if (window.scrollY > 0) {\r\n      setBackgroundImageHeader('changeHeader');\r\n    } else {\r\n      setBackgroundImageHeader('defaultHeader');\r\n    }\r\n  };\r\n\r\n  const navbarStyle = {\r\n    height: '80px',\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('scroll', listenScrollEvent);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        className={\r\n          backgroundImageHeader === 'defaultHeader' && activeItemProp === null\r\n            ? 'navbarBackGroundTop'\r\n            : 'navbarBackGroundDefault'\r\n        }\r\n        style={navbarStyle}\r\n        fixed=\"top\"\r\n        expand=\"md\"\r\n        bg=\"dark\"\r\n        variant=\"dark\">\r\n        <Container>\r\n          <NavbarBrand>\r\n            <Link to=\"/\">\r\n              <img onClick={() => clickSmooth()} src={headerLogo} className=\"pb-3\" alt=\"logo\" />\r\n            </Link>\r\n          </NavbarBrand>\r\n\r\n          <NavbarCollapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <div className=\"ulHeader\">\r\n                {liItems.map((obj) => (\r\n                  <li\r\n                    onClick={() => clickSmooth()}\r\n                    className={activeItemProp === obj.id ? 'active' : ''}\r\n                    key={`${obj.name}:${obj.id}`}>\r\n                    <Link key={obj.id} to={`/${obj.link}`}>\r\n                      {obj.name}{' '}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </div>\r\n            </Nav>\r\n          </NavbarCollapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\nHeader.propTypes = {\r\n  activeItemProp: PropTypes.string.isRequired,\r\n  clickSmooth: PropTypes.func.isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  activeItemProp: null,\r\n};\r\n\r\nexport default Header;\r\n","E:\\testGit\\hookan\\src\\frontend\\components\\TrBlockEvents.jsx",["398"],"import React from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { deleteIdEventItems, editorIdEventItems } from '../redux/actions/serverMethods';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Button, Container, Col, Row } from 'react-bootstrap';\r\nimport '../css/TrBlock.css';\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  paper: {\r\n    borderRadius: '10px',\r\n\r\n    backgroundPosition: 'center',\r\n    backgroundColor: ' white;',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(0, 0, 0),\r\n    width: '530px',\r\n    height: '380px',\r\n    ['@media (max-width:767px)']: { height: '480px' },\r\n  },\r\n  imgClose: {\r\n    float: 'right',\r\n    margin: 30,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  formControl: {\r\n    width: 193,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction TrBlockEvents({ id, name, phone, email, description }) {\r\n  const [nameUser, setNameUser] = React.useState(name);\r\n  const handleChangeNameUser = (event) => {\r\n    setNameUser(event.target.value);\r\n  };\r\n\r\n  const [phoneUser, setPhoneUser] = React.useState(phone);\r\n  const handleChangePhoneUser = (event) => {\r\n    setPhoneUser(event.target.value);\r\n  };\r\n\r\n  const [emailUser, setEmailUser] = React.useState(email);\r\n  const handleChangeEmailUser = (event) => {\r\n    setEmailUser(event.target.value);\r\n  };\r\n\r\n  const [descriptionUser, setDescriptionUser] = React.useState(description);\r\n  const handleChangeDescriptionUser = (event) => {\r\n    setDescriptionUser(event.target.value);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setNameUser(name);\r\n    setPhoneUser(phone);\r\n    setEmailUser(email);\r\n    setDescriptionUser(description);\r\n    setOpen(false);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const delIdItem = (ids) => {\r\n    let tokenFromLocalStorage = localStorage.getItem('token');\r\n    dispatch(deleteIdEventItems(ids, tokenFromLocalStorage));\r\n    window.location.reload();\r\n  };\r\n\r\n  const editIdItem = (ids) => {\r\n    let info = JSON.stringify({\r\n      name: nameUser,\r\n      phone: phoneUser,\r\n      email: emailUser,\r\n      description: descriptionUser,\r\n    });\r\n    let tokenFromLocalStorage = localStorage.getItem('token');\r\n    dispatch(editorIdEventItems(ids, info, tokenFromLocalStorage));\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}>\r\n          <Fade in={open}>\r\n            <div className={classes.paper}>\r\n              <Container fluid>\r\n                <h2 id=\"transition-modal-title\">Редактирование # {id}</h2>\r\n                <Row>\r\n                  <Col className=\"text-center\">Имя</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    {' '}\r\n                    <div className=\"redactor_item\">\r\n                      <input\r\n                        value={nameUser}\r\n                        onChange={handleChangeNameUser}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col className=\"text-center\">Телефон</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <div className=\"redactor_item\">\r\n                      <input\r\n                        value={phoneUser}\r\n                        onChange={handleChangePhoneUser}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col className=\"text-center\">Емеил</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <div className=\"redactor_item\">\r\n                      <input\r\n                        value={emailUser}\r\n                        onChange={handleChangeEmailUser}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col className=\"text-center\">Коммент</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <div className=\"redactor_item\">\r\n                      <input\r\n                        value={descriptionUser}\r\n                        onChange={handleChangeDescriptionUser}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-3\">\r\n                  <Col className=\"text-center \">\r\n                    <Button onClick={() => editIdItem(id)} variant=\"dark\">\r\n                      Сохранить\r\n                    </Button>\r\n                  </Col>\r\n                  <Col className=\"text-center\">\r\n                    <Button onClick={handleClose} variant=\"dark\">\r\n                      Отменить\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n      <tr>\r\n        <td>{id}</td>\r\n        <td>{name}</td>\r\n        <td>{phone}</td>\r\n        <td>{email}</td>\r\n        <td>{description}</td>\r\n        <td>\r\n          <Button onClick={handleOpen} variant=\"dark\">\r\n            Изменить\r\n          </Button>\r\n        </td>\r\n        <td>\r\n          <Button onClick={() => delIdItem(id)} variant=\"dark\">\r\n            Удалить\r\n          </Button>\r\n        </td>\r\n        <td></td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nTrBlockEvents.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  phone: PropTypes.string,\r\n  email: PropTypes.string,\r\n  comment: PropTypes.string,\r\n};\r\nexport default TrBlockEvents;\r\n","E:\\testGit\\hookan\\src\\frontend\\components\\TopImg.jsx",[],"E:\\testGit\\hookan\\src\\frontend\\components\\EventRequestSection.jsx",["399","400"],"import React from 'react';\r\nimport { Container, Form, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport backGImage from '../../assets/image/dark-leather.png';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { postInfoEvent } from '../redux/actions/serverMethods';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../css/EventRequestSection.css';\r\n\r\nconst useStylesConfirmModal = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  paper: {\r\n    borderRadius: '10px',\r\n    backgroundImage: `url(${backGImage})`,\r\n    backgroundPosition: 'center',\r\n    backgroundColor: ' white;',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(0, 0, 0),\r\n    width: '600px',\r\n    height: '90px',\r\n    ['@media (max-width:767px)']: { width: '375px', height: '130px' },\r\n  },\r\n  imgClose: {\r\n    float: 'right',\r\n    margin: 30,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  formControl: {\r\n    width: 193,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction EventRequestSection() {\r\n  const [openConfirmModal, setopenConfirmModal] = React.useState(false);\r\n\r\n  const handleOpenConfirmModal = () => {\r\n    setopenConfirmModal(true);\r\n  };\r\n\r\n  const handleCloseConfirmModal = () => {\r\n    setopenConfirmModal(false);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const classesConfirmModal = useStylesConfirmModal();\r\n  const myRef = React.useRef();\r\n\r\n  const [nameUser, setNameUser] = React.useState('');\r\n  const [phoneUser, setPhoneUser] = React.useState('');\r\n  const [emailUser, setEmailUser] = React.useState('');\r\n  const [descriptionUser, setDescriptionUser] = React.useState('');\r\n\r\n  const handleChangeNameUser = (event) => {\r\n    setNameUser(event.target.value);\r\n  };\r\n\r\n  const handleChangePhoneUser = (event) => {\r\n    setPhoneUser(event.target.value);\r\n  };\r\n\r\n  const handleChangeEmailUser = (event) => {\r\n    setEmailUser(event.target.value);\r\n  };\r\n\r\n  const handleChangeDescriptionUser = (event) => {\r\n    setDescriptionUser(event.target.value);\r\n  };\r\n\r\n  const eventRequest = () => {\r\n    if (nameUser !== '' && phoneUser !== '' && emailUser !== '' && descriptionUser !== '') {\r\n      let info = JSON.stringify({\r\n        name: nameUser,\r\n        phone: phoneUser,\r\n        email: emailUser,\r\n        description: descriptionUser,\r\n      });\r\n      handleOpenConfirmModal();\r\n      dispatch(postInfoEvent(info));\r\n      // setInterval(() => {\r\n      //   dispatch(postInfoEvent(info));\r\n      // }, 3000);\r\n    } else {\r\n      alert('Введите данные');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-request-section-wrapper\">\r\n      <Container fluid ref={myRef} d className=\"uniInput pt-5 pb-5\">\r\n        <Row>\r\n          <Col className=\" text-center pb-5 \">\r\n            <h2 className=\"topTextRequest\">Оставить запрос на мероприятие</h2>\r\n            <hr className=\"short text-center\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"text-center pb-3 \">\r\n            <input value={nameUser} onChange={handleChangeNameUser} placeholder=\"ФИО\" type=\"text\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"text-center pb-3 \">\r\n            <input\r\n              value={phoneUser}\r\n              onChange={handleChangePhoneUser}\r\n              placeholder=\"Телефон\"\r\n              type=\"text\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"text-center pb-3 \">\r\n            <input\r\n              value={emailUser}\r\n              onChange={handleChangeEmailUser}\r\n              placeholder=\"Е-мейл\"\r\n              type=\"text\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"text-center pb-3 \">\r\n            <input\r\n              value={descriptionUser}\r\n              onChange={handleChangeDescriptionUser}\r\n              placeholder=\"Расскажите о мероприятии\"\r\n              type=\"text\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"text-center pb-5 \">\r\n            <Button onClick={eventRequest} style={{ width: '200px' }} variant=\"dark\">\r\n              <div className=\"btnRequest\">Отправить</div>\r\n            </Button>\r\n            <Modal\r\n              aria-labelledby=\"transition-modal-title\"\r\n              aria-describedby=\"transition-modal-description\"\r\n              className={classesConfirmModal.modal}\r\n              open={openConfirmModal}\r\n              onClose={handleCloseConfirmModal}\r\n              closeAfterTransition\r\n              BackdropComponent={Backdrop}\r\n              BackdropProps={{\r\n                timeout: 500,\r\n              }}>\r\n              <Fade in={openConfirmModal}>\r\n                <div className={classesConfirmModal.paper}>\r\n                  <h2 className=\"modalConfirmTopText\">Ваш мероприятие забронировано!</h2>\r\n                  <p className=\"modalConfirmDownText\">В скором времени мы с вами свяжемся</p>\r\n                </div>\r\n              </Fade>\r\n            </Modal>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventRequestSection;\r\n","E:\\testGit\\hookan\\src\\frontend\\components\\TrBLockComp.jsx",["401","402","403"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteIdCompItems, editorIdCompItems, postInfoComp } from '../redux/actions/serverMethods';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Container, Col, Row } from 'react-bootstrap';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport '../css/TrBlockComp.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  paper: {\r\n    borderRadius: '10px',\r\n\r\n    backgroundPosition: 'center',\r\n    backgroundColor: ' white;',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(0, 0, 0),\r\n    width: '530px',\r\n    height: '320px',\r\n    ['@media (max-width:767px)']: { height: '480px' },\r\n  },\r\n  imgClose: {\r\n    float: 'right',\r\n    margin: 30,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  formControl: {\r\n    width: 193,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction TrBLockComp({ id, name, phone, points }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [nameUser, setNameUser] = React.useState(name);\r\n  const handleChangeNameUser = (event) => {\r\n    setNameUser(event.target.value);\r\n  };\r\n\r\n  const [phoneUser, setPhoneUser] = React.useState(phone);\r\n  const handleChangePhoneUser = (event) => {\r\n    setPhoneUser(event.target.value);\r\n  };\r\n\r\n  const [pointsUser, setPointsUser] = React.useState(points);\r\n  const handleChangePointsUser = (event) => {\r\n    setPointsUser(event.target.value);\r\n  };\r\n  //////////////////////////////////////////////////////////////////////\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleClose = () => {\r\n    setNameUser(name);\r\n    setPhoneUser(phone);\r\n    setPointsUser(points);\r\n    setOpen(false);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const delIdItem = (ids) => {\r\n    let tokenFromLocalStorage = localStorage.getItem('token');\r\n    dispatch(deleteIdCompItems(ids, tokenFromLocalStorage));\r\n    window.location.reload();\r\n  };\r\n\r\n  const editIdItem = (ids) => {\r\n    let info = JSON.stringify({\r\n      name: nameUser,\r\n      phone: phoneUser,\r\n      points: pointsUser,\r\n    });\r\n    let tokenFromLocalStorage = localStorage.getItem('token');\r\n    dispatch(editorIdCompItems(ids, info, tokenFromLocalStorage));\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}>\r\n          <Fade in={open}>\r\n            <div className={classes.paper}>\r\n              <Container fluid>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <h2 id=\"transition-modal-title\">Редактирование # {id}</h2>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col className=\"text-center\">Имя</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <div className=\"redactor_item\">\r\n                      <input\r\n                        value={nameUser}\r\n                        onChange={handleChangeNameUser}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col className=\"text-center\">Телефон</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <div className=\"redactor_item\">\r\n                      <input\r\n                        value={phoneUser}\r\n                        onChange={handleChangePhoneUser}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col className=\"text-center\">Очки</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <div className=\"redactor_item\">\r\n                      <input\r\n                        value={pointsUser}\r\n                        onChange={handleChangePointsUser}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-3\">\r\n                  <Col className=\"text-center\">\r\n                    <Button onClick={() => editIdItem(id)} variant=\"dark\">\r\n                      Сохранить\r\n                    </Button>\r\n                  </Col>\r\n                  <Col className=\"text-center\">\r\n                    <Button onClick={handleClose} variant=\"dark\">\r\n                      Отменить\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n      <tr>\r\n        <td>{id}</td>\r\n        <td>{name}</td>\r\n        <td>{phone}</td>\r\n        <td>{points}</td>\r\n        <td>\r\n          <Button onClick={handleOpen} variant=\"dark\">\r\n            Изменить\r\n          </Button>\r\n        </td>\r\n        <td>\r\n          <Button\r\n            onClick={() => {\r\n              delIdItem(id);\r\n            }}\r\n            variant=\"dark\">\r\n            Удалить\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TrBLockComp;\r\n","E:\\testGit\\hookan\\src\\frontend\\components\\YandexMap.jsx",["404"],"import React from 'react';\r\n\r\nclass YandexMap extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapperGoogleMap\">\r\n        <iframe\r\n          src=\"https://yandex.ru/map-widget/v1/?um=constructor%3Ab2af018d5fcb1e75547ba387afaf8b1fd575e2ce9930f9c29cd42f1175ea84fe&amp;source=constructor\"\r\n          width=\"100%\"\r\n          height=\"300\"\r\n          frameBorder=\"0\"></iframe>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default YandexMap;\r\n","E:\\testGit\\hookan\\src\\frontend\\components\\EventSection.jsx",["405"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { IoIosCall } from 'react-icons/io';\r\n\r\nimport { BsPeopleFill, BsGeoAlt, BsCalendarFill } from 'react-icons/bs';\r\n\r\nimport '../css/EventSection.css';\r\n\r\nfunction EventSection() {\r\n  return (\r\n    <div className=\"event-section-wrapper\">\r\n      <Container className=\"pt-5 pb-5\">\r\n        <Row>\r\n          <Col sm=\"12\" className=\"topTextEvent text-center  \">\r\n            Ваше важное событие — наша грандиозная работа\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pb-5\">\r\n          <Col className=\"social text-center\" sm=\"3\">\r\n            <div className=\"pb-3 pt-5\">\r\n              <BsGeoAlt style={{ height: '30px', width: '30px' }} />\r\n            </div>\r\n\r\n            <h3 className=\"topTextItem text-center \">Расположение</h3>\r\n\r\n            <div>\r\n              ул. Промышленная, дом 6,\r\n              <br /> ЦФТ \"Нарвский\"\r\n              <span>, Санкт-Петербург</span>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"social text-center\" sm=\"3\">\r\n            <div className=\"pb-3 pt-5\">\r\n              <BsPeopleFill style={{ height: '30px', width: '30px' }} />\r\n            </div>\r\n\r\n            <h3 className=\"topTextItem text-center \">Вместимость</h3>\r\n\r\n            <div>Банкет – до 25 человек</div>\r\n          </Col>\r\n\r\n          <Col className=\"social text-center\" sm=\"3\">\r\n            <div className=\"pb-3 pt-5\">\r\n              <IoIosCall style={{ height: '30px', width: '30px' }} />\r\n            </div>\r\n\r\n            <h3 className=\"topTextItem text-center \">Контактный номер</h3>\r\n\r\n            <div>+7(911)926-60-10</div>\r\n          </Col>\r\n          <Col className=\"social text-center\" sm=\"3\">\r\n            <div className=\"pb-3 pt-5\">\r\n              <BsCalendarFill className=\"text-danger\" style={{ height: '30px', width: '30px' }} />\r\n            </div>\r\n\r\n            <h3 className=\"topTextItem text-danger \">Забронировать</h3>\r\n\r\n            <div className=\"text-danger\">\r\n              Оставьте запрос — мы поможем устроить ваше мероприятие\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventSection;\r\n","E:\\testGit\\hookan\\src\\frontend\\redux\\reducers\\tableReserve.js",[],"E:\\testGit\\hookan\\src\\frontend\\redux\\reducers\\nowData.js",[],"E:\\testGit\\hookan\\src\\frontend\\redux\\reducers\\headerMenu.js",[],"E:\\testGit\\hookan\\src\\frontend\\redux\\reducers\\serverMethods.js",[],"E:\\testGit\\hookan\\src\\frontend\\redux\\reducers\\refEvent.js",[],"E:\\testGit\\hookan\\src\\frontend\\pages\\MenuPageDrinks.jsx",["406"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { setHeaderItem, setMenuItem } from '../redux/actions/headerMenu';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../css/pageCss/MenuPage.css';\r\nimport { Container, Row, Col, ListGroup, Image } from 'react-bootstrap';\r\nimport menuItemDrinksPng1 from '../../assets/image/menuSectionDrinks1.jpg';\r\nfunction MenuPageDrinks() {\r\n  const activeMenuItem = useSelector(({ headerMenu }) => headerMenu.activeItemMenu);\r\n  const arrMenu = [\r\n    { name: 'Кальяны', link: 'menu/hookan', id: 0 },\r\n    { name: 'Напитки', link: 'menu/drinks', id: 1 },\r\n    { name: 'Чай', link: 'menu/tea', id: 2 },\r\n  ];\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(setHeaderItem(1));\r\n    dispatch(setMenuItem(1));\r\n  }, []);\r\n  return (\r\n    <div className=\"wrapperMenuPage\">\r\n      <Container className=\"pt-5 \">\r\n        <Row className=\"pt-5 pb-4\">\r\n          <Col className=\"text-center\">\r\n            <div className=\"topTextMenu\">Напитки</div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col className=\"text-center\"></Col>\r\n          <Col className=\"text-center\">\r\n            <div className=\"liMenuItems\">\r\n              <ListGroup horizontal>\r\n                {arrMenu.map((obj) => (\r\n                  <Link key={obj.id} to={`/${obj.link}`}>\r\n                    <ListGroup.Item\r\n                      className={\r\n                        activeMenuItem === obj.id ? 'activeMenuItem text-center' : 'text-center'\r\n                      }\r\n                      style={{ width: '200px' }}>\r\n                      <li>{obj.name}</li>\r\n                    </ListGroup.Item>\r\n                  </Link>\r\n                ))}\r\n              </ListGroup>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"text-center\"></Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"pt-5 pb-5\">\r\n        <Row className=\"pb-5\">\r\n          <Col className=\"text-center\">\r\n            <Image src={menuItemDrinksPng1} fluid />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuPageDrinks;\r\n","E:\\testGit\\hookan\\src\\frontend\\pages\\MenuPageTea.jsx",["407"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { setHeaderItem, setMenuItem } from '../redux/actions/headerMenu';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../css/pageCss/MenuPage.css';\r\nimport { Container, Row, Col, ListGroup, Image } from 'react-bootstrap';\r\nimport menuItemTeaPng1 from '../../assets/image/menuSectionTea1.jpg';\r\nfunction MenuPageTea() {\r\n  const activeMenuItem = useSelector(({ headerMenu }) => headerMenu.activeItemMenu);\r\n  const arrMenu = [\r\n    { name: 'Кальяны', link: 'menu/hookan', id: 0 },\r\n    { name: 'Напитки', link: 'menu/drinks', id: 1 },\r\n    { name: 'Чай', link: 'menu/tea', id: 2 },\r\n  ];\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(setHeaderItem(1));\r\n    dispatch(setMenuItem(2));\r\n  }, []);\r\n  return (\r\n    <div className=\"wrapperMenuPage\">\r\n      <Container className=\"pt-5 \">\r\n        <Row className=\"pt-5 pb-4\">\r\n          <Col className=\"text-center\">\r\n            <div className=\"topTextMenu\">Чай</div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col className=\"text-center\"></Col>\r\n          <Col className=\"text-center\">\r\n            <div className=\"liMenuItems\">\r\n              <ListGroup horizontal>\r\n                {arrMenu.map((obj) => (\r\n                  <Link key={obj.id} to={`/${obj.link}`}>\r\n                    <ListGroup.Item\r\n                      className={\r\n                        activeMenuItem === obj.id ? 'activeMenuItem text-center' : 'text-center'\r\n                      }\r\n                      style={{ width: '200px' }}>\r\n                      <li>{obj.name} </li>\r\n                    </ListGroup.Item>\r\n                  </Link>\r\n                ))}\r\n              </ListGroup>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"text-center\"></Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"pt-5 pb-5\">\r\n        <Row className=\"pb-5\">\r\n          <Col className=\"text-center\">\r\n            {' '}\r\n            <Image src={menuItemTeaPng1} fluid />{' '}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuPageTea;\r\n","E:\\testGit\\hookan\\src\\frontend\\pages\\MainPage.jsx",["408","409"],"import React from 'react';\r\nimport { setHeaderItem } from '../redux/actions/headerMenu';\r\nimport { setRefEvent } from '../redux/actions/refEvent';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  AboutSection,\r\n  MenuSection,\r\n  NewsSection,\r\n  EventSection,\r\n  EventRequestSection,\r\n  TopImg,\r\n} from '../components';\r\n\r\nfunction MainPage({ clickSmooth }) {\r\n  const dispatch = useDispatch();\r\n  const ref = useSelector(({ refEvent }) => refEvent.ref);\r\n  const smoothToEventSelector = () =>\r\n    ref.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'nearest',\r\n      inline: 'end',\r\n    });\r\n  const myRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(setHeaderItem(null));\r\n    dispatch(setRefEvent(myRef));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"wrapperMainPage \">\r\n      <TopImg smoothToEventSelectorProp={smoothToEventSelector} />\r\n      <AboutSection smoothProp={clickSmooth} />\r\n\r\n      <MenuSection smoothProp={clickSmooth} />\r\n\r\n      <div ref={myRef}>\r\n        <EventSection smoothToEventSelectorProp={smoothToEventSelector} />\r\n\r\n        <EventRequestSection />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","E:\\testGit\\hookan\\src\\frontend\\pages\\NewsPage.jsx",["410"],"import React from 'react';\r\n\r\nimport { setHeaderItem } from '../redux/actions/headerMenu';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NewsSection } from '../components';\r\nfunction News() {\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(setHeaderItem(2));\r\n  }, []);\r\n  return (\r\n    <div className=\"wrapperNews\">\r\n      <NewsSection />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default News;\r\n","E:\\testGit\\hookan\\src\\frontend\\pages\\MenuPageHookan.jsx",["411"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { setHeaderItem, setMenuItem } from '../redux/actions/headerMenu';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../css/pageCss/MenuPage.css';\r\nimport { Container, Row, Col, ListGroup, Image } from 'react-bootstrap';\r\nimport menuItemHookanPng1 from '../../assets/image/menuSectionHookan1.jpg';\r\nimport menuItemHookanPng2 from '../../assets/image/menuSectionHookan2.jpg';\r\nfunction MenuPage() {\r\n  const activeMenuItem = useSelector(({ headerMenu }) => headerMenu.activeItemMenu);\r\n  const arrMenu = [\r\n    { name: 'Кальяны', link: 'menu/hookan', id: 0 },\r\n    { name: 'Напитки', link: 'menu/drinks', id: 1 },\r\n    { name: 'Чай', link: 'menu/tea', id: 2 },\r\n  ];\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(setHeaderItem(1));\r\n    dispatch(setMenuItem(0));\r\n  }, []);\r\n  return (\r\n    <div className=\"wrapperMenuPage\">\r\n      <Container className=\"pt-5 \">\r\n        <Row className=\"pt-5 pb-4\">\r\n          <Col className=\"text-center\">\r\n            <div className=\"topTextMenu\">Кальяны</div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col className=\"text-center\"></Col>\r\n          <Col className=\"text-center\">\r\n            <div className=\"liMenuItems\">\r\n              <ListGroup horizontal>\r\n                {arrMenu.map((obj) => (\r\n                  <Link key={obj.id} to={`/${obj.link}`}>\r\n                    <ListGroup.Item\r\n                      className={\r\n                        activeMenuItem === obj.id ? 'activeMenuItem text-center' : 'text-center'\r\n                      }\r\n                      style={{ width: '200px' }}>\r\n                      <li>{obj.name} </li>\r\n                    </ListGroup.Item>\r\n                  </Link>\r\n                ))}\r\n              </ListGroup>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"text-center\"></Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"pt-5 pb-5\">\r\n        <Row className=\"pb-5\">\r\n          <Col className=\"text-center\">\r\n            <Image src={menuItemHookanPng1} thumbnail />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pb-5\">\r\n          <Col className=\"text-center\">\r\n            <Image src={menuItemHookanPng2} thumbnail />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuPage;\r\n","E:\\testGit\\hookan\\src\\frontend\\pages\\AdminPage.jsx",["412","413","414","415","416","417"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport '../css/AdminPage.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  setAuth,\r\n  fetchInfoTablesAdmin,\r\n  fetchInfoEventsAdmin,\r\n  fetchInfoCompAdmin,\r\n  postAuthInfo,\r\n} from '../redux/actions/serverMethods';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Table } from 'react-bootstrap';\r\nimport {\r\n  TrBlockTables,\r\n  TrBlockEvents,\r\n  TrBlockComp,\r\n  ButtonClientAddComp,\r\n  ButtonClientAddTables,\r\n  ButtonClientAddEvents,\r\n} from '../components';\r\nimport { Button } from 'react-bootstrap';\r\nimport { setHeaderItem } from '../redux/actions/headerMenu';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'purple',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'purple',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'purple',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'purple',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'purple',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction AdminPage() {\r\n  const trueToken = useSelector(({ serverMethods }) => serverMethods.token);\r\n  const itemsTable = useSelector(({ serverMethods }) => serverMethods.itemsTables);\r\n  const itemsEvents = useSelector(({ serverMethods }) => serverMethods.itemsEvents);\r\n  const itemsComp = useSelector(({ serverMethods }) => serverMethods.itemsComp);\r\n  const dispatch = useDispatch();\r\n  const authCheck = useSelector(({ serverMethods }) => serverMethods.isAuth);\r\n  const [login, setLogin] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  const handleChangeLogin = (event) => {\r\n    setLogin(event.target.value);\r\n  };\r\n\r\n  const handleChangePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const sendClick = () => {\r\n    let fullInputs = login + ':' + password;\r\n    let token = btoa(fullInputs);\r\n    let info = JSON.stringify({\r\n      login,\r\n      password,\r\n    });\r\n    // dispatch(postAuthInfo(info, token));\r\n\r\n    // localStorage.setItem('token', trueToken);\r\n    //'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token', 'Access-Control-Allow-Methods': 'HEAD, GET, POST, PUT, PATCH, DELETE', 'Access-Control-Allow-Origin':'*'\r\n    axios\r\n      .post('http://localhost:8080/api/login', info, {\r\n        headers: { Authorization: `Basic ${token}`, 'Content-Type': 'application/json' },\r\n      })\r\n      .then((response) => {\r\n        localStorage.setItem('token', response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const logOutClick = () => {\r\n    localStorage.removeItem('token');\r\n    window.location.reload();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(setHeaderItem(3));\r\n\r\n    if (localStorage.getItem('token')) {\r\n      let tokenCheck = localStorage.getItem('token');\r\n      let info = JSON.stringify({\r\n        tokenCheck,\r\n      });\r\n      let tokenFromLocal = localStorage.getItem('token');\r\n      axios\r\n        .post('http://localhost:8080/api/login/check', info, {\r\n          headers: { Authorization: `Basic ${tokenCheck}`, 'Content-Type': 'application/json' },\r\n        })\r\n        .then((response) => {\r\n          // let tokenFromLocal = localStorage.getItem('token');\r\n          dispatch(setAuth(true));\r\n          dispatch(fetchInfoTablesAdmin(tokenFromLocal));\r\n          dispatch(fetchInfoEventsAdmin(tokenFromLocal));\r\n          dispatch(fetchInfoCompAdmin(tokenFromLocal));\r\n        })\r\n        .catch((error) => {});\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"wrapperAdminPage\">\r\n      <div className={!authCheck ? 'form-registration' : 'form-registration-none'}>\r\n        <h2 className=\"text-center\">Вход в систему</h2>\r\n\r\n        <div className=\"btxt text-center\">\r\n          <CssTextField\r\n            required\r\n            label=\"Login\"\r\n            id=\"r112s\"\r\n            value={login}\r\n            onChange={handleChangeLogin}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"btxt text-center\">\r\n          <CssTextField\r\n            required\r\n            label=\"Password\"\r\n            id=\"r1223s\"\r\n            value={password}\r\n            onChange={handleChangePassword}\r\n          />\r\n        </div>\r\n        <div className=\"formBtn2\">\r\n          <button onClick={sendClick} className=\"btn2\">\r\n            Отправить\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {authCheck ? (\r\n        <div>\r\n          <div className=\"adminContent\">\r\n            <div className=\"text-center\">\r\n              <h1 className=\"topTextInfo\">Данные по клиентам</h1>\r\n            </div>\r\n            <Table striped bordered hover size=\"sm\">\r\n              <thead>\r\n                <tr className=\"tHeader\">\r\n                  <th width=\"1%\">id</th>\r\n                  <th width=\"8%\">Имя</th>\r\n                  <th width=\"5%\">Телефон</th>\r\n                  <th width=\"5%\">Дата</th>\r\n                  <th width=\"4%\">Время</th>\r\n                  <th width=\"3%\">Кол.чел</th>\r\n                  <th width=\"20%\">Комментарий</th>\r\n                  <th width=\"27%\">Редактировать</th>\r\n                  <th width=\"27%\">Удалить</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"tContent\">\r\n                {itemsTable.length != 0 ? (\r\n                  itemsTable.map((obj) => <TrBlockTables key={obj.id} {...obj} />)\r\n                ) : (\r\n                  <> </>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n            {itemsTable.length === 0 ? (\r\n              <div className=\"text-center bold\">Пока никого нет</div>\r\n            ) : (\r\n              <> </>\r\n            )}\r\n            <div className=\"adminTools\">\r\n              <ButtonClientAddTables />\r\n            </div>\r\n          </div>\r\n          <div className=\"adminContent\">\r\n            <div className=\"text-center\">\r\n              <h1 className=\"topTextInfo\">Данные по мероприятиям</h1>\r\n            </div>\r\n\r\n            <Table striped bordered hover size=\"sm\">\r\n              <thead>\r\n                <tr className=\"tHeader\">\r\n                  <th width=\"1%\">id</th>\r\n                  <th width=\"15%\">Имя</th>\r\n                  <th width=\"15%\">Телефон</th>\r\n                  <th width=\"21%\">Емейл</th>\r\n                  <th width=\"28%\">Комментарий</th>\r\n                  <th width=\"10%\">Редактировать</th>\r\n                  <th width=\"10%\">Удалить</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"tContent\">\r\n                {itemsEvents.length != 0 ? (\r\n                  itemsEvents.map((obj) => <TrBlockEvents key={obj.id} {...obj} />)\r\n                ) : (\r\n                  <> </>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n            {itemsEvents.length === 0 ? (\r\n              <div className=\"text-center bold\">Пока никого нет</div>\r\n            ) : (\r\n              <> </>\r\n            )}\r\n            <div className=\"adminTools\">\r\n              <ButtonClientAddEvents />\r\n            </div>\r\n          </div>\r\n          <div className=\"adminContent\">\r\n            <div className=\"text-center\">\r\n              <h1 className=\"topTextInfo\">Данные по конкурсу</h1>\r\n            </div>\r\n            <Table striped bordered hover size=\"sm\">\r\n              <thead>\r\n                <tr className=\"tHeader\">\r\n                  <th width=\"4%\">id</th>\r\n                  <th width=\"20%\">Имя</th>\r\n                  <th width=\"20%\">Телефон</th>\r\n                  <th width=\"26%\">Очки</th>\r\n                  <th width=\"15%\">Редактировать</th>\r\n                  <th width=\"15%\">Удалить</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"tContent\">\r\n                {itemsComp.length != 0 ? (\r\n                  itemsComp.map((obj) => <TrBlockComp key={obj.id} {...obj} />)\r\n                ) : (\r\n                  <> </>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n            {itemsComp.length === 0 ? (\r\n              <div className=\"text-center bold\">Пока никого нет</div>\r\n            ) : (\r\n              <> </>\r\n            )}\r\n            <div className=\"adminTools\">\r\n              <ButtonClientAddComp />\r\n            </div>\r\n            <Button onClick={logOutClick} variant=\"dark\">\r\n              Выход из системы\r\n            </Button>\r\n          </div>{' '}\r\n        </div>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n","E:\\testGit\\hookan\\src\\frontend\\redux\\actions\\serverMethods.js",[],"E:\\testGit\\hookan\\src\\frontend\\redux\\actions\\headerMenu.js",[],["418","419"],"E:\\testGit\\hookan\\src\\frontend\\redux\\actions\\refEvent.js",[],"E:\\testGit\\hookan\\src\\frontend\\components\\TrBlockTables.jsx",["420"],"import React from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { deleteIdTableItems, editorIdTableItem } from '../redux/actions/serverMethods';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport '../css/TrBlock.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  paper: {\r\n    borderRadius: '10px',\r\n\r\n    backgroundPosition: 'center',\r\n    backgroundColor: ' white;',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(0, 0, 0),\r\n    width: '530px',\r\n    height: '480px',\r\n    ['@media (max-width:767px)']: { height: '480px' },\r\n  },\r\n  imgClose: {\r\n    float: 'right',\r\n    margin: 30,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  formControl: {\r\n    width: 193,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction TrBlock({ id, name, phone, data, time, count, description }) {\r\n  const [nameUser, setNameUser] = React.useState(name);\r\n  const handleChangeNameUser = (event) => {\r\n    setNameUser(event.target.value);\r\n  };\r\n\r\n  const [phoneUser, setPhoneUser] = React.useState(phone);\r\n  const handleChangePhoneUser = (event) => {\r\n    setPhoneUser(event.target.value);\r\n  };\r\n\r\n  const [dataUser, setDataUser] = React.useState(data);\r\n  const handleChangeDataUser = (event) => {\r\n    setDataUser(event.target.value);\r\n  };\r\n\r\n  const [timeUser, setTimeUser] = React.useState(time);\r\n  const handleChangeTimeUser = (event) => {\r\n    setTimeUser(event.target.value);\r\n  };\r\n\r\n  const [countUser, setCountUser] = React.useState(count);\r\n  const handleChangeCountUser = (event) => {\r\n    setCountUser(event.target.value);\r\n  };\r\n\r\n  const [descriptionUser, setDescriptionUser] = React.useState(description);\r\n  const handleChangeDescriptionUser = (event) => {\r\n    setDescriptionUser(event.target.value);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setNameUser(name);\r\n    setPhoneUser(phone);\r\n    setDataUser(data);\r\n    setTimeUser(time);\r\n    setCountUser(count);\r\n    setDescriptionUser(description);\r\n    setOpen(false);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const delIdItem = (ids) => {\r\n    let tokenFromLocalStorage = localStorage.getItem('token');\r\n    dispatch(deleteIdTableItems(ids, tokenFromLocalStorage));\r\n    window.location.reload();\r\n  };\r\n\r\n  const editIdItem = (ids) => {\r\n    let info = JSON.stringify({\r\n      name: nameUser,\r\n      phone: phoneUser,\r\n      data: dataUser,\r\n      time: timeUser,\r\n      count: countUser,\r\n      description: descriptionUser,\r\n    });\r\n    let tokenFromLocalStorage = localStorage.getItem('token');\r\n    dispatch(editorIdTableItem(ids, info, tokenFromLocalStorage));\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}>\r\n          <Fade in={open}>\r\n            <div className={classes.paper}>\r\n              <Container>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <h2 id=\"transition-modal-title\">Редактирование # {id}</h2>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">Имя</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <div className=\"redactor_item\">\r\n                      <input\r\n                        value={nameUser}\r\n                        onChange={handleChangeNameUser}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">Телефон</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <div className=\"redactor_item\">\r\n                      <input\r\n                        value={phoneUser}\r\n                        onChange={handleChangePhoneUser}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">Дата</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <div className=\"redactor_item\">\r\n                      <input\r\n                        value={dataUser}\r\n                        onChange={handleChangeDataUser}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col className=\"text-center\">Время</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <div className=\"redactor_item\">\r\n                      <input\r\n                        value={timeUser}\r\n                        onChange={handleChangeTimeUser}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col className=\"text-center\"> Кол.чел</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <div className=\"redactor_item\">\r\n                      <input\r\n                        value={countUser}\r\n                        onChange={handleChangeCountUser}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col className=\"text-center\"> Коммент</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <div className=\"redactor_item\">\r\n                      <input\r\n                        value={descriptionUser}\r\n                        onChange={handleChangeDescriptionUser}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"pt-3\">\r\n                  <Col className=\"text-center\">\r\n                    <Button onClick={() => editIdItem(id)} variant=\"dark\">\r\n                      Сохранить\r\n                    </Button>\r\n                  </Col>\r\n                  <Col className=\"text-center\">\r\n                    <Button onClick={handleClose} variant=\"dark\">\r\n                      Отменить\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n      <tr>\r\n        <td>{id}</td>\r\n        <td>{name}</td>\r\n        <td>{phone}</td>\r\n        <td>{data} </td>\r\n\r\n        <td>{time}</td>\r\n        <td>{count}</td>\r\n        <td>{description}</td>\r\n        <td>\r\n          <Button onClick={handleOpen} variant=\"dark\">\r\n            Изменить\r\n          </Button>\r\n        </td>\r\n        <td>\r\n          <Button onClick={() => delIdItem(id)} variant=\"dark\">\r\n            Удалить\r\n          </Button>\r\n        </td>\r\n        <td></td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\nTrBlock.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  phone: PropTypes.string,\r\n  data: PropTypes.string,\r\n  clock: PropTypes.string,\r\n  count: PropTypes.string,\r\n  comment: PropTypes.string,\r\n};\r\nexport default TrBlock;\r\n","E:\\testGit\\hookan\\src\\frontend\\components\\ButtonClientAddComp.jsx",["421","422"],"import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { postInfoComp } from '../redux/actions/serverMethods';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  paper: {\r\n    borderRadius: '10px',\r\n\r\n    backgroundPosition: 'center',\r\n    backgroundColor: ' white;',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(0, 0, 0),\r\n    width: '530px',\r\n    height: '300px',\r\n    ['@media (max-width:767px)']: { height: '480px' },\r\n  },\r\n  imgClose: {\r\n    float: 'right',\r\n    margin: 30,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  formControl: {\r\n    width: 193,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction ButtonClientAddComp() {\r\n  const [openAdd, setOpenAdd] = React.useState(false);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleOpenAdd = () => {\r\n    setOpenAdd(true);\r\n  };\r\n  const handleCloseAdd = () => {\r\n    setOpenAdd(false);\r\n  };\r\n  const addItemToComp = () => {\r\n    if (nameUserAdd != '') {\r\n      let info = JSON.stringify({\r\n        name: nameUserAdd,\r\n        phone: phoneUserAdd,\r\n        points: pointsUserAdd,\r\n      });\r\n      let token = localStorage.getItem('token');\r\n      dispatch(postInfoComp(info, token));\r\n      window.location.reload();\r\n    } else {\r\n      alert('Введите хотя-бы имя');\r\n    }\r\n  };\r\n  const [nameUserAdd, setNameUserAdd] = React.useState('');\r\n  const handleChangeNameUserAdd = (event) => {\r\n    setNameUserAdd(event.target.value);\r\n  };\r\n\r\n  const [phoneUserAdd, setPhoneUserAdd] = React.useState('');\r\n  const handleChangePhoneUserAdd = (event) => {\r\n    setPhoneUserAdd(event.target.value);\r\n  };\r\n\r\n  const [pointsUserAdd, setPointsUserAdd] = React.useState('');\r\n  const handleChangePointsUserAdd = (event) => {\r\n    setPointsUserAdd(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button onClick={handleOpenAdd} variant=\"dark\">\r\n        Добавить клиента\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={openAdd}\r\n        onClose={handleCloseAdd}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Fade in={openAdd}>\r\n          <div className={classes.paper}>\r\n            <Container fluid>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <h2 id=\"transition-modal-title\">Новый клиент по конкурсу</h2>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">Имя</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"redactor_item\">\r\n                    <input\r\n                      value={nameUserAdd}\r\n                      onChange={handleChangeNameUserAdd}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">Телефон</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"redactor_item\">\r\n                    <input\r\n                      value={phoneUserAdd}\r\n                      onChange={handleChangePhoneUserAdd}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">Очки</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"redactor_item\">\r\n                    <input\r\n                      value={pointsUserAdd}\r\n                      onChange={handleChangePointsUserAdd}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"pt-3\">\r\n                <Col className=\"text-center\">\r\n                  <Button onClick={addItemToComp} variant=\"dark\">\r\n                    Сохранить\r\n                  </Button>\r\n                </Col>\r\n                <Col className=\"text-center\">\r\n                  <Button onClick={handleCloseAdd} variant=\"dark\">\r\n                    Отменить\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonClientAddComp;\r\n","E:\\testGit\\hookan\\src\\frontend\\components\\ButtonClientAddTables.jsx",["423","424"],"import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { postInfoTable } from '../redux/actions/serverMethods';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  paper: {\r\n    borderRadius: '10px',\r\n\r\n    backgroundPosition: 'center',\r\n    backgroundColor: ' white;',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(0, 0, 0),\r\n    width: '530px',\r\n    height: '500px',\r\n    ['@media (max-width:767px)']: { height: '480px' },\r\n  },\r\n  imgClose: {\r\n    float: 'right',\r\n    margin: 30,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  formControl: {\r\n    width: 193,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction ButtonClientAddTables() {\r\n  const [openAdd, setOpenAdd] = React.useState(false);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleOpenAdd = () => {\r\n    setOpenAdd(true);\r\n  };\r\n  const handleCloseAdd = () => {\r\n    setOpenAdd(false);\r\n  };\r\n  const addItemToComp = () => {\r\n    if (nameUserAdd != '') {\r\n      let info = JSON.stringify({\r\n        name: nameUserAdd,\r\n        phone: phoneUserAdd,\r\n        data: dataUserAdd,\r\n        time: timeUserAdd,\r\n        count: countUserAdd,\r\n        description: descriptionUserAdd,\r\n      });\r\n      dispatch(postInfoTable(info));\r\n      window.location.reload();\r\n    } else {\r\n      alert('Введите хотя-бы имя');\r\n    }\r\n  };\r\n  const [nameUserAdd, setNameUserAdd] = React.useState('');\r\n  const handleChangeNameUserAdd = (event) => {\r\n    setNameUserAdd(event.target.value);\r\n  };\r\n\r\n  const [phoneUserAdd, setPhoneUserAdd] = React.useState('');\r\n  const handleChangePhoneUserAdd = (event) => {\r\n    setPhoneUserAdd(event.target.value);\r\n  };\r\n\r\n  const [dataUserAdd, setDataUserAdd] = React.useState('');\r\n  const handleChangeDataUserAdd = (event) => {\r\n    setDataUserAdd(event.target.value);\r\n  };\r\n\r\n  const [timeUserAdd, setTimeUserAdd] = React.useState('');\r\n  const handleChangeTimeUserAdd = (event) => {\r\n    setTimeUserAdd(event.target.value);\r\n  };\r\n\r\n  const [countUserAdd, setCountUserAdd] = React.useState('');\r\n  const handleChangeCountUserAdd = (event) => {\r\n    setCountUserAdd(event.target.value);\r\n  };\r\n  const [descriptionUserAdd, setDescriptionUserAdd] = React.useState('');\r\n  const handleChangeDescriptionUserAdd = (event) => {\r\n    setDescriptionUserAdd(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button onClick={handleOpenAdd} variant=\"dark\">\r\n        Добавить клиента\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={openAdd}\r\n        onClose={handleCloseAdd}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Fade in={openAdd}>\r\n          <div className={classes.paper}>\r\n            <Container fluid>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <h2 id=\"transition-modal-title\">Новый клиент по конкурсу</h2>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">Имя</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"redactor_item\">\r\n                    <input\r\n                      value={nameUserAdd}\r\n                      onChange={handleChangeNameUserAdd}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">Телефон</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"redactor_item\">\r\n                    <input\r\n                      value={phoneUserAdd}\r\n                      onChange={handleChangePhoneUserAdd}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">Дата</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"redactor_item\">\r\n                    <input\r\n                      value={dataUserAdd}\r\n                      onChange={handleChangeDataUserAdd}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">Время</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"redactor_item\">\r\n                    <input\r\n                      value={timeUserAdd}\r\n                      onChange={handleChangeTimeUserAdd}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">Кол.человек</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"redactor_item\">\r\n                    <input\r\n                      value={countUserAdd}\r\n                      onChange={handleChangeCountUserAdd}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col className=\"text-center\">Комментарий</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"redactor_item\">\r\n                    <input\r\n                      value={descriptionUserAdd}\r\n                      onChange={handleChangeDescriptionUserAdd}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"pt-3\">\r\n                <Col className=\"text-center\">\r\n                  <Button onClick={addItemToComp} variant=\"dark\">\r\n                    Сохранить\r\n                  </Button>\r\n                </Col>\r\n                <Col className=\"text-center\">\r\n                  <Button onClick={handleCloseAdd} variant=\"dark\">\r\n                    Отменить\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonClientAddTables;\r\n","E:\\testGit\\hookan\\src\\frontend\\components\\ButtonClientAddEvents.jsx",["425","426"],"import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { postInfoEvent } from '../redux/actions/serverMethods';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  paper: {\r\n    borderRadius: '10px',\r\n\r\n    backgroundPosition: 'center',\r\n    backgroundColor: ' white;',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(0, 0, 0),\r\n    width: '530px',\r\n    height: '400px',\r\n    ['@media (max-width:767px)']: { height: '480px' },\r\n  },\r\n  imgClose: {\r\n    float: 'right',\r\n    margin: 30,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  formControl: {\r\n    width: 193,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction ButtonClientAddEvents() {\r\n  const [openAdd, setOpenAdd] = React.useState(false);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleOpenAdd = () => {\r\n    setOpenAdd(true);\r\n  };\r\n  const handleCloseAdd = () => {\r\n    setOpenAdd(false);\r\n  };\r\n  const addItemToComp = () => {\r\n    if (nameUserAdd != '') {\r\n      let info = JSON.stringify({\r\n        name: nameUserAdd,\r\n        phone: phoneUserAdd,\r\n        email: emailUserAdd,\r\n\r\n        description: descriptionUserAdd,\r\n      });\r\n      dispatch(postInfoEvent(info));\r\n      window.location.reload();\r\n    } else {\r\n      alert('Введите хотя-бы имя');\r\n    }\r\n  };\r\n  const [nameUserAdd, setNameUserAdd] = React.useState('');\r\n  const handleChangeNameUserAdd = (event) => {\r\n    setNameUserAdd(event.target.value);\r\n  };\r\n\r\n  const [phoneUserAdd, setPhoneUserAdd] = React.useState('');\r\n  const handleChangePhoneUserAdd = (event) => {\r\n    setPhoneUserAdd(event.target.value);\r\n  };\r\n\r\n  const [emailUserAdd, setEmailUserAdd] = React.useState('');\r\n  const handleChangeEmailUserAdd = (event) => {\r\n    setEmailUserAdd(event.target.value);\r\n  };\r\n\r\n  const [descriptionUserAdd, setDescriptionUserAdd] = React.useState('');\r\n  const handleChangeDescriptionUserAdd = (event) => {\r\n    setDescriptionUserAdd(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button onClick={handleOpenAdd} variant=\"dark\">\r\n        Добавить клиента\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={openAdd}\r\n        onClose={handleCloseAdd}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Fade in={openAdd}>\r\n          <div className={classes.paper}>\r\n            <Container fluid>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <h2 id=\"transition-modal-title\">Новый клиент по мероприятию</h2>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">Имя</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"redactor_item\">\r\n                    <input\r\n                      value={nameUserAdd}\r\n                      onChange={handleChangeNameUserAdd}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">Телефон</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"redactor_item\">\r\n                    <input\r\n                      value={phoneUserAdd}\r\n                      onChange={handleChangePhoneUserAdd}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">Емейл</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"redactor_item\">\r\n                    <input\r\n                      value={emailUserAdd}\r\n                      onChange={handleChangeEmailUserAdd}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col className=\"text-center\">Комментарий</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"redactor_item\">\r\n                    <input\r\n                      value={descriptionUserAdd}\r\n                      onChange={handleChangeDescriptionUserAdd}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"pt-3\">\r\n                <Col className=\"text-center\">\r\n                  <Button onClick={addItemToComp} variant=\"dark\">\r\n                    Сохранить\r\n                  </Button>\r\n                </Col>\r\n                <Col className=\"text-center\">\r\n                  <Button onClick={handleCloseAdd} variant=\"dark\">\r\n                    Отменить\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonClientAddEvents;\r\n","E:\\testGit\\hookan\\src\\frontend\\pages\\GaleryPage.jsx",["427","428"],"import React from 'react';\r\n\r\nimport { setHeaderItem } from '../redux/actions/headerMenu';\r\nimport { GalerySliderWrapper } from '../components';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { TopImg } from '../components';\r\nfunction AboutUsPage() {\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(setHeaderItem(0));\r\n  }, []);\r\n  return (\r\n    <div className=\"wrapperAboutUs\">\r\n      <GalerySliderWrapper />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutUsPage;\r\n",{"ruleId":"429","severity":1,"message":"430","line":42,"column":6,"nodeType":"431","endLine":42,"endColumn":8,"suggestions":"432"},{"ruleId":"429","severity":1,"message":"430","line":30,"column":6,"nodeType":"431","endLine":30,"endColumn":8,"suggestions":"433"},{"ruleId":"434","severity":1,"message":"435","line":2,"column":10,"nodeType":"436","messageId":"437","endLine":2,"endColumn":14},{"ruleId":"434","severity":1,"message":"438","line":8,"column":8,"nodeType":"436","messageId":"437","endLine":8,"endColumn":24},{"ruleId":"434","severity":1,"message":"439","line":7,"column":10,"nodeType":"436","messageId":"437","endLine":7,"endColumn":16},{"ruleId":"429","severity":1,"message":"430","line":12,"column":6,"nodeType":"431","endLine":12,"endColumn":8,"suggestions":"440"},{"ruleId":"434","severity":1,"message":"441","line":3,"column":8,"nodeType":"436","messageId":"437","endLine":3,"endColumn":22},{"ruleId":"434","severity":1,"message":"442","line":13,"column":10,"nodeType":"436","messageId":"437","endLine":13,"endColumn":22},{"ruleId":"443","severity":1,"message":"444","line":47,"column":5,"nodeType":"445","messageId":"446","endLine":47,"endColumn":70,"fix":"447"},{"ruleId":"443","severity":1,"message":"444","line":85,"column":5,"nodeType":"445","messageId":"446","endLine":85,"endColumn":70,"fix":"448"},{"ruleId":"434","severity":1,"message":"449","line":155,"column":10,"nodeType":"436","messageId":"437","endLine":155,"endColumn":20},{"ruleId":"450","severity":1,"message":"451","line":259,"column":7,"nodeType":"452","endLine":259,"endColumn":49},{"ruleId":"429","severity":1,"message":"430","line":9,"column":6,"nodeType":"431","endLine":9,"endColumn":8,"suggestions":"453"},{"ruleId":"434","severity":1,"message":"454","line":8,"column":21,"nodeType":"436","messageId":"437","endLine":8,"endColumn":29},{"ruleId":"455","replacedBy":"456"},{"ruleId":"457","replacedBy":"458"},{"ruleId":"459","severity":1,"message":"460","line":7,"column":9,"nodeType":"452","endLine":11,"endColumn":27},{"ruleId":"429","severity":1,"message":"430","line":83,"column":6,"nodeType":"431","endLine":83,"endColumn":8,"suggestions":"461"},{"ruleId":"462","severity":1,"message":"463","line":134,"column":32,"nodeType":"464","messageId":"465","endLine":134,"endColumn":34},{"ruleId":"462","severity":1,"message":"463","line":164,"column":33,"nodeType":"464","messageId":"465","endLine":164,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":196,"column":31,"nodeType":"464","messageId":"465","endLine":196,"endColumn":33},{"ruleId":"443","severity":1,"message":"444","line":29,"column":5,"nodeType":"445","messageId":"446","endLine":29,"endColumn":54,"fix":"466"},{"ruleId":"434","severity":1,"message":"467","line":2,"column":8,"nodeType":"436","messageId":"437","endLine":2,"endColumn":17},{"ruleId":"434","severity":1,"message":"468","line":2,"column":21,"nodeType":"436","messageId":"437","endLine":2,"endColumn":25},{"ruleId":"443","severity":1,"message":"444","line":31,"column":5,"nodeType":"445","messageId":"446","endLine":31,"endColumn":70,"fix":"469"},{"ruleId":"443","severity":1,"message":"444","line":29,"column":5,"nodeType":"445","messageId":"446","endLine":29,"endColumn":54,"fix":"470"},{"ruleId":"429","severity":1,"message":"430","line":20,"column":6,"nodeType":"431","endLine":20,"endColumn":8,"suggestions":"471"},{"ruleId":"429","severity":1,"message":"430","line":19,"column":6,"nodeType":"431","endLine":19,"endColumn":8,"suggestions":"472"},{"ruleId":"429","severity":1,"message":"430","line":19,"column":6,"nodeType":"431","endLine":19,"endColumn":8,"suggestions":"473"},{"ruleId":"434","severity":1,"message":"467","line":2,"column":8,"nodeType":"436","messageId":"437","endLine":2,"endColumn":17},{"ruleId":"443","severity":1,"message":"444","line":29,"column":5,"nodeType":"445","messageId":"446","endLine":29,"endColumn":54,"fix":"474"},{"ruleId":"455","replacedBy":"475"},{"ruleId":"457","replacedBy":"476"},{"ruleId":"429","severity":1,"message":"430","line":43,"column":6,"nodeType":"431","endLine":43,"endColumn":8,"suggestions":"477"},{"ruleId":"434","severity":1,"message":"478","line":3,"column":31,"nodeType":"436","messageId":"437","endLine":3,"endColumn":36},{"ruleId":"479","severity":1,"message":"480","line":12,"column":1,"nodeType":"481","messageId":"482","endLine":13,"endColumn":2},{"ruleId":"483","severity":1,"message":"484","line":34,"column":25,"nodeType":"485","endLine":34,"endColumn":57},{"ruleId":"483","severity":1,"message":"484","line":44,"column":25,"nodeType":"485","endLine":44,"endColumn":57},{"ruleId":"483","severity":1,"message":"484","line":56,"column":25,"nodeType":"485","endLine":56,"endColumn":57},{"ruleId":"483","severity":1,"message":"484","line":97,"column":17,"nodeType":"485","endLine":97,"endColumn":49},{"ruleId":"483","severity":1,"message":"484","line":110,"column":17,"nodeType":"485","endLine":110,"endColumn":49},{"ruleId":"483","severity":1,"message":"484","line":123,"column":17,"nodeType":"485","endLine":123,"endColumn":49},{"ruleId":"434","severity":1,"message":"454","line":8,"column":21,"nodeType":"436","messageId":"437","endLine":8,"endColumn":29},{"ruleId":"434","severity":1,"message":"441","line":3,"column":8,"nodeType":"436","messageId":"437","endLine":3,"endColumn":22},{"ruleId":"434","severity":1,"message":"442","line":13,"column":10,"nodeType":"436","messageId":"437","endLine":13,"endColumn":22},{"ruleId":"443","severity":1,"message":"444","line":47,"column":5,"nodeType":"445","messageId":"446","endLine":47,"endColumn":70,"fix":"486"},{"ruleId":"443","severity":1,"message":"444","line":85,"column":5,"nodeType":"445","messageId":"446","endLine":85,"endColumn":70,"fix":"487"},{"ruleId":"450","severity":1,"message":"451","line":256,"column":7,"nodeType":"452","endLine":256,"endColumn":49},{"ruleId":"434","severity":1,"message":"488","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":20},{"ruleId":"434","severity":1,"message":"489","line":5,"column":47,"nodeType":"436","messageId":"437","endLine":5,"endColumn":50},{"ruleId":"434","severity":1,"message":"490","line":5,"column":52,"nodeType":"436","messageId":"437","endLine":5,"endColumn":55},{"ruleId":"434","severity":1,"message":"491","line":7,"column":8,"nodeType":"436","messageId":"437","endLine":7,"endColumn":20},{"ruleId":"434","severity":1,"message":"492","line":13,"column":10,"nodeType":"436","messageId":"437","endLine":13,"endColumn":14},{"ruleId":"434","severity":1,"message":"493","line":14,"column":9,"nodeType":"436","messageId":"437","endLine":14,"endColumn":24},{"ruleId":"443","severity":1,"message":"444","line":29,"column":5,"nodeType":"445","messageId":"446","endLine":29,"endColumn":54,"fix":"494"},{"ruleId":"434","severity":1,"message":"468","line":2,"column":21,"nodeType":"436","messageId":"437","endLine":2,"endColumn":25},{"ruleId":"443","severity":1,"message":"444","line":31,"column":5,"nodeType":"445","messageId":"446","endLine":31,"endColumn":70,"fix":"495"},{"ruleId":"434","severity":1,"message":"467","line":2,"column":8,"nodeType":"436","messageId":"437","endLine":2,"endColumn":17},{"ruleId":"434","severity":1,"message":"496","line":4,"column":48,"nodeType":"436","messageId":"437","endLine":4,"endColumn":60},{"ruleId":"443","severity":1,"message":"444","line":29,"column":5,"nodeType":"445","messageId":"446","endLine":29,"endColumn":54,"fix":"497"},{"ruleId":"459","severity":1,"message":"460","line":7,"column":9,"nodeType":"452","endLine":11,"endColumn":27},{"ruleId":"434","severity":1,"message":"467","line":2,"column":8,"nodeType":"436","messageId":"437","endLine":2,"endColumn":17},{"ruleId":"429","severity":1,"message":"430","line":19,"column":6,"nodeType":"431","endLine":19,"endColumn":8,"suggestions":"498"},{"ruleId":"429","severity":1,"message":"430","line":19,"column":6,"nodeType":"431","endLine":19,"endColumn":8,"suggestions":"499"},{"ruleId":"434","severity":1,"message":"500","line":9,"column":3,"nodeType":"436","messageId":"437","endLine":9,"endColumn":14},{"ruleId":"429","severity":1,"message":"430","line":29,"column":6,"nodeType":"431","endLine":29,"endColumn":8,"suggestions":"501"},{"ruleId":"429","severity":1,"message":"430","line":10,"column":6,"nodeType":"431","endLine":10,"endColumn":8,"suggestions":"502"},{"ruleId":"429","severity":1,"message":"430","line":20,"column":6,"nodeType":"431","endLine":20,"endColumn":8,"suggestions":"503"},{"ruleId":"434","severity":1,"message":"504","line":10,"column":3,"nodeType":"436","messageId":"437","endLine":10,"endColumn":15},{"ruleId":"434","severity":1,"message":"505","line":50,"column":9,"nodeType":"436","messageId":"437","endLine":50,"endColumn":18},{"ruleId":"429","severity":1,"message":"430","line":115,"column":6,"nodeType":"431","endLine":115,"endColumn":8,"suggestions":"506"},{"ruleId":"462","severity":1,"message":"463","line":168,"column":36,"nodeType":"464","messageId":"465","endLine":168,"endColumn":38},{"ruleId":"462","severity":1,"message":"463","line":202,"column":37,"nodeType":"464","messageId":"465","endLine":202,"endColumn":39},{"ruleId":"462","severity":1,"message":"463","line":234,"column":35,"nodeType":"464","messageId":"465","endLine":234,"endColumn":37},{"ruleId":"455","replacedBy":"507"},{"ruleId":"457","replacedBy":"508"},{"ruleId":"443","severity":1,"message":"444","line":30,"column":5,"nodeType":"445","messageId":"446","endLine":30,"endColumn":54,"fix":"509"},{"ruleId":"443","severity":1,"message":"444","line":27,"column":5,"nodeType":"445","messageId":"446","endLine":27,"endColumn":54,"fix":"510"},{"ruleId":"462","severity":1,"message":"463","line":56,"column":21,"nodeType":"464","messageId":"465","endLine":56,"endColumn":23},{"ruleId":"443","severity":1,"message":"444","line":27,"column":5,"nodeType":"445","messageId":"446","endLine":27,"endColumn":54,"fix":"511"},{"ruleId":"462","severity":1,"message":"463","line":56,"column":21,"nodeType":"464","messageId":"465","endLine":56,"endColumn":23},{"ruleId":"443","severity":1,"message":"444","line":27,"column":5,"nodeType":"445","messageId":"446","endLine":27,"endColumn":54,"fix":"512"},{"ruleId":"462","severity":1,"message":"463","line":56,"column":21,"nodeType":"464","messageId":"465","endLine":56,"endColumn":23},{"ruleId":"434","severity":1,"message":"439","line":7,"column":10,"nodeType":"436","messageId":"437","endLine":7,"endColumn":16},{"ruleId":"429","severity":1,"message":"430","line":12,"column":6,"nodeType":"431","endLine":12,"endColumn":8,"suggestions":"513"},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["514"],["515"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'aboutSectionImg3' is defined but never used.","'TopImg' is defined but never used.",["516"],"'closeIconModal' is defined but never used.","'ModalConfirm' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['@media (max-width:767px)'] found.","Property","unnecessarilyComputedProperty",{"range":"517","text":"518"},{"range":"519","text":"518"},"'checkPhone' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["520"],"'CardDeck' is defined but never used.","no-native-reassign",["521"],"no-negated-in-lhs",["522"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["523"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"524","text":"518"},"'PropTypes' is defined but never used.","'Form' is defined but never used.",{"range":"525","text":"518"},{"range":"526","text":"518"},["527"],["528"],["529"],{"range":"530","text":"518"},["521"],["522"],["531"],"'Image' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",{"range":"532","text":"518"},{"range":"533","text":"518"},"'BurgerMenu' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'NavbarToggle' is defined but never used.","'show' is assigned a value but never used.","'toggleShowClick' is assigned a value but never used.",{"range":"534","text":"518"},{"range":"535","text":"518"},"'postInfoComp' is defined but never used.",{"range":"536","text":"518"},["537"],["538"],"'NewsSection' is defined but never used.",["539"],["540"],["541"],"'postAuthInfo' is defined but never used.","'trueToken' is assigned a value but never used.",["542"],["521"],["522"],{"range":"543","text":"518"},{"range":"544","text":"518"},{"range":"545","text":"518"},{"range":"546","text":"518"},["547"],{"desc":"548","fix":"549"},{"desc":"548","fix":"550"},{"desc":"548","fix":"551"},[1553,1581],"'@media (max-width:767px)'",[2380,2408],{"desc":"548","fix":"552"},"no-global-assign","no-unsafe-negation",{"desc":"548","fix":"553"},[896,924],[1027,1055],[897,925],{"desc":"548","fix":"554"},{"desc":"548","fix":"555"},{"desc":"548","fix":"556"},[913,941],{"desc":"548","fix":"557"},[1607,1635],[2434,2462],[915,943],[1027,1055],[931,959],{"desc":"548","fix":"558"},{"desc":"548","fix":"559"},{"desc":"548","fix":"560"},{"desc":"548","fix":"561"},{"desc":"548","fix":"562"},{"desc":"548","fix":"563"},[952,980],[858,886],[859,887],[859,887],{"desc":"548","fix":"564"},"Update the dependencies array to be: [dispatch]",{"range":"565","text":"566"},{"range":"567","text":"566"},{"range":"568","text":"566"},{"range":"569","text":"566"},{"range":"570","text":"566"},{"range":"571","text":"566"},{"range":"572","text":"566"},{"range":"573","text":"566"},{"range":"574","text":"566"},{"range":"575","text":"566"},{"range":"576","text":"566"},{"range":"577","text":"566"},{"range":"578","text":"566"},{"range":"579","text":"566"},{"range":"580","text":"566"},{"range":"581","text":"566"},[1101,1103],"[dispatch]",[771,773],[359,361],[255,257],[2415,2417],[891,893],[820,822],[811,813],[1149,1151],[820,822],[811,813],[772,774],[301,303],[891,893],[3651,3653],[359,361]]